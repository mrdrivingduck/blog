import{_ as s,c as a,a as n,o as i}from"./app-7eKjwDat.js";const l={};function t(r,e){return i(),a("div",null,e[0]||(e[0]=[n(`<h1 id="chapter-2-basic-commands-and-directory-hierarchy" tabindex="-1"><a class="header-anchor" href="#chapter-2-basic-commands-and-directory-hierarchy"><span>Chapter 2 - Basic Commands and Directory Hierarchy</span></a></h1><p>Created by : Mr Dk.</p><p>2019 / 06 / 06 20:58</p><p>@Nanjing, Jiangsu, China</p><hr><h2 id="_2-1-the-bourne-shell-bin-sh" tabindex="-1"><a class="header-anchor" href="#_2-1-the-bourne-shell-bin-sh"><span>2.1 The Bourne Shell: /bin/sh</span></a></h2><p>shell 是用于执行命令的程序。shell script：包含一系列 shell 命令的文本文件。</p><p>有很多类型的 Unix shell，但基本特征全部来源于 Bourne shell：于贝尔实验室开发的标准 shell，运行于 Unix 的早期版本。Linux 使用加强版的 Bourne shell - <em>bash</em>。bash 是大部分 Linux 发行版的默认 shell</p><h2 id="_2-2-using-the-shell" tabindex="-1"><a class="header-anchor" href="#_2-2-using-the-shell"><span>2.2 Using the Shell</span></a></h2><h3 id="_2-2-1-the-shell-window" tabindex="-1"><a class="header-anchor" href="#_2-2-1-the-shell-window"><span>2.2.1 The Shell Window</span></a></h3><h3 id="_2-2-2-cat" tabindex="-1"><a class="header-anchor" href="#_2-2-2-cat"><span>2.2.2 cat</span></a></h3><p>输出一个或多个文件内容，当输出多个文件时，形成拼接 (concatenation)，因此得名。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> file1 file2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-2-3-standard-input-and-standard-output" tabindex="-1"><a class="header-anchor" href="#_2-2-3-standard-input-and-standard-output"><span>2.2.3 Standard Input and Standard Output</span></a></h3><p>Unix 使用 I/O stream 读写数据，stream 是一个很灵活的概念 - 文件 / 设备 / 终端 / 其它 stream。如果使用 <code>cat</code> 时不加文件名，<code>cat</code> 将会继续执行，默认从 kernel 的标准输入获取参数，内核将标准输入连接到 terminal。</p><ul><li><code>CTRL-D</code> 用于停止目前的标准输入</li><li><code>CTRL-C</code> 用于终结程序</li></ul><p><code>cat</code> 默认输出到标准输出，内核将标准输出连接到 terminal。大部分程序如果不指定输入文件，则从标准输入读取；部分程序输出到标准输出，部分程序输出到文件。</p><h2 id="_2-3-basic-commands" tabindex="-1"><a class="header-anchor" href="#_2-3-basic-commands"><span>2.3 Basic Commands</span></a></h2><h3 id="_2-3-1-ls" tabindex="-1"><a class="header-anchor" href="#_2-3-1-ls"><span>2.3.1 ls</span></a></h3><p><code>ls</code> 列出目录中的内容，默认输出当前目录。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token comment"># detailed(long) listing</span></span>
<span class="line"><span class="token function">ls</span> <span class="token parameter variable">-F</span> <span class="token comment"># file type information</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-2-cp" tabindex="-1"><a class="header-anchor" href="#_2-3-2-cp"><span>2.3.2 cp</span></a></h3><p>拷贝文件。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cp</span> file1 file2 <span class="token comment"># copy file1 to file2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>拷贝一些文件到一个目录。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cp</span> file1 <span class="token punctuation">..</span>. fileN <span class="token function">dir</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-3-3-mv" tabindex="-1"><a class="header-anchor" href="#_2-3-3-mv"><span>2.3.3 mv</span></a></h3><p>最简单的形式：重命名。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mv</span> file1 file2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将一些文件移动到一个目录。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mv</span> file1 <span class="token punctuation">..</span>. fileN <span class="token function">dir</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-3-4-touch" tabindex="-1"><a class="header-anchor" href="#_2-3-4-touch"><span>2.3.4 touch</span></a></h3><p>创建文件。如果文件已经存在，则不会改变该文件，但会更新文件的修改时间。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">touch</span> <span class="token function">file</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-3-5-rm" tabindex="-1"><a class="header-anchor" href="#_2-3-5-rm"><span>2.3.5 rm</span></a></h3><h3 id="_2-3-6-echo" tabindex="-1"><a class="header-anchor" href="#_2-3-6-echo"><span>2.3.6 echo</span></a></h3><h2 id="_2-4-navigating-directories" tabindex="-1"><a class="header-anchor" href="#_2-4-navigating-directories"><span>2.4 Navigating Directories</span></a></h2><p>Unix 的目录以 <code>/</code> 开头。</p><h3 id="_2-4-1-cd" tabindex="-1"><a class="header-anchor" href="#_2-4-1-cd"><span>2.4.1 cd</span></a></h3><h3 id="_2-4-2-mkdir" tabindex="-1"><a class="header-anchor" href="#_2-4-2-mkdir"><span>2.4.2 mkdir</span></a></h3><h3 id="_2-4-3-rmdir" tabindex="-1"><a class="header-anchor" href="#_2-4-3-rmdir"><span>2.4.3 rmdir</span></a></h3><h3 id="_2-4-4-shell-globbing-wildcards" tabindex="-1"><a class="header-anchor" href="#_2-4-4-shell-globbing-wildcards"><span>2.4.4 Shell Globbing (Wildcards)</span></a></h3><ul><li><code>*</code> 匹配任意字符</li><li><code>?</code> 匹配任意单个字符</li></ul><p>在命令执行之前将字符进行扩展</p><h2 id="_2-5-intermediate-commands" tabindex="-1"><a class="header-anchor" href="#_2-5-intermediate-commands"><span>2.5 Intermediate Commands</span></a></h2><h3 id="_2-5-1-grep" tabindex="-1"><a class="header-anchor" href="#_2-5-1-grep"><span>2.5.1 grep</span></a></h3><p><code>grep</code> 从文件或输入流中，打印符合表达式的行。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">grep</span> root /etc/* <span class="token comment"># print lines contain &#39;root&#39; in all files under /etc</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>-i</code> - for case-insensitive matches</li><li><code>-v</code> - inverts the search - print all lines <strong>don&#39;t</strong> match</li></ul><p><code>grep</code> 的 pattern 支持正则表达式。</p><h3 id="_2-5-2-less" tabindex="-1"><a class="header-anchor" href="#_2-5-2-less"><span>2.5.2 less</span></a></h3><p>当文件或输出较大时使用，每次只会看到一个屏幕的信息。</p><h3 id="_2-5-3-pwd" tabindex="-1"><a class="header-anchor" href="#_2-5-3-pwd"><span>2.5.3 pwd</span></a></h3><h3 id="_2-5-4-diff" tabindex="-1"><a class="header-anchor" href="#_2-5-4-diff"><span>2.5.4 diff</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">diff</span> file1 file2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>diff -u</code> 适用于一些自动化工具。</p><h3 id="_2-5-5-file" tabindex="-1"><a class="header-anchor" href="#_2-5-5-file"><span>2.5.5 file</span></a></h3><p>不确定一个文件的格式。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">file</span> <span class="token function">file</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-5-6-find-and-locate" tabindex="-1"><a class="header-anchor" href="#_2-5-6-find-and-locate"><span>2.5.6 find and locate</span></a></h3><p>在指定目录中寻找指定文件。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">find</span> <span class="token function">dir</span> <span class="token parameter variable">-name</span> <span class="token function">file</span> <span class="token parameter variable">-print</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-5-7-head-and-tail" tabindex="-1"><a class="header-anchor" href="#_2-5-7-head-and-tail"><span>2.5.7 head and tail</span></a></h3><p>分别显示头 10 行和尾 10 行。</p><ul><li><code>head -&lt;n&gt;</code> - 显示 n 行</li><li><code>head +&lt;n&gt;</code> - 从第 n 行开始显示</li></ul><h3 id="_2-5-8-sort" tabindex="-1"><a class="header-anchor" href="#_2-5-8-sort"><span>2.5.8 sort</span></a></h3><p>快速将文本文件的每行以字母序排序。</p><ul><li><code>sort -n</code>：按数值排序</li><li><code>sort -r</code>：逆序</li></ul><h2 id="_2-6-changing-your-password-and-shell" tabindex="-1"><a class="header-anchor" href="#_2-6-changing-your-password-and-shell"><span>2.6 Changing Your Password and Shell</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">passwd</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-7-dot-files" tabindex="-1"><a class="header-anchor" href="#_2-7-dot-files"><span>2.7 Dot Files</span></a></h2><p>显示 dot files。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ls</span> <span class="token parameter variable">-a</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>部分程序默认不显示它们。</p><h2 id="_2-8-environment-and-shell-variables" tabindex="-1"><a class="header-anchor" href="#_2-8-environment-and-shell-variables"><span>2.8 Environment and Shell Variables</span></a></h2><p>shell 能存储临时变量。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">STUFF</span><span class="token operator">=</span>blah</span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$STUFF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Unix 系统中的所有进程都有环境变量存储区，系统会将环境变量传递给所有进程。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">STUFF</span><span class="token operator">=</span>blah</span>
<span class="line"><span class="token builtin class-name">export</span> STUFF</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-9-the-command-path" tabindex="-1"><a class="header-anchor" href="#_2-9-the-command-path"><span>2.9 The Command Path</span></a></h2><p><code>PATH</code> 是一个环境变量，其中包含 <code>command path</code>。shell 在执行命令时会从 path 中搜索，路径用 <code>:</code> 分隔。打印所有的环境变量：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将某个路径加入到环境变量之前 / 之后：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>dir:<span class="token environment constant">$PATH</span></span>
<span class="line"><span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:dir</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>小心操作，不然可能会覆盖 PATH</li><li>重新启动 terminal 即可</li></ul><h2 id="_2-10-special-characters" tabindex="-1"><a class="header-anchor" href="#_2-10-special-characters"><span>2.10 Special Characters</span></a></h2><h2 id="_2-11-command-line-editing" tabindex="-1"><a class="header-anchor" href="#_2-11-command-line-editing"><span>2.11 Command-Line Editing</span></a></h2><h2 id="_2-12-text-editors" tabindex="-1"><a class="header-anchor" href="#_2-12-text-editors"><span>2.12 Text Editors</span></a></h2><h2 id="_2-13-getting-online-help" tabindex="-1"><a class="header-anchor" href="#_2-13-getting-online-help"><span>2.13 Getting Online Help</span></a></h2><h2 id="_2-14-shell-input-and-output" tabindex="-1"><a class="header-anchor" href="#_2-14-shell-input-and-output"><span>2.14 Shell Input and Output</span></a></h2><p>将一条命令的输出从 terminal 转移到文件中：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">command</span> <span class="token operator">&gt;</span> <span class="token function">file</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>如果文件不存在，将会被创建</li><li>如果文件存在，原有文件将会被覆盖</li></ul><p>如果想追加而不是覆盖：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">command</span> <span class="token operator">&gt;&gt;</span> <span class="token function">file</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将命令的标准输出作为另一条命令的标准输入：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">head</span> /proc/cpuinfo <span class="token operator">|</span> <span class="token function">tr</span> a-z A-Z</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-14-1-standard-error" tabindex="-1"><a class="header-anchor" href="#_2-14-1-standard-error"><span>2.14.1 Standard Error</span></a></h3><p>如果重定向后 terminal 依旧有输出，那么它来自 standard error。将 stderr 重定向到文件，使用 <code>2e</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ls</span> /ffff <span class="token operator">&gt;</span> f <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> e</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将 stderr 与输出至于 stdout 同样的位置，使用 <code>&gt;&amp;</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ls</span> /ffff <span class="token operator">&gt;</span> f <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>文件描述符：</p><ul><li>stdin - 0</li><li>stdout - 1</li><li>stderr - 2</li></ul><h3 id="_2-14-2-standard-input-redirection" tabindex="-1"><a class="header-anchor" href="#_2-14-2-standard-input-redirection"><span>2.14.2 Standard Input Redirection</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">head</span> <span class="token operator">&lt;</span> /proc/cpuinfo</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但通常来说没有必要，因为大部分输入接收文件名作为参数。</p><h2 id="_2-15-understanding-error-messages" tabindex="-1"><a class="header-anchor" href="#_2-15-understanding-error-messages"><span>2.15 Understanding Error Messages</span></a></h2><h2 id="_2-16-listing-and-manipulating-processes" tabindex="-1"><a class="header-anchor" href="#_2-16-listing-and-manipulating-processes"><span>2.16 Listing and Manipulating Processes</span></a></h2><h3 id="_2-16-1-command-options" tabindex="-1"><a class="header-anchor" href="#_2-16-1-command-options"><span>2.16.1 Command Options</span></a></h3><p>系统上的每一个进程都被分配了数值的 process ID (PID)</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ps</span></span>
<span class="line"><span class="token function">ps</span> x <span class="token comment"># running process of user</span></span>
<span class="line"><span class="token function">ps</span> ax <span class="token comment"># all processes on the system</span></span>
<span class="line"><span class="token function">ps</span> u <span class="token comment"># detailed information on processes</span></span>
<span class="line"><span class="token function">ps</span> w <span class="token comment"># full command names</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>PID - Process ID</li><li>TTY - Terminal device where the process is running</li><li>STAT - The process status</li><li>TIME - The total amount of time running on CPU</li><li>COMMAND</li></ul><p><code>$$</code> 是一个 shell 变量，存储了当前 shell 的 PID。</p><h3 id="_2-16-2-killing-processes" tabindex="-1"><a class="header-anchor" href="#_2-16-2-killing-processes"><span>2.16.2 Killing Processes</span></a></h3><p>当执行 <code>kill</code> 时，请求内核发送信号给对应进程。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">kill</span> <span class="token punctuation">[</span>-<span class="token environment constant">TERM</span><span class="token punctuation">]</span> pid <span class="token comment"># terninate</span></span>
<span class="line"><span class="token function">kill</span> <span class="token parameter variable">-STOP</span> pid <span class="token comment"># stop</span></span>
<span class="line"><span class="token function">kill</span> <span class="token parameter variable">-CONT</span> pid <span class="token comment"># continue</span></span>
<span class="line"><span class="token function">kill</span> <span class="token parameter variable">-INT</span> pid <span class="token comment"># CTRL-C</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>kill 比较粗暴，OS 直接回收内存。内核通过数值表示不同的信号，因此也可以直接通过数值发送信号。</p><h3 id="_2-16-3-job-control" tabindex="-1"><a class="header-anchor" href="#_2-16-3-job-control"><span>2.16.3 Job Control</span></a></h3><h3 id="_2-16-4-background-processes" tabindex="-1"><a class="header-anchor" href="#_2-16-4-background-processes"><span>2.16.4 Background Processes</span></a></h3><p>在 shell 执行命令时，下一个 shell 行会在程序执行停止后才显示。如果想要在后台执行这个程序，使用 <code>&amp;</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">gunzip file.gz <span class="token operator">&amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>shell 会通过打印新的后台进程的 PID 进行回应。如果后台进程想从 stdin 中读取内容，将导致 freeze 或 terminate。如果后台进程输出到 stdout 或 stderr，terminal 中可能会出现意料之外的输出信息。</p><h2 id="_2-17-file-modes-and-permissions" tabindex="-1"><a class="header-anchor" href="#_2-17-file-modes-and-permissions"><span>2.17 File Modes and Permissions</span></a></h2><p>每个 Unix 的文件都有权限，决定了是否能够读、写、执行</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ ls -l</span>
<span class="line">-rw-rw-rw- 1 mrdrivingduck mrdrivingduck 15 Jun  5 09:32 ddd.txt</span>
<span class="line">-rw-rw-rw- 1 mrdrivingduck mrdrivingduck 12 Jun  5 09:31 mmm.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第一位为 Type <ul><li><code>-</code> 为文件</li><li><code>d</code> 为目录</li></ul></li><li>之后每三位分别代表： <ul><li>User permissions</li><li>Group permissions</li><li>Other permissions (World permissions)</li></ul></li></ul><p>取值可以为：</p><ul><li><code>r</code> - readable</li><li><code>w</code> - writable</li><li><code>x</code> - executable</li><li><code>-</code> - NO</li></ul><h3 id="_2-17-1-modifying-permissions" tabindex="-1"><a class="header-anchor" href="#_2-17-1-modifying-permissions"><span>2.17.1 Modifying Permissions</span></a></h3><p>使用 <code>chmod</code> 命令</p><ul><li><code>u</code> - user</li><li><code>g</code> - group</li><li><code>o</code> - other</li></ul><p>添加权限 - <code>+</code>；收回权限 - <code>-</code>。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">chmod</span> g+r <span class="token function">file</span></span>
<span class="line"><span class="token function">chmod</span> go+r <span class="token function">file</span></span>
<span class="line"><span class="token function">chmod</span> o-w <span class="token function">file</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以用数值一次性修改 permission bits。<strong>目录</strong> 也有权限。</p><ul><li>readable - 可以列出目录中的所有内容</li><li>executable - 才可以访问目录中的文件</li></ul><h3 id="_2-17-2-symbolic-links" tabindex="-1"><a class="header-anchor" href="#_2-17-2-symbolic-links"><span>2.17.2 Symbolic Links</span></a></h3><p>一个指向另一个文件或目录的文件：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ ls -l</span>
<span class="line">lrwxrwxrwx 1 mrdrivingduck mrdrivingduck   19 Jun  6 20:35 myuser -&gt; /home/mrdrivingduck</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-17-3-creating-symbolic-links" tabindex="-1"><a class="header-anchor" href="#_2-17-3-creating-symbolic-links"><span>2.17.3 Creating Symbolic Links</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ln</span> <span class="token parameter variable">-s</span> target linkname</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>-s</code> 代表这是软链接，不是硬链接。</p><h2 id="_2-18-archiving-and-compressing-files" tabindex="-1"><a class="header-anchor" href="#_2-18-archiving-and-compressing-files"><span>2.18 Archiving and Compressing Files</span></a></h2><p>归档和压缩是有区别的：</p><ul><li>归档是把文件归到一起</li><li>压缩是把文件进行压缩</li></ul><h3 id="_2-18-1-gzip" tabindex="-1"><a class="header-anchor" href="#_2-18-1-gzip"><span>2.18.1 gzip</span></a></h3><p>GNU Zip 是 Unix 的标准压缩程序，文件后缀名为 <code>.gz</code>。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">gunzip file.gz <span class="token comment"># uncompress</span></span>
<span class="line"><span class="token function">gzip</span> <span class="token function">file</span> <span class="token comment"># compress</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-18-2-tar" tabindex="-1"><a class="header-anchor" href="#_2-18-2-tar"><span>2.18.2 tar</span></a></h3><p><code>gzip</code> 无法将文件进行归档，只能压缩单一的文件。<code>tar</code> 可以将多个文件和目录归档到一个文件。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">tar</span> cvf archive.tar file1 file2 <span class="token punctuation">..</span>.</span>
<span class="line"><span class="token function">tar</span> xvf archive.tar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>c</code> - create mode</li><li><code>x</code> - extract mode (unpack)</li><li><code>v</code> - Verbose diagnostic output - 在归档时输出归档的文件和目录</li><li><code>f</code> - file option - 命令的下一个参数必须是对应的归档文件名</li></ul><p>在 unpacking 前，最好检测 <code>.tar</code> 文件的内容 - <code>t</code>：table-of-contents mode。该模式检查了归档的完整性，并打印所有内部文件的文件名。</p><h3 id="_2-18-3-compressed-archives-tar-gz" tabindex="-1"><a class="header-anchor" href="#_2-18-3-compressed-archives-tar-gz"><span>2.18.3 Compressed Archives (.tar.gz)</span></a></h3><p>对于这种类型的文件的处理分为两步：</p><ol><li>解压缩，去掉 <code>.gz</code> 后缀</li><li>解归档，去掉 <code>.tar</code> 后缀</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">gunzip file.tar.gz</span>
<span class="line"><span class="token function">tar</span> xvf file.tar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-18-4-zcat" tabindex="-1"><a class="header-anchor" href="#_2-18-4-zcat"><span>2.18.4 zcat</span></a></h3><p>可以使用一条命令简化：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">zcat file.tar.gz <span class="token operator">|</span> <span class="token function">tar</span> xvf -</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>zcat</code> == <code>gunzip -dc</code></li><li><code>-d</code> - decompress</li><li><code>-c</code> - send the result to stdout</li></ul><p>再简化：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">tar</span> ztvf file.tar.gz</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-18-5-other-compression-utilities" tabindex="-1"><a class="header-anchor" href="#_2-18-5-other-compression-utilities"><span>2.18.5 Other Compression Utilities</span></a></h3><h2 id="_2-19-linux-directory-hierarchy-essentials" tabindex="-1"><a class="header-anchor" href="#_2-19-linux-directory-hierarchy-essentials"><span>2.19 Linux Directory Hierarchy Essentials</span></a></h2><ul><li><code>/bin</code> : reday-to-run programs / executables 包括很多 Unix 命令</li><li><code>/dev</code> : device files</li><li><code>/etc</code> : 系统配置目录</li><li><code>/home</code> : 用户目录</li><li><code>/lib</code> : 库文件，shared libraries only</li><li><code>/proc</code> : 目前运行的进程信息和内核参数</li><li><code>/sys</code> : 与 <code>/proc</code> 类似</li><li><code>/sbin</code> : system executables</li><li><code>/tmp</code> : 临时文件</li></ul><h3 id="_2-19-1-other-root-subdirectories" tabindex="-1"><a class="header-anchor" href="#_2-19-1-other-root-subdirectories"><span>2.19.1 Other Root Subdirectories</span></a></h3><ul><li><code>/boot</code> : 内核引导文件</li><li><code>/media</code></li><li><code>/opt</code></li></ul><h3 id="_2-19-2-the-usr-directory" tabindex="-1"><a class="header-anchor" href="#_2-19-2-the-usr-directory"><span>2.19.2 The /usr Directory</span></a></h3><h3 id="_2-19-3-kernel-location" tabindex="-1"><a class="header-anchor" href="#_2-19-3-kernel-location"><span>2.19.3 Kernel Location</span></a></h3><p>在 Linux 系统中，kernel 通常位于 <code>/vmlinuz</code> / <code>/boot/vmlinuz</code>。boot loader 将在系统引导时该文件导入内存。内核可以按需 load / unload 模块 - loadable kernel modules，位于 <code>/lib/modules</code>。</p><hr><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>有一个命令今天是第一次搞懂是啥意思，但是感觉用得不会太频繁，所以估计过几天又忘了。不过先记下来方便以后查吧。我还没吃晚饭...... 😩</p>`,174)]))}const c=s(l,[["render",t],["__file","Chapter 2 - Basic Commands and Directory Hierarchy.html.vue"]]),o=JSON.parse('{"path":"/how-linux-works-notes/Chapter%202%20-%20Basic%20Commands%20and%20Directory%20Hierarchy.html","title":"Chapter 2 - Basic Commands and Directory Hierarchy","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"2.1 The Bourne Shell: /bin/sh","slug":"_2-1-the-bourne-shell-bin-sh","link":"#_2-1-the-bourne-shell-bin-sh","children":[]},{"level":2,"title":"2.2 Using the Shell","slug":"_2-2-using-the-shell","link":"#_2-2-using-the-shell","children":[{"level":3,"title":"2.2.1 The Shell Window","slug":"_2-2-1-the-shell-window","link":"#_2-2-1-the-shell-window","children":[]},{"level":3,"title":"2.2.2 cat","slug":"_2-2-2-cat","link":"#_2-2-2-cat","children":[]},{"level":3,"title":"2.2.3 Standard Input and Standard Output","slug":"_2-2-3-standard-input-and-standard-output","link":"#_2-2-3-standard-input-and-standard-output","children":[]}]},{"level":2,"title":"2.3 Basic Commands","slug":"_2-3-basic-commands","link":"#_2-3-basic-commands","children":[{"level":3,"title":"2.3.1 ls","slug":"_2-3-1-ls","link":"#_2-3-1-ls","children":[]},{"level":3,"title":"2.3.2 cp","slug":"_2-3-2-cp","link":"#_2-3-2-cp","children":[]},{"level":3,"title":"2.3.3 mv","slug":"_2-3-3-mv","link":"#_2-3-3-mv","children":[]},{"level":3,"title":"2.3.4 touch","slug":"_2-3-4-touch","link":"#_2-3-4-touch","children":[]},{"level":3,"title":"2.3.5 rm","slug":"_2-3-5-rm","link":"#_2-3-5-rm","children":[]},{"level":3,"title":"2.3.6 echo","slug":"_2-3-6-echo","link":"#_2-3-6-echo","children":[]}]},{"level":2,"title":"2.4 Navigating Directories","slug":"_2-4-navigating-directories","link":"#_2-4-navigating-directories","children":[{"level":3,"title":"2.4.1 cd","slug":"_2-4-1-cd","link":"#_2-4-1-cd","children":[]},{"level":3,"title":"2.4.2 mkdir","slug":"_2-4-2-mkdir","link":"#_2-4-2-mkdir","children":[]},{"level":3,"title":"2.4.3 rmdir","slug":"_2-4-3-rmdir","link":"#_2-4-3-rmdir","children":[]},{"level":3,"title":"2.4.4 Shell Globbing (Wildcards)","slug":"_2-4-4-shell-globbing-wildcards","link":"#_2-4-4-shell-globbing-wildcards","children":[]}]},{"level":2,"title":"2.5 Intermediate Commands","slug":"_2-5-intermediate-commands","link":"#_2-5-intermediate-commands","children":[{"level":3,"title":"2.5.1 grep","slug":"_2-5-1-grep","link":"#_2-5-1-grep","children":[]},{"level":3,"title":"2.5.2 less","slug":"_2-5-2-less","link":"#_2-5-2-less","children":[]},{"level":3,"title":"2.5.3 pwd","slug":"_2-5-3-pwd","link":"#_2-5-3-pwd","children":[]},{"level":3,"title":"2.5.4 diff","slug":"_2-5-4-diff","link":"#_2-5-4-diff","children":[]},{"level":3,"title":"2.5.5 file","slug":"_2-5-5-file","link":"#_2-5-5-file","children":[]},{"level":3,"title":"2.5.6 find and locate","slug":"_2-5-6-find-and-locate","link":"#_2-5-6-find-and-locate","children":[]},{"level":3,"title":"2.5.7 head and tail","slug":"_2-5-7-head-and-tail","link":"#_2-5-7-head-and-tail","children":[]},{"level":3,"title":"2.5.8 sort","slug":"_2-5-8-sort","link":"#_2-5-8-sort","children":[]}]},{"level":2,"title":"2.6 Changing Your Password and Shell","slug":"_2-6-changing-your-password-and-shell","link":"#_2-6-changing-your-password-and-shell","children":[]},{"level":2,"title":"2.7 Dot Files","slug":"_2-7-dot-files","link":"#_2-7-dot-files","children":[]},{"level":2,"title":"2.8 Environment and Shell Variables","slug":"_2-8-environment-and-shell-variables","link":"#_2-8-environment-and-shell-variables","children":[]},{"level":2,"title":"2.9 The Command Path","slug":"_2-9-the-command-path","link":"#_2-9-the-command-path","children":[]},{"level":2,"title":"2.10 Special Characters","slug":"_2-10-special-characters","link":"#_2-10-special-characters","children":[]},{"level":2,"title":"2.11 Command-Line Editing","slug":"_2-11-command-line-editing","link":"#_2-11-command-line-editing","children":[]},{"level":2,"title":"2.12 Text Editors","slug":"_2-12-text-editors","link":"#_2-12-text-editors","children":[]},{"level":2,"title":"2.13 Getting Online Help","slug":"_2-13-getting-online-help","link":"#_2-13-getting-online-help","children":[]},{"level":2,"title":"2.14 Shell Input and Output","slug":"_2-14-shell-input-and-output","link":"#_2-14-shell-input-and-output","children":[{"level":3,"title":"2.14.1 Standard Error","slug":"_2-14-1-standard-error","link":"#_2-14-1-standard-error","children":[]},{"level":3,"title":"2.14.2 Standard Input Redirection","slug":"_2-14-2-standard-input-redirection","link":"#_2-14-2-standard-input-redirection","children":[]}]},{"level":2,"title":"2.15 Understanding Error Messages","slug":"_2-15-understanding-error-messages","link":"#_2-15-understanding-error-messages","children":[]},{"level":2,"title":"2.16 Listing and Manipulating Processes","slug":"_2-16-listing-and-manipulating-processes","link":"#_2-16-listing-and-manipulating-processes","children":[{"level":3,"title":"2.16.1 Command Options","slug":"_2-16-1-command-options","link":"#_2-16-1-command-options","children":[]},{"level":3,"title":"2.16.2 Killing Processes","slug":"_2-16-2-killing-processes","link":"#_2-16-2-killing-processes","children":[]},{"level":3,"title":"2.16.3 Job Control","slug":"_2-16-3-job-control","link":"#_2-16-3-job-control","children":[]},{"level":3,"title":"2.16.4 Background Processes","slug":"_2-16-4-background-processes","link":"#_2-16-4-background-processes","children":[]}]},{"level":2,"title":"2.17 File Modes and Permissions","slug":"_2-17-file-modes-and-permissions","link":"#_2-17-file-modes-and-permissions","children":[{"level":3,"title":"2.17.1 Modifying Permissions","slug":"_2-17-1-modifying-permissions","link":"#_2-17-1-modifying-permissions","children":[]},{"level":3,"title":"2.17.2 Symbolic Links","slug":"_2-17-2-symbolic-links","link":"#_2-17-2-symbolic-links","children":[]},{"level":3,"title":"2.17.3 Creating Symbolic Links","slug":"_2-17-3-creating-symbolic-links","link":"#_2-17-3-creating-symbolic-links","children":[]}]},{"level":2,"title":"2.18 Archiving and Compressing Files","slug":"_2-18-archiving-and-compressing-files","link":"#_2-18-archiving-and-compressing-files","children":[{"level":3,"title":"2.18.1 gzip","slug":"_2-18-1-gzip","link":"#_2-18-1-gzip","children":[]},{"level":3,"title":"2.18.2 tar","slug":"_2-18-2-tar","link":"#_2-18-2-tar","children":[]},{"level":3,"title":"2.18.3 Compressed Archives (.tar.gz)","slug":"_2-18-3-compressed-archives-tar-gz","link":"#_2-18-3-compressed-archives-tar-gz","children":[]},{"level":3,"title":"2.18.4 zcat","slug":"_2-18-4-zcat","link":"#_2-18-4-zcat","children":[]},{"level":3,"title":"2.18.5 Other Compression Utilities","slug":"_2-18-5-other-compression-utilities","link":"#_2-18-5-other-compression-utilities","children":[]}]},{"level":2,"title":"2.19 Linux Directory Hierarchy Essentials","slug":"_2-19-linux-directory-hierarchy-essentials","link":"#_2-19-linux-directory-hierarchy-essentials","children":[{"level":3,"title":"2.19.1 Other Root Subdirectories","slug":"_2-19-1-other-root-subdirectories","link":"#_2-19-1-other-root-subdirectories","children":[]},{"level":3,"title":"2.19.2 The /usr Directory","slug":"_2-19-2-the-usr-directory","link":"#_2-19-2-the-usr-directory","children":[]},{"level":3,"title":"2.19.3 Kernel Location","slug":"_2-19-3-kernel-location","link":"#_2-19-3-kernel-location","children":[]}]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"git":{},"filePathRelative":"how-linux-works-notes/Chapter 2 - Basic Commands and Directory Hierarchy.md"}');export{c as comp,o as data};
