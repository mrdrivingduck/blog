import{_ as t,c as n,a as o,o as a}from"./app-7eKjwDat.js";const r={};function i(s,e){return a(),n("div",null,e[0]||(e[0]=[o('<h1 id="netty-in-action-notes" tabindex="-1"><a class="header-anchor" href="#netty-in-action-notes"><span>netty-in-action-notes</span></a></h1><p>⚙️ Notes of reading <em>Netty in Action</em> and Netty source code.</p><p>Created by : Mr Dk.</p><p>2021 / 02 / 18 23:01</p><p>Ningbo, Zhejiang, China</p><hr><h2 id="about" tabindex="-1"><a class="header-anchor" href="#about"><span>About</span></a></h2><p>Notes of reading <em>Netty in Action</em> by <em>Norman Maurer</em> and <em>Marvin Allen Wolfthal</em>, translated by <em>何品</em>, together with some code analysis of <a href="https://github.com/netty/netty/releases/tag/netty-4.1.59.Final" target="_blank" rel="noopener noreferrer"><em>Netty-4.1.59.Final</em></a>.</p><h2 id="core-point" tabindex="-1"><a class="header-anchor" href="#core-point"><span>Core Point</span></a></h2><ul><li>Different programming model of <strong>Java BIO</strong> / <strong>Java NIO</strong> / <strong>Netty</strong></li><li>Implementation differences of <strong>Java NIO ByteBuffer</strong> / <strong>Netty ByteBuf</strong></li><li>Concepts in Java <strong>Executor</strong> framework (Executor Service / Thread Pool / Future)</li><li>Different <strong>EventExecutor(Group)</strong> / <strong>EventLoop(Group)</strong> implementations</li><li>...</li></ul>',10)]))}const c=t(r,[["render",i],["__file","index.html.vue"]]),p=JSON.parse('{"path":"/netty-in-action-notes/","title":"netty-in-action-notes","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"About","slug":"about","link":"#about","children":[]},{"level":2,"title":"Core Point","slug":"core-point","link":"#core-point","children":[]}],"git":{},"filePathRelative":"netty-in-action-notes/README.md"}');export{c as comp,p as data};
