import{_ as n,c as e,a,o as l}from"./app-7eKjwDat.js";const i={};function r(o,s){return l(),e("div",null,s[0]||(s[0]=[a(`<h1 id="mysql-server-configuration" tabindex="-1"><a class="header-anchor" href="#mysql-server-configuration"><span>MySQL - Server Configuration</span></a></h1><p>Created by : Mr Dk.</p><p>2020 / 10 / 28 22:17</p><p>Nanjing, Jiangsu, China</p><hr><p>在远程机器上新装了 Linux server 并安装了 MySQL，在开发机器上使用 <a href="https://www.mysql.com/products/workbench/" target="_blank" rel="noopener noreferrer"><em>MySQL Workbench</em></a> 来进行数据库的管理，所以要在 workbench 中配置数据库的信息。Linux server 上新安装的 MySQL 需要进行一定的配置后才能够被 MySQL Workbench 连接。</p><h2 id="binding" tabindex="-1"><a class="header-anchor" href="#binding"><span>Binding</span></a></h2><p>首先，MySQL 默认 bind 了 <code>127.0.0.1</code> 作为监听地址，也就是说只有本机上的应用才能够通过 <code>localhost</code> 访问 MySQL。到 <code>/etc/mysql/mysql.conf.d</code> 中 (MySQL 5.7) 设置 <code>mysqld.cnf</code> 文件：</p><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line">#</span>
<span class="line"># Instead of skip-networking the default is now to listen only on</span>
<span class="line"># localhost which is more compatible and is not less secure.</span>
<span class="line">bind-address            = 127.0.0.1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置为：</p><div class="language-conf line-numbers-mode" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line">#</span>
<span class="line"># Instead of skip-networking the default is now to listen only on</span>
<span class="line"># localhost which is more compatible and is not less secure.</span>
<span class="line">bind-address            = 0.0.0.0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，MySQL server 将监听设备地址而不是本地 loop back，从而能够被远程机器连接。</p><h2 id="user" tabindex="-1"><a class="header-anchor" href="#user"><span>User</span></a></h2><p>MySQL 默认已经有了一个名为 <code>root</code> 的用户。对于一个应用来说，我们可以为这个应用创建一个用户并授予权限。另外，MySQL 中还对每个用户连接的源 IP 地址作出了限制，保证只有特定的 IP 地址能够通过该用户连接到 MySQL。</p><p>创建用户的方式如下。登录 MySQL 的命令行，输入：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mysql<span class="token operator">&gt;</span> use mysql<span class="token punctuation">;</span></span>
<span class="line">Reading table information <span class="token keyword">for</span> completion of table and <span class="token function">column</span> names</span>
<span class="line">You can turn off this feature to get a quicker startup with <span class="token parameter variable">-A</span></span>
<span class="line"></span>
<span class="line">Database changed</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre><code><span class="line">CREATE USER &#39;username&#39;@&#39;host&#39; IDENTIFIED BY &#39;password&#39;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中，<code>username</code> 表示用户名；<code>host</code> 表示可以通过该用户名连接到 MySQL 的域名，如果允许这个用户通过所有的 IP 地址访问 MySQL server，那么可以使用 <code>&#39;%&#39;</code>；<code>password</code> 用于表示该用户对应的密码。</p><p>可以在 <code>mysql</code> 数据库的 <code>user</code> 表中查看所有的用户和对应的 <code>host</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> user,host from user<span class="token punctuation">;</span></span>
<span class="line">+------------------+-----------+</span>
<span class="line"><span class="token operator">|</span> user             <span class="token operator">|</span> <span class="token function">host</span>      <span class="token operator">|</span></span>
<span class="line">+------------------+-----------+</span>
<span class="line"><span class="token operator">|</span> ccdetect         <span class="token operator">|</span> %         <span class="token operator">|</span></span>
<span class="line"><span class="token operator">|</span> root             <span class="token operator">|</span> %         <span class="token operator">|</span></span>
<span class="line"><span class="token operator">|</span> debian-sys-maint <span class="token operator">|</span> localhost <span class="token operator">|</span></span>
<span class="line"><span class="token operator">|</span> mysql.session    <span class="token operator">|</span> localhost <span class="token operator">|</span></span>
<span class="line"><span class="token operator">|</span> mysql.sys        <span class="token operator">|</span> localhost <span class="token operator">|</span></span>
<span class="line"><span class="token operator">|</span> root             <span class="token operator">|</span> localhost <span class="token operator">|</span></span>
<span class="line">+------------------+-----------+</span>
<span class="line"><span class="token number">6</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后，新创建的用户需要被赋予访问特定的数据库 / 表的权限：</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre><code><span class="line">GRANT SELECT, INSERT ON database.table TO &#39;username&#39;@&#39;host&#39;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当然，也可以直接赋予该用户对 <strong>所有</strong> 数据库表的 <strong>所有</strong> 权限：</p><div class="language-mysql line-numbers-mode" data-highlighter="prismjs" data-ext="mysql" data-title="mysql"><pre><code><span class="line">GRANT ALL ON *.* TO &#39;username&#39;@&#39;host&#39;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>之后，就可以使用用户名 + 密码通过 MySQL Workbench 进行登录了。</p><hr>`,26)]))}const p=n(i,[["render",r],["__file","MySQL Server Configuration.html.vue"]]),c=JSON.parse('{"path":"/notes/MySQL/MySQL%20Server%20Configuration.html","title":"MySQL - Server Configuration","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Binding","slug":"binding","link":"#binding","children":[]},{"level":2,"title":"User","slug":"user","link":"#user","children":[]}],"git":{},"filePathRelative":"notes/MySQL/MySQL Server Configuration.md"}');export{p as comp,c as data};
