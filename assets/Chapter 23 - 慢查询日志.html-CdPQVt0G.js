import{_ as n,c as a,a as e,o as l}from"./app-7eKjwDat.js";const p={};function t(o,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="chapter-23-慢查询日志" tabindex="-1"><a class="header-anchor" href="#chapter-23-慢查询日志"><span>Chapter 23 - 慢查询日志</span></a></h1><p>Created by : Mr Dk.</p><p>2020 / 06 / 13 14:08</p><p>Nanjing, Jiangsu, China</p><hr><p>Redis 的慢查询日志功能用于记录执行时间超过给定时长的命令请求。用户可以通过慢查询日志来监视和优化查询速度。</p><ul><li><code>slowlog-log-slower-than</code> 指定执行时间超过该阈值的命令会被记录</li><li><code>slowlog-max-len</code> 指定服务器最多保存多少条慢查询日志</li></ul><p>与该功能相关的数据结构：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">redisServer</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">    <span class="token keyword">long</span> <span class="token keyword">long</span> slowlog_entry_id<span class="token punctuation">;</span> <span class="token comment">// 下一条慢查询日志 id</span></span>
<span class="line">    list <span class="token operator">*</span>slowlog<span class="token punctuation">;</span> <span class="token comment">// 保存了所有慢查询日志的链表</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">long</span> <span class="token keyword">long</span> slowlog_log_slower_than<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> slowlog_max_len<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，第一条慢查询日志的 id 为 <code>0</code>，之后每创建一条日志 id + 1。慢查询日志的链表结构定义：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">slowlogEntry</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">long</span> <span class="token keyword">long</span> id<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">time_t</span> time<span class="token punctuation">;</span> <span class="token comment">// 命令执行时的时间</span></span>
<span class="line">    <span class="token keyword">long</span> <span class="token keyword">long</span> duration<span class="token punctuation">;</span> <span class="token comment">// 执行命令消耗的时间</span></span>
<span class="line">    robj <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">;</span> <span class="token comment">// 命令与命令参数</span></span>
<span class="line">    <span class="token keyword">int</span> argc<span class="token punctuation">;</span> <span class="token comment">// 命令与命令参数的数量</span></span>
<span class="line"><span class="token punctuation">}</span> slowlogEntry<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每次执行命令前后，程序都会记录微秒格式的 UNIX 时间戳，两个时间戳的差就是服务器执行命令所耗费的时长。如果超出了设定阈值，就产生一条新的慢查询日志加入链表；如果链表长度超出阈值，则删除最早的慢查询日志。</p>`,12)]))}const c=n(p,[["render",t],["__file","Chapter 23 - 慢查询日志.html.vue"]]),r=JSON.parse('{"path":"/redis-implementation-notes/Part%204%20-%20%E7%8B%AC%E7%AB%8B%E5%8A%9F%E8%83%BD%E7%9A%84%E5%AE%9E%E7%8E%B0/Chapter%2023%20-%20%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97.html","title":"Chapter 23 - 慢查询日志","lang":"en-US","frontmatter":{},"headers":[],"git":{},"filePathRelative":"redis-implementation-notes/Part 4 - 独立功能的实现/Chapter 23 - 慢查询日志.md"}');export{c as comp,r as data};
