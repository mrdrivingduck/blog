import{_ as s,c as a,a as p,o as e}from"./app-7eKjwDat.js";const t={};function l(o,n){return e(),a("div",null,n[0]||(n[0]=[p(`<h1 id="chapter-13-6-13-7-邮件代理模块-上游" tabindex="-1"><a class="header-anchor" href="#chapter-13-6-13-7-邮件代理模块-上游"><span>Chapter 13.6-13.7 - 邮件代理模块 - 上游</span></a></h1><p>Created by : Mr Dk.</p><p>2020 / 08 / 04 12:19</p><p>Nanjing, Jiangsu, China</p><hr><h2 id="_13-6-与上游邮件服务器间的认证交互" tabindex="-1"><a class="header-anchor" href="#_13-6-与上游邮件服务器间的认证交互"><span>13.6 与上游邮件服务器间的认证交互</span></a></h2><p>对于 POP3、SMTP、IMAP 协议的邮件服务器来说，与客户端交互的方式都大不相同。Nginx 会先与上游的邮件服务器进行独立的交互，直到邮件服务器认为可以进行到处理阶段，才会开始 <strong>透传</strong> 协议。</p><h3 id="_13-6-1-ngx-mail-proxy-ctx-t-结构体" tabindex="-1"><a class="header-anchor" href="#_13-6-1-ngx-mail-proxy-ctx-t-结构体"><span>13.6.1 <code>ngx_mail_proxy_ctx_t</code> 结构体</span></a></h3><p>是 <code>ngx_mail_session_t</code> 结构体中 <code>proxy</code> 成员指向的结构体。其中维护着 Nginx 与上游服务器的连接，以及通信时接收上游消息的缓冲区。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">ngx_peer_connection_t</span>   upstream<span class="token punctuation">;</span> <span class="token comment">// 与上游服务器的连接</span></span>
<span class="line">    <span class="token class-name">ngx_buf_t</span>              <span class="token operator">*</span>buffer<span class="token punctuation">;</span> <span class="token comment">// 接收响应的缓冲区</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token class-name">ngx_mail_proxy_ctx_t</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_13-6-2-向上游邮件服务器发起连接" tabindex="-1"><a class="header-anchor" href="#_13-6-2-向上游邮件服务器发起连接"><span>13.6.2 向上游邮件服务器发起连接</span></a></h3><p><code>ngx_mail_proxy_init()</code> 函数可以启动 Nginx 与上游邮件服务器之间的交互：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">void</span></span>
<span class="line"><span class="token function">ngx_mail_proxy_init</span><span class="token punctuation">(</span><span class="token class-name">ngx_mail_session_t</span> <span class="token operator">*</span>s<span class="token punctuation">,</span> <span class="token class-name">ngx_addr_t</span> <span class="token operator">*</span>peer<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">ngx_int_t</span>                  rc<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_mail_proxy_ctx_t</span>      <span class="token operator">*</span>p<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_mail_proxy_conf_t</span>     <span class="token operator">*</span>pcf<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_mail_core_srv_conf_t</span>  <span class="token operator">*</span>cscf<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action <span class="token operator">=</span> <span class="token string">&quot;connecting to upstream&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    cscf <span class="token operator">=</span> <span class="token function">ngx_mail_get_module_srv_conf</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> ngx_mail_core_module<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 创建 ngx_mail_proxy_ctx_t 结构体</span></span>
<span class="line">    p <span class="token operator">=</span> <span class="token function">ngx_pcalloc</span><span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>pool<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token class-name">ngx_mail_proxy_ctx_t</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ngx_mail_session_internal_server_error</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 设置、初始化</span></span>
<span class="line">    s<span class="token operator">-&gt;</span>proxy <span class="token operator">=</span> p<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>sockaddr <span class="token operator">=</span> peer<span class="token operator">-&gt;</span>sockaddr<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>socklen <span class="token operator">=</span> peer<span class="token operator">-&gt;</span>socklen<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token operator">&amp;</span>peer<span class="token operator">-&gt;</span>name<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>get <span class="token operator">=</span> ngx_event_get_peer<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>log <span class="token operator">=</span> s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>log<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>log_error <span class="token operator">=</span> NGX_ERROR_ERR<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 发起非阻塞的 TCP 连接</span></span>
<span class="line">    rc <span class="token operator">=</span> <span class="token function">ngx_event_connect_peer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>rc <span class="token operator">==</span> NGX_ERROR <span class="token operator">||</span> rc <span class="token operator">==</span> NGX_BUSY <span class="token operator">||</span> rc <span class="token operator">==</span> NGX_DECLINED<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ngx_mail_proxy_internal_server_error</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 将连接的读事件添加到定时器中</span></span>
<span class="line">    <span class="token function">ngx_add_timer</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token operator">-&gt;</span>read<span class="token punctuation">,</span> cscf<span class="token operator">-&gt;</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token operator">-&gt;</span>data <span class="token operator">=</span> s<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token operator">-&gt;</span>pool <span class="token operator">=</span> s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>pool<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 下游连接的读事件回调设置为不读取内容 (Nginx 不与下游客户端交互)</span></span>
<span class="line">    s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>handler <span class="token operator">=</span> ngx_mail_proxy_block_read<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 上游连接的写事件回调设置为什么事都不做 (不通过事件驱动框架调度)</span></span>
<span class="line">    p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token operator">-&gt;</span>write<span class="token operator">-&gt;</span>handler <span class="token operator">=</span> ngx_mail_proxy_dummy_handler<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    pcf <span class="token operator">=</span> <span class="token function">ngx_mail_get_module_srv_conf</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> ngx_mail_proxy_module<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 建立 Nginx 与邮件服务器间的内存缓冲区</span></span>
<span class="line">    s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>buffer <span class="token operator">=</span> <span class="token function">ngx_create_temp_buf</span><span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>pool<span class="token punctuation">,</span></span>
<span class="line">                                           pcf<span class="token operator">-&gt;</span>buffer_size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>buffer <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ngx_mail_proxy_internal_server_error</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    s<span class="token operator">-&gt;</span>out<span class="token punctuation">.</span>len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 根据用户请求的协议设置上游连接的读事件回调函数</span></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>protocol<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">case</span> NGX_MAIL_POP3_PROTOCOL<span class="token operator">:</span></span>
<span class="line">        p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>handler <span class="token operator">=</span> ngx_mail_proxy_pop3_handler<span class="token punctuation">;</span></span>
<span class="line">        s<span class="token operator">-&gt;</span>mail_state <span class="token operator">=</span> ngx_pop3_start<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">case</span> NGX_MAIL_IMAP_PROTOCOL<span class="token operator">:</span></span>
<span class="line">        p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>handler <span class="token operator">=</span> ngx_mail_proxy_imap_handler<span class="token punctuation">;</span></span>
<span class="line">        s<span class="token operator">-&gt;</span>mail_state <span class="token operator">=</span> ngx_imap_start<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token comment">/* NGX_MAIL_SMTP_PROTOCOL */</span></span>
<span class="line">        p<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>handler <span class="token operator">=</span> ngx_mail_proxy_smtp_handler<span class="token punctuation">;</span></span>
<span class="line">        s<span class="token operator">-&gt;</span>mail_state <span class="token operator">=</span> ngx_smtp_start<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，与上游服务器的交互过程中，写事件回调 (即发送请求) 不由事件驱动模块触发，读事件回调 (接收响应) 根据具体的邮件协议而不同。为什么发送请求不由事件驱动模块触发呢？因为邮件协议中的交互是一来一回的，所以可以在读事件回调中发送请求。</p><h3 id="_13-6-3-与邮件服务器认证交互" tabindex="-1"><a class="header-anchor" href="#_13-6-3-与邮件服务器认证交互"><span>13.6.3 与邮件服务器认证交互</span></a></h3><p>每种邮件协议服务器与 Nginx 的交互内容各不相同，以 POP3 协议为例：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">void</span></span>
<span class="line"><span class="token function">ngx_mail_proxy_pop3_handler</span><span class="token punctuation">(</span><span class="token class-name">ngx_event_t</span> <span class="token operator">*</span>rev<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    u_char                 <span class="token operator">*</span>p<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_int_t</span>               rc<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_str_t</span>               line<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_connection_t</span>       <span class="token operator">*</span>c<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_mail_session_t</span>     <span class="token operator">*</span>s<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_mail_proxy_conf_t</span>  <span class="token operator">*</span>pcf<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">ngx_log_debug0</span><span class="token punctuation">(</span>NGX_LOG_DEBUG_MAIL<span class="token punctuation">,</span> rev<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">                   <span class="token string">&quot;mail proxy pop3 auth handler&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Nginx 与上游服务器的连接</span></span>
<span class="line">    c <span class="token operator">=</span> rev<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// Nginx 的 ngx_mail_session_t 结构体</span></span>
<span class="line">    s <span class="token operator">=</span> c<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 读取上游邮件服务器响应超时</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>rev<span class="token operator">-&gt;</span>timedout<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ngx_log_error</span><span class="token punctuation">(</span>NGX_LOG_INFO<span class="token punctuation">,</span> c<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> NGX_ETIMEDOUT<span class="token punctuation">,</span></span>
<span class="line">                      <span class="token string">&quot;upstream timed out&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        c<span class="token operator">-&gt;</span>timedout <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">ngx_mail_proxy_internal_server_error</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 读取响应到缓冲区中</span></span>
<span class="line">    rc <span class="token operator">=</span> <span class="token function">ngx_mail_proxy_read_response</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 没有读取完整，等待被再次调度</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>rc <span class="token operator">==</span> NGX_AGAIN<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 消息不合法</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>rc <span class="token operator">==</span> NGX_ERROR<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ngx_mail_proxy_upstream_error</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 根据当前所处的状态进行不同处理</span></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>mail_state<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 构造用户信息发送给邮件服务器</span></span>
<span class="line">    <span class="token keyword">case</span> ngx_pop3_start<span class="token operator">:</span></span>
<span class="line">        <span class="token function">ngx_log_debug0</span><span class="token punctuation">(</span>NGX_LOG_DEBUG_MAIL<span class="token punctuation">,</span> rev<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;mail proxy send user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action <span class="token operator">=</span> <span class="token string">&quot;sending user name to upstream&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        line<span class="token punctuation">.</span>len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token string">&quot;USER &quot;</span><span class="token punctuation">)</span>  <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> s<span class="token operator">-&gt;</span>login<span class="token punctuation">.</span>len <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">        line<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">ngx_pnalloc</span><span class="token punctuation">(</span>c<span class="token operator">-&gt;</span>pool<span class="token punctuation">,</span> line<span class="token punctuation">.</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>line<span class="token punctuation">.</span>data <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">ngx_mail_proxy_internal_server_error</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        p <span class="token operator">=</span> <span class="token function">ngx_cpymem</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token string">&quot;USER &quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token string">&quot;USER &quot;</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        p <span class="token operator">=</span> <span class="token function">ngx_cpymem</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> s<span class="token operator">-&gt;</span>login<span class="token punctuation">.</span>data<span class="token punctuation">,</span> s<span class="token operator">-&gt;</span>login<span class="token punctuation">.</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token operator">*</span>p<span class="token operator">++</span> <span class="token operator">=</span> CR<span class="token punctuation">;</span> <span class="token operator">*</span>p <span class="token operator">=</span> LF<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        s<span class="token operator">-&gt;</span>mail_state <span class="token operator">=</span> ngx_pop3_user<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 构造用户密码发送给邮件服务器</span></span>
<span class="line">    <span class="token keyword">case</span> ngx_pop3_user<span class="token operator">:</span></span>
<span class="line">        <span class="token function">ngx_log_debug0</span><span class="token punctuation">(</span>NGX_LOG_DEBUG_MAIL<span class="token punctuation">,</span> rev<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;mail proxy send pass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action <span class="token operator">=</span> <span class="token string">&quot;sending password to upstream&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        line<span class="token punctuation">.</span>len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token string">&quot;PASS &quot;</span><span class="token punctuation">)</span>  <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> s<span class="token operator">-&gt;</span>passwd<span class="token punctuation">.</span>len <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">        line<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">ngx_pnalloc</span><span class="token punctuation">(</span>c<span class="token operator">-&gt;</span>pool<span class="token punctuation">,</span> line<span class="token punctuation">.</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>line<span class="token punctuation">.</span>data <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">ngx_mail_proxy_internal_server_error</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        p <span class="token operator">=</span> <span class="token function">ngx_cpymem</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token string">&quot;PASS &quot;</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token string">&quot;PASS &quot;</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        p <span class="token operator">=</span> <span class="token function">ngx_cpymem</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> s<span class="token operator">-&gt;</span>passwd<span class="token punctuation">.</span>data<span class="token punctuation">,</span> s<span class="token operator">-&gt;</span>passwd<span class="token punctuation">.</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token operator">*</span>p<span class="token operator">++</span> <span class="token operator">=</span> CR<span class="token punctuation">;</span> <span class="token operator">*</span>p <span class="token operator">=</span> LF<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        s<span class="token operator">-&gt;</span>mail_state <span class="token operator">=</span> ngx_pop3_passwd<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 与邮件服务器的用户名、密码认证通过</span></span>
<span class="line">    <span class="token keyword">case</span> ngx_pop3_passwd<span class="token operator">:</span></span>
<span class="line">        <span class="token comment">// 将 Nginx 与上游、下游连接的读写事件回调全部设置为 ngx_mail_proxy_handler</span></span>
<span class="line">        s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>handler <span class="token operator">=</span> ngx_mail_proxy_handler<span class="token punctuation">;</span></span>
<span class="line">        s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>write<span class="token operator">-&gt;</span>handler <span class="token operator">=</span> ngx_mail_proxy_handler<span class="token punctuation">;</span></span>
<span class="line">        rev<span class="token operator">-&gt;</span>handler <span class="token operator">=</span> ngx_mail_proxy_handler<span class="token punctuation">;</span></span>
<span class="line">        c<span class="token operator">-&gt;</span>write<span class="token operator">-&gt;</span>handler <span class="token operator">=</span> ngx_mail_proxy_handler<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        pcf <span class="token operator">=</span> <span class="token function">ngx_mail_get_module_srv_conf</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> ngx_mail_proxy_module<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">ngx_add_timer</span><span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>read<span class="token punctuation">,</span> pcf<span class="token operator">-&gt;</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">ngx_del_timer</span><span class="token punctuation">(</span>c<span class="token operator">-&gt;</span>read<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        c<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">ngx_log_error</span><span class="token punctuation">(</span>NGX_LOG_INFO<span class="token punctuation">,</span> c<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;client logged in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 对下游连接的写事件调用回调函数，开始透传</span></span>
<span class="line">        <span class="token function">ngx_mail_proxy_handler</span><span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>write<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span>NGX_SUPPRESS_WARN<span class="token punctuation">)</span></span></span></span>
<span class="line">        <span class="token function">ngx_str_null</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 向上游邮件服务器发送验证消息</span></span>
<span class="line">    <span class="token comment">// 当前函数是 Nginx 与上游服务器连接的读事件回调函数</span></span>
<span class="line">    <span class="token comment">// 因此发送验证消息不由事件驱动模块触发，而是由上游连接的读事件触发</span></span>
<span class="line">    <span class="token comment">// 因为只有接收到了邮件服务器的消息，才会向邮件服务器发送消息，且发送的消息非常短小</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token operator">-&gt;</span><span class="token function">send</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> line<span class="token punctuation">.</span>data<span class="token punctuation">,</span> line<span class="token punctuation">.</span>len<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token class-name">ssize_t</span><span class="token punctuation">)</span> line<span class="token punctuation">.</span>len<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">/*</span>
<span class="line">         * we treat the incomplete sending as NGX_ERROR</span>
<span class="line">         * because it is very strange here</span>
<span class="line">         */</span></span>
<span class="line">        <span class="token function">ngx_mail_proxy_internal_server_error</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 设置 buffer 缓冲区指针 (相当于清空缓冲区)</span></span>
<span class="line">    s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>buffer<span class="token operator">-&gt;</span>pos <span class="token operator">=</span> s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>buffer<span class="token operator">-&gt;</span>start<span class="token punctuation">;</span></span>
<span class="line">    s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>buffer<span class="token operator">-&gt;</span>last <span class="token operator">=</span> s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>buffer<span class="token operator">-&gt;</span>start<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13-7-透传上游邮件服务器与客户端间的流" tabindex="-1"><a class="header-anchor" href="#_13-7-透传上游邮件服务器与客户端间的流"><span>13.7 透传上游邮件服务器与客户端间的流</span></a></h2><p>上面函数中，在开始透传后，会将 Nginx 与上下游 TCP 连接的读写事件回调函数都设置为 <code>ngx_mail_proxy_handler()</code>。这个函数将同时处理四个事件，实现透传。这里使用了 <strong>固定大小的缓存</strong> 来实现透传功能。</p><p>其中，<code>ngx_mail_session_t</code> 中的 <code>buffer</code> 缓冲区用于从下游客户端到上游服务器的透传；而 <code>ngx_mail_proxy_ctx_t</code> 中的 <code>buffer</code> 缓冲区用于从上游服务器透传到下游客户端。在这两个 <code>ngx_buf_t</code> 类型的缓冲区中，<code>pos</code> 指向待转发消息的起始位置，<code>last</code> 指向消息的末尾 - 当 <code>pos</code> 与 <code>last</code> 相等时，全部缓存消息就发送完了。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">void</span></span>
<span class="line"><span class="token function">ngx_mail_proxy_handler</span><span class="token punctuation">(</span><span class="token class-name">ngx_event_t</span> <span class="token operator">*</span>ev<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">char</span>                   <span class="token operator">*</span>action<span class="token punctuation">,</span> <span class="token operator">*</span>recv_action<span class="token punctuation">,</span> <span class="token operator">*</span>send_action<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">size_t</span>                  size<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ssize_t</span>                 n<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_buf_t</span>              <span class="token operator">*</span>b<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_uint_t</span>              do_write<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// src 和 dst 指针用于代码重用</span></span>
<span class="line">    <span class="token comment">// 不管谁是上游、下游，src 指向转发消息的来源，dst 指向转发消息的目标</span></span>
<span class="line">    <span class="token class-name">ngx_connection_t</span>       <span class="token operator">*</span>c<span class="token punctuation">,</span> <span class="token operator">*</span>src<span class="token punctuation">,</span> <span class="token operator">*</span>dst<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_mail_session_t</span>     <span class="token operator">*</span>s<span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">ngx_mail_proxy_conf_t</span>  <span class="token operator">*</span>pcf<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 连接 (可能是上游也可能是下游)</span></span>
<span class="line">    c <span class="token operator">=</span> ev<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 指向 ngx_mail_session_t 结构体 (无论上游下游)</span></span>
<span class="line">    s <span class="token operator">=</span> c<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 事件超时，终止透传</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>ev<span class="token operator">-&gt;</span>timedout <span class="token operator">||</span> c<span class="token operator">-&gt;</span>close<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        c<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action <span class="token operator">=</span> <span class="token string">&quot;proxying&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token operator">-&gt;</span>close<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">ngx_log_error</span><span class="token punctuation">(</span>NGX_LOG_INFO<span class="token punctuation">,</span> c<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;shutdown timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> s<span class="token operator">-&gt;</span>connection<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">ngx_log_error</span><span class="token punctuation">(</span>NGX_LOG_INFO<span class="token punctuation">,</span> c<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> NGX_ETIMEDOUT<span class="token punctuation">,</span></span>
<span class="line">                          <span class="token string">&quot;client timed out&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            c<span class="token operator">-&gt;</span>timedout <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">ngx_log_error</span><span class="token punctuation">(</span>NGX_LOG_INFO<span class="token punctuation">,</span> c<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> NGX_ETIMEDOUT<span class="token punctuation">,</span></span>
<span class="line">                          <span class="token string">&quot;upstream timed out&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token function">ngx_mail_proxy_close_session</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// s-&gt;connection 一定指向 Nginx 与下游的 TCP 连接</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> s<span class="token operator">-&gt;</span>connection<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 收到了下游连接上的事件</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>ev<span class="token operator">-&gt;</span>write<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 下游可写事件</span></span>
<span class="line">            recv_action <span class="token operator">=</span> <span class="token string">&quot;proxying and reading from upstream&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            send_action <span class="token operator">=</span> <span class="token string">&quot;proxying and sending to client&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// src 为上游连接</span></span>
<span class="line">            src <span class="token operator">=</span> s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// dst 为下游连接</span></span>
<span class="line">            dst <span class="token operator">=</span> c<span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// 设置用于向下游转发的缓冲区</span></span>
<span class="line">            b <span class="token operator">=</span> s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>buffer<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 下游可读事件</span></span>
<span class="line">            recv_action <span class="token operator">=</span> <span class="token string">&quot;proxying and reading from client&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            send_action <span class="token operator">=</span> <span class="token string">&quot;proxying and sending to upstream&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// src 为下游连接</span></span>
<span class="line">            src <span class="token operator">=</span> c<span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// dst 为上游连接</span></span>
<span class="line">            dst <span class="token operator">=</span> s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// 设置用于向上游转发的缓冲区</span></span>
<span class="line">            b <span class="token operator">=</span> s<span class="token operator">-&gt;</span>buffer<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 收到了上游连接上的事件</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>ev<span class="token operator">-&gt;</span>write<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 上游连接可写</span></span>
<span class="line">            recv_action <span class="token operator">=</span> <span class="token string">&quot;proxying and reading from client&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            send_action <span class="token operator">=</span> <span class="token string">&quot;proxying and sending to upstream&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// src 为下游连接</span></span>
<span class="line">            src <span class="token operator">=</span> s<span class="token operator">-&gt;</span>connection<span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// dst 为上游连接</span></span>
<span class="line">            dst <span class="token operator">=</span> c<span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// 设置向上游转发的缓冲区</span></span>
<span class="line">            b <span class="token operator">=</span> s<span class="token operator">-&gt;</span>buffer<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 上游连接可读</span></span>
<span class="line">            recv_action <span class="token operator">=</span> <span class="token string">&quot;proxying and reading from upstream&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            send_action <span class="token operator">=</span> <span class="token string">&quot;proxying and sending to client&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// src 为上游连接</span></span>
<span class="line">            src <span class="token operator">=</span> c<span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// dst 为下游连接</span></span>
<span class="line">            dst <span class="token operator">=</span> s<span class="token operator">-&gt;</span>connection<span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// 设置向下游转发的缓冲区</span></span>
<span class="line">            b <span class="token operator">=</span> s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>buffer<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 决定本轮是读还是写</span></span>
<span class="line">    do_write <span class="token operator">=</span> ev<span class="token operator">-&gt;</span>write <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">ngx_log_debug3</span><span class="token punctuation">(</span>NGX_LOG_DEBUG_MAIL<span class="token punctuation">,</span> ev<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">                   <span class="token string">&quot;mail proxy handler: %ui, #%d &gt; #%d&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                   do_write<span class="token punctuation">,</span> src<span class="token operator">-&gt;</span>fd<span class="token punctuation">,</span> dst<span class="token operator">-&gt;</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 进入循环</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 本轮是写操作</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>do_write<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// 计算缓冲区中要写的字节数</span></span>
<span class="line">            size <span class="token operator">=</span> b<span class="token operator">-&gt;</span>last <span class="token operator">-</span> b<span class="token operator">-&gt;</span>pos<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// 如果有字节要写，且写事件就绪</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&amp;&amp;</span> dst<span class="token operator">-&gt;</span>write<span class="token operator">-&gt;</span>ready<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                c<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action <span class="token operator">=</span> send_action<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                <span class="token comment">// 发送字节</span></span>
<span class="line">                n <span class="token operator">=</span> dst<span class="token operator">-&gt;</span><span class="token function">send</span><span class="token punctuation">(</span>dst<span class="token punctuation">,</span> b<span class="token operator">-&gt;</span>pos<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> NGX_ERROR<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">ngx_mail_proxy_close_session</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">                <span class="token comment">// 如果有字节成功发送</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">// 更新缓冲区指针</span></span>
<span class="line">                    b<span class="token operator">-&gt;</span>pos <span class="token operator">+=</span> n<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                    <span class="token comment">// 缓冲区中的内容被完全发送，则清空缓冲区，复用</span></span>
<span class="line">                    <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token operator">-&gt;</span>pos <span class="token operator">==</span> b<span class="token operator">-&gt;</span>last<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        b<span class="token operator">-&gt;</span>pos <span class="token operator">=</span> b<span class="token operator">-&gt;</span>start<span class="token punctuation">;</span></span>
<span class="line">                        b<span class="token operator">-&gt;</span>last <span class="token operator">=</span> b<span class="token operator">-&gt;</span>start<span class="token punctuation">;</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 计算缓冲区中的剩余空间</span></span>
<span class="line">        size <span class="token operator">=</span> b<span class="token operator">-&gt;</span>end <span class="token operator">-</span> b<span class="token operator">-&gt;</span>last<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 如果还有剩余空间，且读事件就绪</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&amp;&amp;</span> src<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>ready<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            c<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action <span class="token operator">=</span> recv_action<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// 从读事件中获取字节</span></span>
<span class="line">            n <span class="token operator">=</span> src<span class="token operator">-&gt;</span><span class="token function">recv</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> b<span class="token operator">-&gt;</span>last<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// 没有读取到内容，则跳出</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> NGX_AGAIN <span class="token operator">||</span> n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// 如果读取到内容</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 试图直接发送读取到的内容</span></span>
<span class="line">                do_write <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">// 更新缓冲区指针</span></span>
<span class="line">                b<span class="token operator">-&gt;</span>last <span class="token operator">+=</span> n<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                <span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> NGX_ERROR<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                src<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>eof <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    c<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action <span class="token operator">=</span> <span class="token string">&quot;proxying&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 如果上下游连接中断，则结束透传</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>eof <span class="token operator">&amp;&amp;</span> s<span class="token operator">-&gt;</span>buffer<span class="token operator">-&gt;</span>pos <span class="token operator">==</span> s<span class="token operator">-&gt;</span>buffer<span class="token operator">-&gt;</span>last<span class="token punctuation">)</span></span>
<span class="line">        <span class="token operator">||</span> <span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>eof</span>
<span class="line">            <span class="token operator">&amp;&amp;</span> s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>buffer<span class="token operator">-&gt;</span>pos <span class="token operator">==</span> s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>buffer<span class="token operator">-&gt;</span>last<span class="token punctuation">)</span></span>
<span class="line">        <span class="token operator">||</span> <span class="token punctuation">(</span>s<span class="token operator">-&gt;</span>connection<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>eof</span>
<span class="line">            <span class="token operator">&amp;&amp;</span> s<span class="token operator">-&gt;</span>proxy<span class="token operator">-&gt;</span>upstream<span class="token punctuation">.</span>connection<span class="token operator">-&gt;</span>read<span class="token operator">-&gt;</span>eof<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        action <span class="token operator">=</span> c<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action<span class="token punctuation">;</span></span>
<span class="line">        c<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">ngx_log_error</span><span class="token punctuation">(</span>NGX_LOG_INFO<span class="token punctuation">,</span> c<span class="token operator">-&gt;</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;proxied session done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        c<span class="token operator">-&gt;</span>log<span class="token operator">-&gt;</span>action <span class="token operator">=</span> action<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token function">ngx_mail_proxy_close_session</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 将四个事件再次加入到事件驱动模块中</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ngx_handle_write_event</span><span class="token punctuation">(</span>dst<span class="token operator">-&gt;</span>write<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> NGX_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ngx_mail_proxy_close_session</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ngx_handle_read_event</span><span class="token punctuation">(</span>dst<span class="token operator">-&gt;</span>read<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> NGX_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ngx_mail_proxy_close_session</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ngx_handle_write_event</span><span class="token punctuation">(</span>src<span class="token operator">-&gt;</span>write<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> NGX_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ngx_mail_proxy_close_session</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ngx_handle_read_event</span><span class="token punctuation">(</span>src<span class="token operator">-&gt;</span>read<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> NGX_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">ngx_mail_proxy_close_session</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 将下游客户端的读事件添加到定时器中</span></span>
<span class="line">    <span class="token comment">// 防止僵死的客户端占用 Nginx 服务器资源</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> s<span class="token operator">-&gt;</span>connection<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        pcf <span class="token operator">=</span> <span class="token function">ngx_mail_get_module_srv_conf</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> ngx_mail_proxy_module<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">ngx_add_timer</span><span class="token punctuation">(</span>c<span class="token operator">-&gt;</span>read<span class="token punctuation">,</span> pcf<span class="token operator">-&gt;</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21)]))}const i=s(t,[["render",l],["__file","Chapter 13.6-13.7 - 邮件代理模块 - 上游.html.vue"]]),r=JSON.parse('{"path":"/understanding-nginx-notes/Part%203%20-%20%E6%B7%B1%E5%85%A5%20Nginx/Chapter%2013.6-13.7%20-%20%E9%82%AE%E4%BB%B6%E4%BB%A3%E7%90%86%E6%A8%A1%E5%9D%97%20-%20%E4%B8%8A%E6%B8%B8.html","title":"Chapter 13.6-13.7 - 邮件代理模块 - 上游","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"13.6 与上游邮件服务器间的认证交互","slug":"_13-6-与上游邮件服务器间的认证交互","link":"#_13-6-与上游邮件服务器间的认证交互","children":[{"level":3,"title":"13.6.1 ngx_mail_proxy_ctx_t 结构体","slug":"_13-6-1-ngx-mail-proxy-ctx-t-结构体","link":"#_13-6-1-ngx-mail-proxy-ctx-t-结构体","children":[]},{"level":3,"title":"13.6.2 向上游邮件服务器发起连接","slug":"_13-6-2-向上游邮件服务器发起连接","link":"#_13-6-2-向上游邮件服务器发起连接","children":[]},{"level":3,"title":"13.6.3 与邮件服务器认证交互","slug":"_13-6-3-与邮件服务器认证交互","link":"#_13-6-3-与邮件服务器认证交互","children":[]}]},{"level":2,"title":"13.7 透传上游邮件服务器与客户端间的流","slug":"_13-7-透传上游邮件服务器与客户端间的流","link":"#_13-7-透传上游邮件服务器与客户端间的流","children":[]}],"git":{},"filePathRelative":"understanding-nginx-notes/Part 3 - 深入 Nginx/Chapter 13.6-13.7 - 邮件代理模块 - 上游.md"}');export{i as comp,r as data};
