import{_ as s,c as e,a,o as l}from"./app-7eKjwDat.js";const t={};function i(p,n){return l(),e("div",null,n[0]||(n[0]=[a(`<h1 id="tee" tabindex="-1"><a class="header-anchor" href="#tee"><span>tee</span></a></h1><p>Created by : Mr Dk.</p><p>2023 / 04 / 11 11:19</p><p>Hangzhou, Zhejiang, China</p><hr><h2 id="background" tabindex="-1"><a class="header-anchor" href="#background"><span>Background</span></a></h2><p><code>tee</code> 能够从标准输入中读取数据，然后写出到标准输出以及一个或多个文件中。相当于一个一对多的 adapter。</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">tee</span> <span class="token parameter variable">--help</span></span>
<span class="line">Usage: <span class="token function">tee</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>FILE<span class="token punctuation">]</span><span class="token punctuation">..</span>.</span>
<span class="line">Copy standard input to each FILE, and also to standard output.</span>
<span class="line"></span>
<span class="line">  -a, <span class="token parameter variable">--append</span>              append to the given FILEs, <span class="token keyword">do</span> not overwrite</span>
<span class="line">  -i, --ignore-interrupts   ignore interrupt signals</span>
<span class="line">      <span class="token parameter variable">--help</span>     display this <span class="token builtin class-name">help</span> and <span class="token builtin class-name">exit</span></span>
<span class="line">      <span class="token parameter variable">--version</span>  output version information and <span class="token builtin class-name">exit</span></span>
<span class="line"></span>
<span class="line">If a FILE is -, copy again to standard output.</span>
<span class="line"></span>
<span class="line">GNU coreutils online help: <span class="token operator">&lt;</span>http://www.gnu.org/software/coreutils/<span class="token operator">&gt;</span></span>
<span class="line">For complete documentation, run: info coreutils <span class="token string">&#39;tee invocation&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ChatGPT 给出的资料：</p><blockquote><p>In Linux, the &quot;tee&quot; command is used to read from standard input and write to both standard output and one or more files. It allows the user to redirect the output of a command to both the screen and a file simultaneously. The syntax for using tee is as follows:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">command</span> <span class="token operator">|</span> <span class="token function">tee</span> filename</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This will run the &quot;command&quot; and print its output to the screen, while also writing it to the file specified by &quot;filename&quot;.</p></blockquote><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h2><p><code>-a</code> 参数用于追加写入文件，而不是从头开始写入文件。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token builtin class-name">echo</span> <span class="token string">&quot;Hello&quot;</span> <span class="token operator">|</span> <span class="token function">tee</span> test.txt</span>
<span class="line">Hello</span>
<span class="line"></span>
<span class="line">$ <span class="token function">cat</span> test.txt</span>
<span class="line">Hello</span>
<span class="line"></span>
<span class="line">$ <span class="token builtin class-name">echo</span> <span class="token string">&quot;Hello&quot;</span> <span class="token operator">|</span> <span class="token function">tee</span> <span class="token parameter variable">-a</span> test.txt</span>
<span class="line">Hello</span>
<span class="line"></span>
<span class="line">$ <span class="token function">cat</span> test.txt</span>
<span class="line">Hello</span>
<span class="line">Hello</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p><a href="https://man7.org/linux/man-pages/man1/tee.1.html" target="_blank" rel="noopener noreferrer">tee(1) — Linux manual page</a></p><p><a href="https://www.geeksforgeeks.org/tee-command-linux-example/" target="_blank" rel="noopener noreferrer">tee command in Linux with examples - GeeksforGeeks</a></p>`,17)]))}const r=s(t,[["render",i],["__file","tee.html.vue"]]),c=JSON.parse('{"path":"/notes/Linux/tee.html","title":"tee","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Background","slug":"background","link":"#background","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Demo","slug":"demo","link":"#demo","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{},"filePathRelative":"notes/Linux/tee.md"}');export{r as comp,c as data};
