import{_ as n,c as a,a as e,o as l}from"./app-7eKjwDat.js";const i="/blog/assets/frp-architecture-BBTjTz82.png",t={};function p(c,s){return l(),a("div",null,s[0]||(s[0]=[e('<h1 id="network-frp" tabindex="-1"><a class="header-anchor" href="#network-frp"><span>Network - frp</span></a></h1><p>Created by : Mr Dk.</p><p>2019 / 06 / 13 14:30</p><p>Nanjing, Jiangsu, China</p><hr><p><a href="https://github.com/fatedier/frp" target="_blank" rel="noopener noreferrer"><em>frp</em></a> 是一款开源的内网穿透工具，由 Go 语言实现，可在多种平台上运行。作用：使外网设备能够访问内网环境中的服务。比如，通过外网 SSH 或远程登录到内网主机。</p><h2 id="architecture" tabindex="-1"><a class="header-anchor" href="#architecture"><span>Architecture</span></a></h2><p>需要一台具有公网 IP 地址的服务器，以及若干台内网主机。</p><p><img src="'+i+`" alt="frp-architecture"></p><p>总体上是 C-S 架构：</p><ul><li>在具有公网 IP 地址的服务器上运行服务端 <ul><li>监听一个指定的端口，用于接收内网客户端的穿透请求</li><li>在公网服务器上开放客户端指定的端口，用于穿透</li></ul></li><li>在内网运行客户端 <ul><li>指定远程服务端的 IP 地址和端口号，连接到远程服务器</li><li>设定本机的开放端口和远程服务器上的相应穿透端口</li></ul></li></ul><blockquote><p>e.g.: frp 服务端运行于公网服务器的 12666 端口，内网主机的 frp 客户端连接到公网服务器的 12666 端口上，内网 frp 客户端希望将内网本地的 80 端口通过公网服务器的 13000 端口穿透出去。这样，所有用户都能够通过访问公网服务器的 13000 端口，间接访问内网主机的 80 端口，从而实现了穿透。</p></blockquote><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>在 <a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener noreferrer">GitHub Release</a> 上下载对应操作系统、体系结构的程序：</p><ul><li><code>frps</code>：服务端程序</li><li><code>frps.ini</code>：服务端配置文件</li><li><code>frpc</code>：客户端程序</li><li><code>frps.ini</code>：客户端配置文件</li></ul><h3 id="server" tabindex="-1"><a class="header-anchor" href="#server"><span>Server</span></a></h3><p>在 <code>frps.ini</code> 中配置服务端绑定端口：</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token comment"># frps.ini</span></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">common</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">bind_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">12666</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后启动服务端程序：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./frps <span class="token parameter variable">-c</span> ./frps.ini</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="client" tabindex="-1"><a class="header-anchor" href="#client"><span>Client</span></a></h3><p>在 <code>frpc.ini</code> 中配置远程服务器信息，以及想要穿透的端口。假设公网服务器的 IP 地址为 <code>x.x.x.x</code>：</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token comment"># frpc.ini</span></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">common</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">server_addr</span> <span class="token punctuation">=</span> <span class="token value attr-value">x.x.x.x</span></span>
<span class="line"><span class="token key attr-name">server_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">12666</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">ssh</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">tcp</span></span>
<span class="line"><span class="token key attr-name">local_ip</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span></span>
<span class="line"><span class="token key attr-name">local_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">22</span></span>
<span class="line"><span class="token key attr-name">remote_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">13000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将本机的 <code>22</code> (SSH) 端口通过远程服务器的 <code>13000</code> 端口穿透出去。这样任意地址访问公网服务器的 <code>13000</code> 端口就相当于访问内网机器的 <code>22</code> 端口了。</p><p>启动客户端：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ ./frpc -c ./frpc.ini</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="function" tabindex="-1"><a class="header-anchor" href="#function"><span>Function</span></a></h2><p>更多高级的功能暂时用不到，我的需求是：把我的那台厚重但性能强劲的笔记本接入实验室内网，使我可以在任何地方用苏菲远程连接到它，干一些比较吃性能的活。如果笔记本跑 Linux，可以通过 SSH 连接：</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token comment"># frpc.ini</span></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">common</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">server_addr</span> <span class="token punctuation">=</span> <span class="token value attr-value">x.x.x.x</span></span>
<span class="line"><span class="token key attr-name">server_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">12666</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">ssh</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">tcp</span></span>
<span class="line"><span class="token key attr-name">local_ip</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span></span>
<span class="line"><span class="token key attr-name">local_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">22</span></span>
<span class="line"><span class="token key attr-name">remote_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">13000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果笔记本跑 Windows，可以通过 Windows 的远程桌面连接 (前提是要在设置中开启允许被远程连接)：</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token comment"># frpc.ini</span></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">common</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">server_addr</span> <span class="token punctuation">=</span> <span class="token value attr-value">x.x.x.x</span></span>
<span class="line"><span class="token key attr-name">server_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">12666</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">remote</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">tcp</span></span>
<span class="line"><span class="token key attr-name">local_ip</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span></span>
<span class="line"><span class="token key attr-name">local_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">3389</span></span>
<span class="line"><span class="token key attr-name">remote_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">13000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>3389</code> 是 Windows 远程桌面的默认端口。将 <code>3389</code> 端口通过公网的 <code>13000</code> 端口实现穿透。</p><p>由于 SSH 和远程桌面的流量都需要经过公网服务器，所以连接到公网服务器的延迟决定了一部分的服务质量。一开始我使用了用于科学上网的美国 Hostwinds 服务器，延迟高得令人发指。后来改用了使用阿里云的国内服务器，延迟情况好了很多。</p><p>以下配置可以防止客户端连接失败后直接退出，而是不断尝试重新连接服务器：</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token key attr-name">login_fail_exit</span> <span class="token punctuation">=</span> <span class="token value attr-value">false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="frp-as-a-service" tabindex="-1"><a class="header-anchor" href="#frp-as-a-service"><span>frp as a Service</span></a></h2><p>更实用的方法是将 frp 设置为一个系统服务，这样 frp 就可以在系统启动后自动运行了。在编写服务脚本时，要注意的是系统开机时网络可能还未准备好，因此要等网络就绪后再运行 frp 服务。一个 GitHub 网友 <a href="https://github.com/vc5" target="_blank" rel="noopener noreferrer">vc5</a> 提供了一个可用的 <a href="https://github.com/fatedier/frp/issues/176" target="_blank" rel="noopener noreferrer">脚本</a>：</p><p>将 <code>frpc</code> / <code>frps</code> 拷贝到 <code>/usr/sbin</code> 目录下，将相应配置文件拷贝到 <code>/etc/frp</code> 下，然后编辑配置文件 <code>frpc.service</code> / <code>frps.service</code>。以 <code>frpc</code> 为例：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/systemd/system/frpc.service</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Unit</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">Description</span><span class="token punctuation">=</span><span class="token value attr-value">frpc daemon</span></span>
<span class="line"><span class="token key attr-name">After</span><span class="token punctuation">=</span><span class="token value attr-value">syslog.target  network.target</span></span>
<span class="line"><span class="token key attr-name">Wants</span><span class="token punctuation">=</span><span class="token value attr-value">network.target</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Service</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">Type</span><span class="token punctuation">=</span><span class="token value attr-value">simple</span></span>
<span class="line"><span class="token key attr-name">ExecStart</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/sbin/frpc -c /etc/frp/frpc.ini</span></span>
<span class="line"><span class="token key attr-name">Restart</span><span class="token punctuation">=</span><span class="token value attr-value">always</span></span>
<span class="line"><span class="token key attr-name">RestartSec</span><span class="token punctuation">=</span><span class="token value attr-value">1min</span></span>
<span class="line"><span class="token key attr-name">ExecStop</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/bin/killall frpc</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Install</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">WantedBy</span><span class="token punctuation">=</span><span class="token value attr-value">multi-user.target</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> frpc.service</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>之后就可以启动服务了：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">service</span> frpc start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果出现了一些问题想查看日志 (以 frps 服务端程序为例)：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ service frps status</span>
<span class="line">● frps.service - frpc daemon</span>
<span class="line">   Loaded: loaded (/etc/systemd/system/frps.service; enabled; vendor preset: enabled)</span>
<span class="line">   Active: active (running) since Wed 2020-06-17 22:04:03 CST; 12min ago</span>
<span class="line">  Process: 27059 ExecStop=/usr/bin/killall frpc (code=exited, status=1/FAILURE)</span>
<span class="line"> Main PID: 27060 (frps)</span>
<span class="line">    Tasks: 4 (limit: 2338)</span>
<span class="line">   CGroup: /system.slice/frps.service</span>
<span class="line">           └─27060 /usr/sbin/frps -c /etc/frp/frps.ini</span>
<span class="line"></span>
<span class="line">Jun 17 22:11:57 iZbp121dwclu57bx28p55eZ frps[27060]: 2020/06/17 22:11:57 [I] [proxy.go:87] [4221a83a22b59969] [ssh] proxy closing</span>
<span class="line">Jun 17 22:11:57 iZbp121dwclu57bx28p55eZ frps[27060]: 2020/06/17 22:11:57 [I] [proxy.go:159] [4221a83a22b59969] [ssh] listener is closed</span>
<span class="line">Jun 17 22:11:57 iZbp121dwclu57bx28p55eZ frps[27060]: 2020/06/17 22:11:57 [I] [control.go:383] [4221a83a22b59969] client exit success</span>
<span class="line">Jun 17 22:11:57 iZbp121dwclu57bx28p55eZ frps[27060]: 2020/06/17 22:11:57 [I] [service.go:432] [6ba27948d06ad3f1] client login info: ip [58.213.91.10:25481] version [0.33.0] hostname [] os [linux] arch [amd64]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45)]))}const o=n(t,[["render",p],["__file","Network frp.html.vue"]]),d=JSON.parse('{"path":"/notes/Network/Network%20frp.html","title":"Network - frp","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Architecture","slug":"architecture","link":"#architecture","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[{"level":3,"title":"Server","slug":"server","link":"#server","children":[]},{"level":3,"title":"Client","slug":"client","link":"#client","children":[]}]},{"level":2,"title":"Function","slug":"function","link":"#function","children":[]},{"level":2,"title":"frp as a Service","slug":"frp-as-a-service","link":"#frp-as-a-service","children":[]}],"git":{},"filePathRelative":"notes/Network/Network frp.md"}');export{o as comp,d as data};
