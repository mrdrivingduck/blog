import{_ as s,c as a,a as e,o as p}from"./app-7eKjwDat.js";const t={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="interface-java-util-navigableset" tabindex="-1"><a class="header-anchor" href="#interface-java-util-navigableset"><span>Interface - java.util.NavigableSet</span></a></h1><p>Created by : Mr Dk.</p><p>2019 / 11 / 20 17:54</p><p>Nanjing, Jiangsu, China</p><hr><h2 id="definition" tabindex="-1"><a class="header-anchor" href="#definition"><span>Definition</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">NavigableSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">SortedSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对 <code>SortedSet</code> 进行了扩展，使其能够获得与给定元素的最近匹配元素：</p><ul><li>小于</li><li>小于等于</li><li>大于</li><li>大于等于</li></ul><p>可以以升序或降序遍历，甚至还可以获得一个顺序完全相反的集合视角。但升序视角肯定比降序视角性能更好。提供了返回并删除最大或最小元素的函数，还提供了各种取子集的函数 (包含边界或不包含边界)。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * A <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">SortedSet</span></span><span class="token punctuation">}</span> extended with navigation methods reporting</span>
<span class="line"> * closest matches for given search targets. Methods <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">lower</span></span><span class="token punctuation">}</span>,</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">floor</span></span><span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">ceiling</span></span><span class="token punctuation">}</span>, and <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">higher</span></span><span class="token punctuation">}</span> return elements</span>
<span class="line"> * respectively less than, less than or equal, greater than or equal,</span>
<span class="line"> * and greater than a given element, returning <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if there</span>
<span class="line"> * is no such element.  A <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">NavigableSet</span></span></span><span class="token punctuation">}</span> may be accessed and</span>
<span class="line"> * traversed in either ascending or descending order.  The <span class="token punctuation">{</span><span class="token keyword">@code</span></span>
<span class="line"> <span class="token code-section">* <span class="token code language-java">descendingSet</span></span><span class="token punctuation">}</span> method returns a view of the set with the senses of</span>
<span class="line"> * all relational and directional methods inverted. The performance of</span>
<span class="line"> * ascending operations and views is likely to be faster than that of</span>
<span class="line"> * descending ones.  This interface additionally defines methods</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">pollFirst</span></span><span class="token punctuation">}</span> and <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">pollLast</span></span><span class="token punctuation">}</span> that return and remove the</span>
<span class="line"> * lowest and highest element, if one exists, else returning <span class="token punctuation">{</span><span class="token keyword">@code</span></span>
<span class="line"> <span class="token code-section">* <span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>.  Methods <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">subSet</span></span><span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">headSet</span></span><span class="token punctuation">}</span>,</span>
<span class="line"> * and <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">tailSet</span></span><span class="token punctuation">}</span> differ from the like-named <span class="token punctuation">{</span><span class="token keyword">@code</span></span>
<span class="line"> <span class="token code-section">* <span class="token code language-java"><span class="token class-name">SortedSet</span></span></span><span class="token punctuation">}</span> methods in accepting additional arguments describing</span>
<span class="line"> * whether lower and upper bounds are inclusive versus exclusive.</span>
<span class="line"> * Subsets of any <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">NavigableSet</span></span></span><span class="token punctuation">}</span> must implement the <span class="token punctuation">{</span><span class="token keyword">@code</span></span>
<span class="line"> <span class="token code-section">* <span class="token code language-java"><span class="token class-name">NavigableSet</span></span></span><span class="token punctuation">}</span> interface.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span> The return values of navigation methods may be ambiguous in</span>
<span class="line"> * implementations that permit <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> elements. However, even</span>
<span class="line"> * in this case the result can be disambiguated by checking</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token function">contains</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span></span></span><span class="token punctuation">}</span>. To avoid such issues, implementations of</span>
<span class="line"> * this interface are encouraged to <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>not<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span> permit insertion of</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> elements. (Note that sorted sets of <span class="token punctuation">{</span><span class="token keyword">@link</span></span>
<span class="line"> * <span class="token reference"><span class="token class-name">Comparable</span></span><span class="token punctuation">}</span> elements intrinsically do not permit <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>.)</span>
<span class="line"> *</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Methods</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">subSet</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">)</span></span> subSet(E, E)<span class="token punctuation">}</span>,</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">headSet</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span></span> headSet(E)<span class="token punctuation">}</span>, and</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">tailSet</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span></span> tailSet(E)<span class="token punctuation">}</span></span>
<span class="line"> * are specified to return <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">SortedSet</span></span></span><span class="token punctuation">}</span> to allow existing</span>
<span class="line"> * implementations of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">SortedSet</span></span></span><span class="token punctuation">}</span> to be compatibly retrofitted to</span>
<span class="line"> * implement <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">NavigableSet</span></span></span><span class="token punctuation">}</span>, but extensions and implementations</span>
<span class="line"> * of this interface are encouraged to override these methods to return</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">NavigableSet</span></span></span><span class="token punctuation">}</span>.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This interface is a member of the</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{@docRoot}/../technotes/guides/collections/index.html<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"> * Java Collections Framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@author</span> Doug Lea</span>
<span class="line"> * <span class="token keyword">@author</span> Josh Bloch</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">&lt;</span>E<span class="token punctuation">&gt;</span></span> the type of elements maintained by this set</span>
<span class="line"> * <span class="token keyword">@since</span> 1.6</span>
<span class="line"> */</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Returns the greatest element in this set strictly less than the</span>
<span class="line"> * given element, or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if there is no such element.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">e</span> the value to match</span>
<span class="line"> * <span class="token keyword">@return</span> the greatest element less than <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">e</span></span><span class="token punctuation">}</span>,</span>
<span class="line"> *         or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if there is no such element</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ClassCastException</span></span> if the specified element cannot be</span>
<span class="line"> *         compared with the elements currently in the set</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the specified element is null</span>
<span class="line"> *         and this set does not permit null elements</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">E</span> <span class="token function">lower</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Returns the greatest element in this set less than or equal to</span>
<span class="line"> * the given element, or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if there is no such element.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">e</span> the value to match</span>
<span class="line"> * <span class="token keyword">@return</span> the greatest element less than or equal to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">e</span></span><span class="token punctuation">}</span>,</span>
<span class="line"> *         or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if there is no such element</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ClassCastException</span></span> if the specified element cannot be</span>
<span class="line"> *         compared with the elements currently in the set</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the specified element is null</span>
<span class="line"> *         and this set does not permit null elements</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">E</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Returns the least element in this set greater than or equal to</span>
<span class="line"> * the given element, or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if there is no such element.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">e</span> the value to match</span>
<span class="line"> * <span class="token keyword">@return</span> the least element greater than or equal to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">e</span></span><span class="token punctuation">}</span>,</span>
<span class="line"> *         or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if there is no such element</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ClassCastException</span></span> if the specified element cannot be</span>
<span class="line"> *         compared with the elements currently in the set</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the specified element is null</span>
<span class="line"> *         and this set does not permit null elements</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">E</span> <span class="token function">ceiling</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Returns the least element in this set strictly greater than the</span>
<span class="line"> * given element, or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if there is no such element.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">e</span> the value to match</span>
<span class="line"> * <span class="token keyword">@return</span> the least element greater than <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">e</span></span><span class="token punctuation">}</span>,</span>
<span class="line"> *         or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if there is no such element</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ClassCastException</span></span> if the specified element cannot be</span>
<span class="line"> *         compared with the elements currently in the set</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if the specified element is null</span>
<span class="line"> *         and this set does not permit null elements</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">E</span> <span class="token function">higher</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>lower()</code> 返回小于给定元素的最大元素</li><li><code>floor()</code> 返回小于等于给定元素的最大元素</li><li><code>ceiling()</code> 返回大于等于给定元素的最小元素</li><li><code>higher()</code> 返回大于给定元素的最小元素</li></ul><hr><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Retrieves and removes the first (lowest) element,</span>
<span class="line"> * or returns <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if this set is empty.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@return</span> the first element, or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if this set is empty</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">E</span> <span class="token function">pollFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Retrieves and removes the last (highest) element,</span>
<span class="line"> * or returns <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if this set is empty.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@return</span> the last element, or <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span> if this set is empty</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">E</span> <span class="token function">pollLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回并删除最小或最大的元素。</p><hr><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Returns an iterator over the elements in this set, in ascending order.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@return</span> an iterator over the elements in this set, in ascending order</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回升序迭代器。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Returns a reverse order view of the elements contained in this set.</span>
<span class="line"> * The descending set is backed by this set, so changes to the set are</span>
<span class="line"> * reflected in the descending set, and vice-versa.  If either set is</span>
<span class="line"> * modified while an iteration over either set is in progress (except</span>
<span class="line"> * through the iterator&#39;s own <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">remove</span></span><span class="token punctuation">}</span> operation), the results of</span>
<span class="line"> * the iteration are undefined.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The returned set has an ordering equivalent to</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Collections</span><span class="token punctuation">#</span><span class="token function">reverseOrder</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">)</span></span> Collections.reverseOrder<span class="token punctuation">}</span>(comparator())<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">&gt;</span></span>.</span>
<span class="line"> * The expression <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">s<span class="token punctuation">.</span><span class="token function">descendingSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">descendingSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span><span class="token punctuation">}</span> returns a</span>
<span class="line"> * view of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">s</span></span><span class="token punctuation">}</span> essentially equivalent to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">s</span></span><span class="token punctuation">}</span>.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@return</span> a reverse order view of this set</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">NavigableSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">descendingSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Returns an iterator over the elements in this set, in descending order.</span>
<span class="line"> * Equivalent in effect to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token function">descendingSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span><span class="token punctuation">}</span>.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@return</span> an iterator over the elements in this set, in descending order</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">descendingIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回反向集合视角和反向迭代器。这里说是视角的原因是，集合还是同一个集合，只是视角不同。因此通过反向视角操作集合，会在正向视角上体现。</p><hr><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Returns a view of the portion of this set whose elements range from</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span>.  If <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> and</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span> are equal, the returned set is empty unless <span class="token punctuation">{</span><span class="token keyword">@code</span></span>
<span class="line"> <span class="token code-section">* <span class="token code language-java">fromInclusive</span></span><span class="token punctuation">}</span> and <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toInclusive</span></span><span class="token punctuation">}</span> are both true.  The returned set</span>
<span class="line"> * is backed by this set, so changes in the returned set are reflected in</span>
<span class="line"> * this set, and vice-versa.  The returned set supports all optional set</span>
<span class="line"> * operations that this set supports.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The returned set will throw an <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">IllegalArgumentException</span></span></span><span class="token punctuation">}</span></span>
<span class="line"> * on an attempt to insert an element outside its range.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">fromElement</span> low endpoint of the returned set</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">fromInclusive</span> <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> if the low endpoint</span>
<span class="line"> *        is to be included in the returned view</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">toElement</span> high endpoint of the returned set</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">toInclusive</span> <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> if the high endpoint</span>
<span class="line"> *        is to be included in the returned view</span>
<span class="line"> * <span class="token keyword">@return</span> a view of the portion of this set whose elements range from</span>
<span class="line"> *         <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span>, inclusive, to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span>, exclusive</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ClassCastException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> and</span>
<span class="line"> *         <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span> cannot be compared to one another using this</span>
<span class="line"> *         set&#39;s comparator (or, if the set has no comparator, using</span>
<span class="line"> *         natural ordering).  Implementations may, but are not required</span>
<span class="line"> *         to, throw this exception if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> or</span>
<span class="line"> *         <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span> cannot be compared to elements currently in</span>
<span class="line"> *         the set.</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> or</span>
<span class="line"> *         <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span> is null and this set does</span>
<span class="line"> *         not permit null elements</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> is</span>
<span class="line"> *         greater than <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span>; or if this set itself</span>
<span class="line"> *         has a restricted range, and <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> or</span>
<span class="line"> *         <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span> lies outside the bounds of the range.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">NavigableSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">subSet</span><span class="token punctuation">(</span><span class="token class-name">E</span> fromElement<span class="token punctuation">,</span> <span class="token keyword">boolean</span> fromInclusive<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token class-name">E</span> toElement<span class="token punctuation">,</span>   <span class="token keyword">boolean</span> toInclusive<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Returns a view of the portion of this set whose elements are less than</span>
<span class="line"> * (or equal to, if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">inclusive</span></span><span class="token punctuation">}</span> is true) <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span>.  The</span>
<span class="line"> * returned set is backed by this set, so changes in the returned set are</span>
<span class="line"> * reflected in this set, and vice-versa.  The returned set supports all</span>
<span class="line"> * optional set operations that this set supports.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The returned set will throw an <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">IllegalArgumentException</span></span></span><span class="token punctuation">}</span></span>
<span class="line"> * on an attempt to insert an element outside its range.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">toElement</span> high endpoint of the returned set</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">inclusive</span> <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> if the high endpoint</span>
<span class="line"> *        is to be included in the returned view</span>
<span class="line"> * <span class="token keyword">@return</span> a view of the portion of this set whose elements are less than</span>
<span class="line"> *         (or equal to, if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">inclusive</span></span><span class="token punctuation">}</span> is true) <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span></span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ClassCastException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span> is not compatible</span>
<span class="line"> *         with this set&#39;s comparator (or, if the set has no comparator,</span>
<span class="line"> *         if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span> does not implement <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Comparable</span></span><span class="token punctuation">}</span>).</span>
<span class="line"> *         Implementations may, but are not required to, throw this</span>
<span class="line"> *         exception if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span> cannot be compared to elements</span>
<span class="line"> *         currently in the set.</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span> is null and</span>
<span class="line"> *         this set does not permit null elements</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if this set itself has a</span>
<span class="line"> *         restricted range, and <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">toElement</span></span><span class="token punctuation">}</span> lies outside the</span>
<span class="line"> *         bounds of the range</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">NavigableSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">headSet</span><span class="token punctuation">(</span><span class="token class-name">E</span> toElement<span class="token punctuation">,</span> <span class="token keyword">boolean</span> inclusive<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Returns a view of the portion of this set whose elements are greater</span>
<span class="line"> * than (or equal to, if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">inclusive</span></span><span class="token punctuation">}</span> is true) <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span>.</span>
<span class="line"> * The returned set is backed by this set, so changes in the returned set</span>
<span class="line"> * are reflected in this set, and vice-versa.  The returned set supports</span>
<span class="line"> * all optional set operations that this set supports.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The returned set will throw an <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">IllegalArgumentException</span></span></span><span class="token punctuation">}</span></span>
<span class="line"> * on an attempt to insert an element outside its range.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">fromElement</span> low endpoint of the returned set</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">inclusive</span> <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> if the low endpoint</span>
<span class="line"> *        is to be included in the returned view</span>
<span class="line"> * <span class="token keyword">@return</span> a view of the portion of this set whose elements are greater</span>
<span class="line"> *         than or equal to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span></span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ClassCastException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> is not compatible</span>
<span class="line"> *         with this set&#39;s comparator (or, if the set has no comparator,</span>
<span class="line"> *         if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> does not implement <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Comparable</span></span><span class="token punctuation">}</span>).</span>
<span class="line"> *         Implementations may, but are not required to, throw this</span>
<span class="line"> *         exception if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> cannot be compared to elements</span>
<span class="line"> *         currently in the set.</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> is null</span>
<span class="line"> *         and this set does not permit null elements</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if this set itself has a</span>
<span class="line"> *         restricted range, and <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">fromElement</span></span><span class="token punctuation">}</span> lies outside the</span>
<span class="line"> *         bounds of the range</span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">NavigableSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">tailSet</span><span class="token punctuation">(</span><span class="token class-name">E</span> fromElement<span class="token punctuation">,</span> <span class="token keyword">boolean</span> inclusive<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分别返回 <code>(from, to)</code>, <code>(start, to)</code>, <code>(from, end)</code> 的子集，并提供一个 <code>inclusive</code> 来指明是否包含边界。</p><hr><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> *</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Equivalent to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token function">subSet</span><span class="token punctuation">(</span>fromElement<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> toElement<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span></span><span class="token punctuation">}</span>.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ClassCastException</span></span>       <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span>     <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">SortedSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">subSet</span><span class="token punctuation">(</span><span class="token class-name">E</span> fromElement<span class="token punctuation">,</span> <span class="token class-name">E</span> toElement<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> *</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Equivalent to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token function">headSet</span><span class="token punctuation">(</span>toElement<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span></span><span class="token punctuation">}</span>.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ClassCastException</span></span>       <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span>     <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">SortedSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">headSet</span><span class="token punctuation">(</span><span class="token class-name">E</span> toElement<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> *</span>
<span class="line"> * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Equivalent to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token function">tailSet</span><span class="token punctuation">(</span>fromElement<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">}</span>.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ClassCastException</span></span>       <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">NullPointerException</span></span>     <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> <span class="token punctuation">{</span><span class="token keyword">@inheritDoc</span><span class="token punctuation">}</span></span>
<span class="line"> */</span></span>
<span class="line"><span class="token class-name">SortedSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">tailSet</span><span class="token punctuation">(</span><span class="token class-name">E</span> fromElement<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上一组函数的默认行为：左闭右开。</p><hr>`,29)]))}const i=s(t,[["render",l],["__file","Interface - java.util.NavigableSet.html.vue"]]),u=JSON.parse('{"path":"/jdk-source-code-analysis/java.util/Interface%20-%20java.util.NavigableSet.html","title":"Interface - java.util.NavigableSet","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Definition","slug":"definition","link":"#definition","children":[]}],"git":{},"filePathRelative":"jdk-source-code-analysis/java.util/Interface - java.util.NavigableSet.md"}');export{i as comp,u as data};
