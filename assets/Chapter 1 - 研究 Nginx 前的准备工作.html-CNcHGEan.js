import{_ as l,c as n,a as e,o as a}from"./app-7eKjwDat.js";const t={};function r(s,i){return a(),n("div",null,i[0]||(i[0]=[e('<h1 id="chapter-1-研究-nginx-前的准备工作" tabindex="-1"><a class="header-anchor" href="#chapter-1-研究-nginx-前的准备工作"><span>Chapter 1 - 研究 Nginx 前的准备工作</span></a></h1><p>Created by : Mr Dk.</p><p>2020 / 07 / 16 15:47</p><p>Nanjing, Jiangsu, China</p><hr><h2 id="nginx-是什么" tabindex="-1"><a class="header-anchor" href="#nginx-是什么"><span>Nginx 是什么？</span></a></h2><p>Nginx - 2012 Cloud Award for Developer of the Year，世界第二大 Web 服务器。业界高性能 Web 服务器的代名词。</p><p>作为 Web 服务器的基本功能：基于 REST 架构风格，以 URI 或 URL 作为沟通依据，通过 HTTP 为浏览器等客户端程序提供各种网络服务。目前 Nginx 与其它 Web 服务器的差别如下：</p><ul><li>Tomcat / Jetty 是重量级服务器，与 Nginx 没有可比性</li><li>IIS 只能在 Windows OS 上运行</li><li>Apache 比较中重量级，不支持高并发 (进程量过多)</li></ul><p>Nginx 以性能为王，跨平台，架构适合高并发，并使用当前 OS 中的高效 API 来提高性能。特点：</p><ol><li>请求响应速度快</li><li>高扩展性 - 由多个不同功能、不同层次、不同类型、耦合度低的模块组成，且模块嵌入到二进制文件中执行</li><li>高可靠性 - 核心框架代码设计优秀，模块设计简单</li><li>低内存消耗 - 维护的连接对象占内存极小</li><li>单机支持 100K 以上并发连接</li><li>热部署 - master 管理进程与 worker 工作进程的分离设计</li><li>最自由的 BSD 许可协议</li></ol><h2 id="nginx-所需软件" tabindex="-1"><a class="header-anchor" href="#nginx-所需软件"><span>Nginx 所需软件</span></a></h2><ul><li>GCC 编译器</li><li>PCRE (Perl Compatible Regular Expression) 用于解析正则表达式</li><li>zlib 对 HTTP 包的内容进行 gzip 格式的压缩，以减少网络传输量</li><li>OpenSSL 用于支持 HTTPS</li></ul><h2 id="linux-内核参数优化" tabindex="-1"><a class="header-anchor" href="#linux-内核参数优化"><span>Linux 内核参数优化</span></a></h2><p>可以使得 Nginx 可以拥有更高的性能。比如：</p><ul><li><code>file-max</code> - 进程可以同时打开的最大句柄数</li><li><code>tcp_tw_reuse</code> - 允许将 <code>TIME-WAIT</code> 状态的 socket 重新用于新的 TCP 连接</li><li>...</li></ul><p>以及一些与网络协议栈相关的参数。</p><h2 id="编译安装" tabindex="-1"><a class="header-anchor" href="#编译安装"><span>编译安装</span></a></h2><p>除了少量核心代码，Nginx 完全由各个功能模块组成：</p><ul><li>事件模块</li><li>默认编译进 Nginx 中的 HTTP 模块</li><li>默认不编译进 Nginx 中的 HTTP 模块</li><li>邮件代理服务器相关模块</li><li>其它模块</li></ul><h2 id="命令行控制" tabindex="-1"><a class="header-anchor" href="#命令行控制"><span>命令行控制</span></a></h2><ul><li>启动</li><li>配置文件路径、启动目录</li><li>停止服务 (立刻停止 / 正常处理完当前所有请求再停止)</li><li>重读配置文件 (reload)</li><li>平滑升级 Nginx (同时启动新旧 master 进程，以 <em>优雅</em> 的方式关闭旧版本 Nginx)</li></ul>',22)]))}const p=l(t,[["render",r],["__file","Chapter 1 - 研究 Nginx 前的准备工作.html.vue"]]),x=JSON.parse('{"path":"/understanding-nginx-notes/Part%201%20-%20Nginx%20%E8%83%BD%E5%B8%AE%E6%88%91%E4%BB%AC%E5%81%9A%E4%BB%80%E4%B9%88/Chapter%201%20-%20%E7%A0%94%E7%A9%B6%20Nginx%20%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C.html","title":"Chapter 1 - 研究 Nginx 前的准备工作","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Nginx 是什么？","slug":"nginx-是什么","link":"#nginx-是什么","children":[]},{"level":2,"title":"Nginx 所需软件","slug":"nginx-所需软件","link":"#nginx-所需软件","children":[]},{"level":2,"title":"Linux 内核参数优化","slug":"linux-内核参数优化","link":"#linux-内核参数优化","children":[]},{"level":2,"title":"编译安装","slug":"编译安装","link":"#编译安装","children":[]},{"level":2,"title":"命令行控制","slug":"命令行控制","link":"#命令行控制","children":[]}],"git":{},"filePathRelative":"understanding-nginx-notes/Part 1 - Nginx 能帮我们做什么/Chapter 1 - 研究 Nginx 前的准备工作.md"}');export{p as comp,x as data};
