import{_ as n,c as a,a as e,o as i}from"./app-7eKjwDat.js";const l={};function t(p,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h1 id="solidity-layout-and-structure" tabindex="-1"><a class="header-anchor" href="#solidity-layout-and-structure"><span>Solidity - Layout and Structure</span></a></h1><p>Created by : Mr Dk.</p><p>2020 / 02 / 25 20:49</p><p>Ningbo, Zhejiang, China</p><hr><h2 id="pragmas" tabindex="-1"><a class="header-anchor" href="#pragmas"><span>Pragmas</span></a></h2><p>编译标记只针对当前源代码文件有效。</p><h3 id="version-pragma" tabindex="-1"><a class="header-anchor" href="#version-pragma"><span>Version Pragma</span></a></h3><p>用于使旧的编译器拒绝编译一些新的特性。常用方法：</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.5.2</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="experimental-pragma" tabindex="-1"><a class="header-anchor" href="#experimental-pragma"><span>Experimental Pragma</span></a></h3><p>用于开启一些编译器或语言中默认没有启动的特性。</p><ul><li>ABIEncoderV2</li><li>SMTChecker</li></ul><hr><h2 id="importing-other-source-files" tabindex="-1"><a class="header-anchor" href="#importing-other-source-files"><span>Importing other Source Files</span></a></h2><h3 id="syntax-and-semantics" tabindex="-1"><a class="header-anchor" href="#syntax-and-semantics"><span>Syntax and Semantics</span></a></h3><p>引入其它源文件，从而获得更好的模块化。</p><p>全局模式：</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&quot;filename&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但是这种模式可能带来的问题就是，在 <code>filename</code> 中引入的变量会被自动引入到所有引用它的文件中，可能会带来命名冲突的隐患。可以通过给创建新的全局命名符号来表示 <code>filename</code> 中的变量：</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> symbolName <span class="token keyword">from</span> <span class="token string">&quot;filename&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// or</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&quot;filename&quot;</span> <span class="token keyword">as</span> symbolName<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// symbolName.synbol</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果命名符号存在冲突，或者只想引入某几个变量，可以这样：</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>symbol1 <span class="token keyword">as</span> alias<span class="token punctuation">,</span> symbol2<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;filename&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="path" tabindex="-1"><a class="header-anchor" href="#path"><span>Path</span></a></h3><p>除了 <code>.</code> 和 <code>..</code> 开头的路径以外，所有的路径都会被视为绝对路径。但一般是由编译器决定如何解析路径。</p><hr><h2 id="comments" tabindex="-1"><a class="header-anchor" href="#comments"><span>Comments</span></a></h2><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token comment">// 单行注释</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/*</span>
<span class="line">多行注释</span>
<span class="line">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外还支持一种注释，只能标注在 contract 或方法名上，我一看这不就是 Javadoc 嘛......功能也类似，用于标注文档：</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token comment">/** @title Calculator */</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/// @dev ...</span></span>
<span class="line"><span class="token comment">/// @param w ...</span></span>
<span class="line"><span class="token comment">/// @return res ...</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="structure" tabindex="-1"><a class="header-anchor" href="#structure"><span>Structure</span></a></h2><p>Contract 与 OOP 语言的 <strong>类</strong> 类似。另外，一个 contract 可以继承自其它 contract。此外，还有特殊种类的 contract - libraries 和 interfaces。</p><h3 id="state-variables" tabindex="-1"><a class="header-anchor" href="#state-variables"><span>State Variables</span></a></h3><p>状态变量的值将会永远被存放在 contract 存储中。</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.0</span> <span class="token operator">&lt;</span><span class="token version number">0.7.0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">contract</span> <span class="token class-name">SimpleStorage</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">uint</span> storedData<span class="token punctuation">;</span> <span class="token comment">// State variable</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="functions" tabindex="-1"><a class="header-anchor" href="#functions"><span>Functions</span></a></h3><p>Contract 内可被执行的单元。</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.0</span> <span class="token operator">&lt;</span><span class="token version number">0.7.0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">contract</span> <span class="token class-name">SimpleAuction</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">bid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">payable</span> <span class="token punctuation">{</span> <span class="token comment">// Function</span></span>
<span class="line">        <span class="token comment">// ...</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="function-modifiers" tabindex="-1"><a class="header-anchor" href="#function-modifiers"><span>Function Modifiers</span></a></h3><p>以一种声明式的方式修改函数的语义。</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.22</span> <span class="token operator">&lt;</span><span class="token version number">0.7.0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">contract</span> <span class="token class-name">Purchase</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">address</span> <span class="token keyword">public</span> seller<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">modifier</span> <span class="token function">onlySeller</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Modifier</span></span>
<span class="line">        <span class="token keyword">require</span><span class="token punctuation">(</span></span>
<span class="line">            msg<span class="token punctuation">.</span>sender <span class="token operator">==</span> seller<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;Only seller can call this.&quot;</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">_</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">view</span> onlySeller <span class="token punctuation">{</span> <span class="token comment">// Modifier usage</span></span>
<span class="line">        <span class="token comment">// ...</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="events" tabindex="-1"><a class="header-anchor" href="#events"><span>Events</span></a></h3><p>是 EVM 用于进行日志记录的工具。</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.21</span> <span class="token operator">&lt;</span><span class="token version number">0.7.0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">contract</span> <span class="token class-name">SimpleAuction</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">event</span> <span class="token function">HighestBidIncreased</span><span class="token punctuation">(</span><span class="token builtin">address</span> bidder<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Event</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">bid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">payable</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// ...</span></span>
<span class="line">        <span class="token keyword">emit</span> <span class="token function">HighestBidIncreased</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Triggering event</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="struct-types" tabindex="-1"><a class="header-anchor" href="#struct-types"><span>Struct Types</span></a></h3><p>结构体用于定义一些变量构成的组。</p><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.0</span> <span class="token operator">&lt;</span><span class="token version number">0.7.0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">contract</span> <span class="token class-name">Ballot</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">struct</span> <span class="token class-name">Voter</span> <span class="token punctuation">{</span> <span class="token comment">// Struct</span></span>
<span class="line">        <span class="token builtin">uint</span> weight<span class="token punctuation">;</span></span>
<span class="line">        <span class="token builtin">bool</span> voted<span class="token punctuation">;</span></span>
<span class="line">        <span class="token builtin">address</span> delegate<span class="token punctuation">;</span></span>
<span class="line">        <span class="token builtin">uint</span> vote<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="enum-types" tabindex="-1"><a class="header-anchor" href="#enum-types"><span>Enum Types</span></a></h3><div class="language-solidity line-numbers-mode" data-highlighter="prismjs" data-ext="solidity" data-title="solidity"><pre><code><span class="line"><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.0</span> <span class="token operator">&lt;</span><span class="token version number">0.7.0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">contract</span> <span class="token class-name">Purchase</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">enum</span> <span class="token class-name">State</span> <span class="token punctuation">{</span> Created<span class="token punctuation">,</span> Locked<span class="token punctuation">,</span> Inactive <span class="token punctuation">}</span> <span class="token comment">// Enum</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,51)]))}const o=n(l,[["render",t],["__file","Solidity Layout and Structure.html.vue"]]),r=JSON.parse('{"path":"/notes/Solidity/Solidity%20Layout%20and%20Structure.html","title":"Solidity - Layout and Structure","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Pragmas","slug":"pragmas","link":"#pragmas","children":[{"level":3,"title":"Version Pragma","slug":"version-pragma","link":"#version-pragma","children":[]},{"level":3,"title":"Experimental Pragma","slug":"experimental-pragma","link":"#experimental-pragma","children":[]}]},{"level":2,"title":"Importing other Source Files","slug":"importing-other-source-files","link":"#importing-other-source-files","children":[{"level":3,"title":"Syntax and Semantics","slug":"syntax-and-semantics","link":"#syntax-and-semantics","children":[]},{"level":3,"title":"Path","slug":"path","link":"#path","children":[]}]},{"level":2,"title":"Comments","slug":"comments","link":"#comments","children":[]},{"level":2,"title":"Structure","slug":"structure","link":"#structure","children":[{"level":3,"title":"State Variables","slug":"state-variables","link":"#state-variables","children":[]},{"level":3,"title":"Functions","slug":"functions","link":"#functions","children":[]},{"level":3,"title":"Function Modifiers","slug":"function-modifiers","link":"#function-modifiers","children":[]},{"level":3,"title":"Events","slug":"events","link":"#events","children":[]},{"level":3,"title":"Struct Types","slug":"struct-types","link":"#struct-types","children":[]},{"level":3,"title":"Enum Types","slug":"enum-types","link":"#enum-types","children":[]}]}],"git":{},"filePathRelative":"notes/Solidity/Solidity Layout and Structure.md"}');export{o as comp,r as data};
