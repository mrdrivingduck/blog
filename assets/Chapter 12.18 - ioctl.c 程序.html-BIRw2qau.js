import{_ as s,c as a,a as p,o as t}from"./app-7eKjwDat.js";const e={};function c(o,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="chapter-12-18-ioctl-c-程序" tabindex="-1"><a class="header-anchor" href="#chapter-12-18-ioctl-c-程序"><span>Chapter 12.18 - ioctl.c 程序</span></a></h1><p>Created by : Mr Dk.</p><p>2019 / 09 / 21 22:56</p><p>Nanjing, Jiangsu, China</p><hr><h2 id="_12-18-ioctl-c-程序" tabindex="-1"><a class="header-anchor" href="#_12-18-ioctl-c-程序"><span>12.18 ioctl.c 程序</span></a></h2><h3 id="_12-18-1-功能描述" tabindex="-1"><a class="header-anchor" href="#_12-18-1-功能描述"><span>12.18.1 功能描述</span></a></h3><p>实现了 I/O 控制系统调用 <code>ioctl()</code>。可看作是各个具体设备驱动程序的接口函数，该函数将调用指定的文件句柄对应设备的驱动程序。</p><h3 id="_12-18-2-代码注释" tabindex="-1"><a class="header-anchor" href="#_12-18-2-代码注释"><span>12.18.2 代码注释</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">static</span> ioctl_ptr ioctl_table<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token comment">// no dev</span></span>
<span class="line">    <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token comment">// /dev/mem</span></span>
<span class="line">    <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token comment">// /dev/fd</span></span>
<span class="line">    <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token comment">// /dev/hd</span></span>
<span class="line">    tty_ioctl<span class="token punctuation">,</span> <span class="token comment">// /dev/ttyx</span></span>
<span class="line">    tty_ioctl<span class="token punctuation">,</span> <span class="token comment">// /dev/tty</span></span>
<span class="line">    <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token comment">// dev/lp</span></span>
<span class="line">    <span class="token constant">NULL</span> <span class="token comment">// named pipes</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 设备表中的设备种数</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NR_DEVS</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span> <span class="token punctuation">(</span>ioctl_table<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">sizeof</span> <span class="token punctuation">(</span>ioctl_ptr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="sys-ioctl-i-o-控制系统调用" tabindex="-1"><a class="header-anchor" href="#sys-ioctl-i-o-控制系统调用"><span>sys_ioctl() - I/O 控制系统调用</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_ioctl</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> cmd<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> arg<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">struct</span> <span class="token class-name">file</span> <span class="token operator">*</span> filp<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> dev<span class="token punctuation">,</span> mode<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 判断文件句柄有效性</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>fd <span class="token operator">&gt;=</span> NR_OPEN <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>filp <span class="token operator">=</span> current<span class="token operator">-&gt;</span>filp<span class="token punctuation">[</span>fd<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span>EBADF<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 文件结构对应管道 inode</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>filp<span class="token operator">-&gt;</span>f_inode<span class="token operator">-&gt;</span>i_pipe<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">(</span>filp<span class="token operator">-&gt;</span>f_mode <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">pipe_ioctl</span><span class="token punctuation">(</span>filp<span class="token operator">-&gt;</span>f_inode<span class="token punctuation">,</span> cmd<span class="token punctuation">,</span> arg<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token operator">-</span>EBADF<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 取文件属性</span></span>
<span class="line">    mode <span class="token operator">=</span> filp<span class="token operator">-&gt;</span>f_inode<span class="token operator">-&gt;</span>i_mode<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">S_ISCHR</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">S_ISBLK</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">// 文件不是字符设备文件，也不是块设备文件</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span>EINVAL<span class="token punctuation">;</span></span>
<span class="line">    dev <span class="token operator">=</span> filp<span class="token operator">-&gt;</span>f_inode<span class="token operator">-&gt;</span>i_zone<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 取设备号</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">MAJOR</span><span class="token punctuation">(</span>dev<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> NRDEVS<span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">// 设备号大于系统现有设备数</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span>ENODEV<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ioctl_table<span class="token punctuation">[</span><span class="token function">MAJOR</span><span class="token punctuation">(</span>dev<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 查得对应设备的 ioctl 函数指针</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span>ENOTTY<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> ioctl_table<span class="token punctuation">[</span><span class="token function">MAJOR</span><span class="token punctuation">(</span>dev<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span>dev<span class="token punctuation">,</span> cmd<span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，最后的函数调用定义如下：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">typedef</span> <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>ioctl_ptr<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">int</span> dev<span class="token punctuation">,</span> <span class="token keyword">int</span> cmd<span class="token punctuation">,</span> <span class="token keyword">int</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即，定义了函数指针的参数列表。在 <code>ioctl_table</code> 表中找到对应设备的函数指针，传入参数并调用。</p>`,15)]))}const i=s(e,[["render",c],["__file","Chapter 12.18 - ioctl.c 程序.html.vue"]]),u=JSON.parse('{"path":"/linux-kernel-comments-notes/Chapter%2012%20-%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/Chapter%2012.18%20-%20ioctl.c%20%E7%A8%8B%E5%BA%8F.html","title":"Chapter 12.18 - ioctl.c 程序","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"12.18 ioctl.c 程序","slug":"_12-18-ioctl-c-程序","link":"#_12-18-ioctl-c-程序","children":[{"level":3,"title":"12.18.1 功能描述","slug":"_12-18-1-功能描述","link":"#_12-18-1-功能描述","children":[]},{"level":3,"title":"12.18.2 代码注释","slug":"_12-18-2-代码注释","link":"#_12-18-2-代码注释","children":[]}]}],"git":{},"filePathRelative":"linux-kernel-comments-notes/Chapter 12 - 文件系统/Chapter 12.18 - ioctl.c 程序.md"}');export{i as comp,u as data};
