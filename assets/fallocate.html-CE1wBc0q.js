import{_ as s,c as a,a as e,o as l}from"./app-7eKjwDat.js";const p={};function i(c,n){return l(),a("div",null,n[0]||(n[0]=[e(`<h1 id="fallocate" tabindex="-1"><a class="header-anchor" href="#fallocate"><span>fallocate</span></a></h1><p>Created by : Mr Dk.</p><p>2023 / 05 / 02 22:56</p><p>Hangzhou, Zhejiang, China</p><hr><h2 id="background" tabindex="-1"><a class="header-anchor" href="#background"><span>Background</span></a></h2><p><code>fallocate</code> 用于为文件预分配或收回空间。</p><p>当我们需要一个指定长度的文件时，最简单的方法是，通过内存缓冲区不断向文件中写入，直到写到指定的长度。或者将文件指针直接修改为指定长度的位移处，并向文件中写入一次，那么文件长度会自动扩展到指定长度。</p><p>使用 <code>fallocate</code> 可以快速分配指定长度的未初始化数据块，达到同样的效果；另外，对于文件中已有的全 0 页，<code>fallocate</code> 也可以回收数据块的物理空间，而上层程序读取这个页中的字节时将直接返回全 0。这样可以实现 <a href="http://blog.jcix.top/2018-09-28/hole_punching/" target="_blank" rel="noopener noreferrer">文件打洞</a>。</p><p>这个 CLI 实际上是由 Linux 上的同名系统调用实现而来。</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ fallocate <span class="token parameter variable">--help</span></span>
<span class="line"></span>
<span class="line">Usage:</span>
<span class="line"> fallocate <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token operator">&lt;</span>filename<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">Preallocate space to, or deallocate space from a file.</span>
<span class="line"></span>
<span class="line">Options:</span>
<span class="line"> -c, --collapse-range remove a range from the <span class="token function">file</span></span>
<span class="line"> -d, --dig-holes      detect zeroes and replace with holes</span>
<span class="line"> -i, --insert-range   insert a hole at range, shifting existing data</span>
<span class="line"> -l, <span class="token parameter variable">--length</span> <span class="token operator">&lt;</span>num<span class="token operator">&gt;</span>   length <span class="token keyword">for</span> range operations, <span class="token keyword">in</span> bytes</span>
<span class="line"> -n, --keep-size      maintain the apparent size of the <span class="token function">file</span></span>
<span class="line"> -o, <span class="token parameter variable">--offset</span> <span class="token operator">&lt;</span>num<span class="token operator">&gt;</span>   offset <span class="token keyword">for</span> range operations, <span class="token keyword">in</span> bytes</span>
<span class="line"> -p, --punch-hole     replace a range with a hole <span class="token punctuation">(</span>implies -n<span class="token punctuation">)</span></span>
<span class="line"> -z, --zero-range     zero and ensure allocation of a range</span>
<span class="line"> -x, <span class="token parameter variable">--posix</span>          use posix_fallocate<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> instead of fallocate<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"> -v, <span class="token parameter variable">--verbose</span>        verbose mode</span>
<span class="line"></span>
<span class="line"> -h, <span class="token parameter variable">--help</span>           display this <span class="token builtin class-name">help</span></span>
<span class="line"> -V, <span class="token parameter variable">--version</span>        display version</span>
<span class="line"></span>
<span class="line">Arguments:</span>
<span class="line"> <span class="token operator">&lt;</span>num<span class="token operator">&gt;</span> arguments may be followed by the suffixes <span class="token keyword">for</span></span>
<span class="line">   GiB, TiB, PiB, EiB, ZiB, and YiB <span class="token punctuation">(</span>the <span class="token string">&quot;iB&quot;</span> is optional<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">For <span class="token function">more</span> details see fallocate<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="preallocate" tabindex="-1"><a class="header-anchor" href="#preallocate"><span>Preallocate</span></a></h3><p>预分配一个 1MB 的文件：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ fallocate <span class="token parameter variable">-l</span> 1MiB <span class="token function">file</span></span>
<span class="line"></span>
<span class="line">$ <span class="token function">stat</span> <span class="token function">file</span></span>
<span class="line">  File: <span class="token function">file</span></span>
<span class="line">  Size: <span class="token number">1048576</span>         Blocks: <span class="token number">2048</span>       IO Block: <span class="token number">4096</span>   regular <span class="token function">file</span></span>
<span class="line">Device: 820h/2080d      Inode: <span class="token number">29595</span>       Links: <span class="token number">1</span></span>
<span class="line">Access: <span class="token punctuation">(</span>0644/-rw-r--r--<span class="token punctuation">)</span>  Uid: <span class="token punctuation">(</span> <span class="token number">1000</span>/mrdrivingduck<span class="token punctuation">)</span>   Gid: <span class="token punctuation">(</span> <span class="token number">1000</span>/mrdrivingduck<span class="token punctuation">)</span></span>
<span class="line">Access: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:13:36.445550770 +0800</span>
<span class="line">Modify: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:13:36.445550770 +0800</span>
<span class="line">Change: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:13:36.445550770 +0800</span>
<span class="line"> Birth: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:13:36.445550770 +0800</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个文件有 2048 个 512B 的块。由于不需要对这些块进行初始化（写 0），所以 <code>fallocate</code> 很快就返回了。但是文件系统需要保证读取这些未初始化的块时需要返回全 0，否则这些块中可能会出现已经被删除掉的其它文件中的信息。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">vim</span> <span class="token function">file</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="deallocate" tabindex="-1"><a class="header-anchor" href="#deallocate"><span>Deallocate</span></a></h3><p>由于该文件的内容目前全部都是 0，因此这 1MB 的文件数据实际上不需要任何物理块来存储，仅需要在文件的元信息中标记即可。这样在读取全 0 页时，文件系统将直接返回 0。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ fallocate <span class="token parameter variable">-d</span> <span class="token parameter variable">-v</span> <span class="token function">file</span></span>
<span class="line">file: <span class="token number">1</span> MiB <span class="token punctuation">(</span><span class="token number">1048576</span> bytes<span class="token punctuation">)</span> converted to sparse holes.</span>
<span class="line"></span>
<span class="line">$ <span class="token function">stat</span> <span class="token function">file</span></span>
<span class="line">  File: <span class="token function">file</span></span>
<span class="line">  Size: <span class="token number">1048576</span>         Blocks: <span class="token number">0</span>          IO Block: <span class="token number">4096</span>   regular <span class="token function">file</span></span>
<span class="line">Device: 820h/2080d      Inode: <span class="token number">29595</span>       Links: <span class="token number">1</span></span>
<span class="line">Access: <span class="token punctuation">(</span>0644/-rw-r--r--<span class="token punctuation">)</span>  Uid: <span class="token punctuation">(</span> <span class="token number">1000</span>/mrdrivingduck<span class="token punctuation">)</span>   Gid: <span class="token punctuation">(</span> <span class="token number">1000</span>/mrdrivingduck<span class="token punctuation">)</span></span>
<span class="line">Access: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:22:56.385558933 +0800</span>
<span class="line">Modify: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:23:06.965559107 +0800</span>
<span class="line">Change: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:23:06.965559107 +0800</span>
<span class="line"> Birth: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:22:49.705557904 +0800</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="keep-zero" tabindex="-1"><a class="header-anchor" href="#keep-zero"><span>Keep Zero</span></a></h3><p>也可以通过 <code>-z</code> 参数指定某个范围内的全 0 页一定要分配物理空间。比如对于刚才的文件，我们可以指定第一个 block 必须分配空间，用 <code>-o</code> 和 <code>-l</code> 分别指定范围的起始位置和长度：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ fallocate <span class="token parameter variable">-z</span> <span class="token parameter variable">-o</span> <span class="token number">0</span> <span class="token parameter variable">-l</span> <span class="token number">1</span> <span class="token function">file</span></span>
<span class="line"></span>
<span class="line">$ <span class="token function">stat</span> <span class="token function">file</span></span>
<span class="line">  File: <span class="token function">file</span></span>
<span class="line">  Size: <span class="token number">1048576</span>         Blocks: <span class="token number">8</span>          IO Block: <span class="token number">4096</span>   regular <span class="token function">file</span></span>
<span class="line">Device: 820h/2080d      Inode: <span class="token number">29595</span>       Links: <span class="token number">1</span></span>
<span class="line">Access: <span class="token punctuation">(</span>0644/-rw-r--r--<span class="token punctuation">)</span>  Uid: <span class="token punctuation">(</span> <span class="token number">1000</span>/mrdrivingduck<span class="token punctuation">)</span>   Gid: <span class="token punctuation">(</span> <span class="token number">1000</span>/mrdrivingduck<span class="token punctuation">)</span></span>
<span class="line">Access: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:24:18.705553660 +0800</span>
<span class="line">Modify: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:24:40.725548703 +0800</span>
<span class="line">Change: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:24:40.725548703 +0800</span>
<span class="line"> Birth: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:24:16.525553837 +0800</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于当前文件系统的 I/O 单元大小为 4096 字节（8 个 512B），因此虽然指定的范围只有一个字节，但文件系统将会分配一整个 I/O 单元的物理空间。所以现在文件的前 4096 字节是有物理空间的。</p><p>同样，还是可以用刚才的 <code>-d</code> 参数检测文件中具有物理空间的全 0 页，并回收其物理空间：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ fallocate <span class="token parameter variable">-d</span> <span class="token parameter variable">-v</span> <span class="token function">file</span></span>
<span class="line">file: <span class="token number">4</span> KiB <span class="token punctuation">(</span><span class="token number">4096</span> bytes<span class="token punctuation">)</span> converted to sparse holes.</span>
<span class="line"></span>
<span class="line">$ <span class="token function">stat</span> <span class="token function">file</span></span>
<span class="line">  File: <span class="token function">file</span></span>
<span class="line">  Size: <span class="token number">1048576</span>         Blocks: <span class="token number">0</span>          IO Block: <span class="token number">4096</span>   regular <span class="token function">file</span></span>
<span class="line">Device: 820h/2080d      Inode: <span class="token number">29595</span>       Links: <span class="token number">1</span></span>
<span class="line">Access: <span class="token punctuation">(</span>0644/-rw-r--r--<span class="token punctuation">)</span>  Uid: <span class="token punctuation">(</span> <span class="token number">1000</span>/mrdrivingduck<span class="token punctuation">)</span>   Gid: <span class="token punctuation">(</span> <span class="token number">1000</span>/mrdrivingduck<span class="token punctuation">)</span></span>
<span class="line">Access: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:25:00.975552011 +0800</span>
<span class="line">Modify: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:25:10.975551896 +0800</span>
<span class="line">Change: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:25:10.975551896 +0800</span>
<span class="line"> Birth: <span class="token number">2023</span>-05-02 <span class="token number">23</span>:24:16.525553837 +0800</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p><a href="http://blog.jcix.top/2018-09-28/hole_punching/" target="_blank" rel="noopener noreferrer">文件打洞 (Hole Punching) 及其应用</a></p><p><a href="https://stackoverflow.com/questions/13982478/what-is-file-hole-and-how-can-it-be-used" target="_blank" rel="noopener noreferrer">stackoverflow - what is file hole and how can it be used? [closed]</a></p><p><a href="https://man7.org/linux/man-pages/man1/fallocate.1.html" target="_blank" rel="noopener noreferrer">fallocate(1) — Linux manual page</a></p><p><a href="https://lwn.net/Articles/415889/" target="_blank" rel="noopener noreferrer">LWN.net - Punching holes in files</a></p>`,31)]))}const r=s(p,[["render",i],["__file","fallocate.html.vue"]]),o=JSON.parse('{"path":"/notes/Linux/fallocate.html","title":"fallocate","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Background","slug":"background","link":"#background","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[{"level":3,"title":"Preallocate","slug":"preallocate","link":"#preallocate","children":[]},{"level":3,"title":"Deallocate","slug":"deallocate","link":"#deallocate","children":[]},{"level":3,"title":"Keep Zero","slug":"keep-zero","link":"#keep-zero","children":[]}]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{},"filePathRelative":"notes/Linux/fallocate.md"}');export{r as comp,o as data};
