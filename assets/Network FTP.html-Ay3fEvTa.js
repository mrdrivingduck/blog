import{_ as s,c as n,a,o as l}from"./app-7eKjwDat.js";const t={};function i(r,e){return l(),n("div",null,e[0]||(e[0]=[a(`<h1 id="network-ftp" tabindex="-1"><a class="header-anchor" href="#network-ftp"><span>Network - FTP</span></a></h1><p>Created by : Mr Dk.</p><p>2020 / 12 / 17 11:33</p><p>Nanjing, Jiangsu, China</p><hr><h2 id="about" tabindex="-1"><a class="header-anchor" href="#about"><span>About</span></a></h2><p>FTP (File Transfer Protocol，文件传输协议) 是 TCP/IP 协议组中的协议之一。FTP 协议包括两个组成部分，其一为 FTP 服务器，其二为 FTP 客户端。其中 FTP 服务器用来存储文件，用户可以使用 FTP 客户端通过 FTP 协议访问位于 FTP 服务器上的资源。在开发网站的时候，通常使用 FTP 协议把网页或程序上传到 Web 服务器上。此外，由于 FTP 传输效率非常高，在网络上传输大的文件时，一般也采用该协议。</p><p>FTP 使用明文传输文件，而 SFTP (SSH File Transfer Protocol) 和 SCP (Secure Copy) 使用加密链路传输文件，两者都是 SSH (Secure Shell) 服务的一部分。</p><ul><li>SFTP 可靠性高，可 <strong>断点续传</strong>，效率比 FTP 低一些，但更安全</li><li>SCP 需要知道目标的详细目录，不可断点续传，比 SFTP 更为轻量级</li></ul><h2 id="working-mode" tabindex="-1"><a class="header-anchor" href="#working-mode"><span>Working Mode</span></a></h2><p>FTP 使用熟知端口 TCP 21 作为控制端口，发送或接受命令。但是根据工作模式，还会开辟其它端口作为数据端口。</p><h3 id="port-mode" tabindex="-1"><a class="header-anchor" href="#port-mode"><span>Port Mode</span></a></h3><p>FTP 的 <strong>主动模式</strong>。客户端通过 21 端口连接到服务器。客户端在自身主机上开辟端口用于数据连接，并将这个端口通过 <code>PORT</code> 命令告诉服务器。服务器使用自己的 TCP 20 端口连接到客户端的数据端口传送数据。</p><blockquote><p>如果客户端没有公网地址 (在内网以内)，那么服务器没有办法连接到客户端开辟的数据端口上。(除非能够显式 NAT，但是通常来说客户端开辟的端口是随机的)</p></blockquote><h3 id="passive-mode" tabindex="-1"><a class="header-anchor" href="#passive-mode"><span>Passive Mode</span></a></h3><p>FTP 的 <strong>被动模式</strong>。客户端依旧通过 21 端口连接到服务器，发送 <code>PASV</code> 命令。服务器在自身主机上随机打开一个 <strong>高端端口</strong> (大于 1024)，并告诉客户端这个端口的位置。客户端连接到这个服务器高端端口建立数据连接。高端端口的范围可以在 FTP 服务器上进行配置。</p><hr><h2 id="deploy-install" tabindex="-1"><a class="header-anchor" href="#deploy-install"><span>Deploy &amp;&amp; Install</span></a></h2><p>记录昨天部署一台 FTP 服务器的过程。需求是我的一台内网主机上拥有大量数据需要分享给别人，所以想要搭建一台 FTP 服务器，并给对方开放一个账户。对方能够登录到包含数据的文件夹下，但不希望该账户能访问主机上的其它数据。另外，由于主机位于内网中，还要配置内网穿透。</p><p>通过 APT 安装 <em>vsftpd (very secure FTP daemon)</em>，它是一个完全免费、开放源代码的 FTP 服务器软件，运行在 UNIX 类操作系统上。小巧轻快、安全易用。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> vsftpd</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ service vsftpd status</span>
<span class="line">● vsftpd.service - vsftpd FTP server</span>
<span class="line">     Loaded: loaded (/lib/systemd/system/vsftpd.service; enabled; vendor preset: enabled)</span>
<span class="line">     Active: active (running) since Wed 2020-12-16 17:39:31 CST; 16h ago</span>
<span class="line">   Main PID: 4224 (vsftpd)</span>
<span class="line">      Tasks: 1 (limit: 38277)</span>
<span class="line">     Memory: 16.6M</span>
<span class="line">     CGroup: /system.slice/vsftpd.service</span>
<span class="line">             └─4224 /usr/sbin/vsftpd /etc/vsftpd.conf</span>
<span class="line"></span>
<span class="line">12月 16 17:39:31 zjt-work-ubuntu-20 systemd[1]: Starting vsftpd FTP server...</span>
<span class="line">12月 16 17:39:31 zjt-work-ubuntu-20 systemd[1]: Started vsftpd FTP server.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><h3 id="create-user" tabindex="-1"><a class="header-anchor" href="#create-user"><span>Create User</span></a></h3><p>创建一个普通用户：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> adduser <span class="token punctuation">[</span>--home DIR<span class="token punctuation">]</span> <span class="token punctuation">[</span>--shell <span class="token environment constant">SHELL</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建完毕后，可以在 <code>passwd</code> 文件最后看到：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> /etc/passwd</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>删除用户：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">userdel</span> <span class="token punctuation">[</span><span class="token environment constant">USER</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="white-list-black-list" tabindex="-1"><a class="header-anchor" href="#white-list-black-list"><span>White List / Black List</span></a></h3><p>编辑 vsftpd 的配置文件 <code>/etc/vsftpd.conf</code> 进行配置。</p><p>首先启动 vsftpd 的 user list 功能，该用户列表可以作为黑名单或白名单使用。在当前场景下，我肯定是需要一个白名单，并将提供给对方的账户加入在这个白名单中，这样只有提供给他的账户才可以访问文件。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">userlist_enable=YES</span>
<span class="line">userlist_deny=NO</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>userlist_enable=YES</code> 表示启用用户列表文件 (默认在 <code>/etc/vsftpd.user_list</code>，每行一个账户名)</li><li><code>userlist_deny=NO</code> 表示不拒绝列表中的账户 (即白名单)</li></ul><p>这样，除了名单中指定的账户外，我的主机默认账户被拒绝登录：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ ftp localhost</span>
<span class="line">Connected to localhost.</span>
<span class="line">220 (vsFTPd 3.0.3)</span>
<span class="line">Name (localhost:mrdrivingduck): mrdrivingduck</span>
<span class="line">530 Permission denied.</span>
<span class="line">Login failed.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chroot-jail" tabindex="-1"><a class="header-anchor" href="#chroot-jail"><span>Chroot Jail</span></a></h3><p>将用户登录后的 root 目录锁定在一个特定目录下，形成一个 <em>监狱</em>。用户通过 <code>cd ..</code> 命令无法逃出这个监狱，从而保证用户只能访问特定的目录。Linux 的 <code>chroot</code> 命令能够做到这件事。编辑 <code>/etc/vsftpd.conf</code>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">chroot_local_user=NO</span>
<span class="line">chroot_list_enable=YES</span>
<span class="line">allow_writeable_chroot=NO</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>chroot_local_user</code> 表示一个全局设定，设置是否将所有用户锁定在 jail 内</li><li><code>chroot_list_enable</code> 表示是否启用针对特定用户的 <strong>例外</strong> 设定，即黑名单或白名单，取决于 <code>chroot_local_user</code> 的设定 - 名单文件默认位于 <code>/etc/vsftpd.chroot_list</code></li><li><code>allow_writeable_chroot</code> - 是否允许用户登录后被 chroot 锁定的路径可写 (是一个安全策略)</li></ul><blockquote><p>如果将 <code>allow_writeable_chroot</code> 设置为 <code>NO</code>，可能会遇到 <code>500 OOPS: vsftpd: refusing to run with writable root inside chroot ()</code> 的错误。有两种方法可以解决这个问题。</p><p>将 <code>allow_writeable_chroot</code> 设置为 <code>YES</code> 可以直接绕开安全检查，免去了很多不必要的麻烦，但是可能会带来 <strong>安全问题</strong> (<a href="https://serverfault.com/questions/743949/vsftp-why-is-allow-writeable-chroot-yes-a-bad-idea" target="_blank" rel="noopener noreferrer">ROARING BEAST ATTACK</a>)。</p><p>另一种方法是让用户被锁定到的路径 <strong>不可写</strong>，但是如果需要路径能够被浏览，那么就要保留路径的 <strong>可读</strong> 和 <strong>可执行</strong> 权限。因此，这种方法实际上是最安全的。</p><p>我本以为将开放账户的 root 路径下的文件夹权限设置一下就行了。没想到，由于我存放数据的 NTFS 文件系统位于一个移动硬盘上，使用 <code>chmod</code> 居然无法更改目录权限 😥。参考 <a href="http://blog.itpub.net/31536365/viewspace-2154308/" target="_blank" rel="noopener noreferrer">这个解决方案</a> 后，我只能到 <code>/etc/fstab</code> 中手动设置：</p><ul><li>通过 <code>sudo fdisk -l</code> 查询这个硬盘的 UUID</li><li>通过 <code>cat /etc/passwd</code> 查询当前主机用户的 uid、gid</li><li>在 <code>/etc/fstab</code> 中设置硬盘挂载点、设置目录拥有者为主机用户、主机用户拥有 <code>7</code> 权限、其它用户只有 <code>5</code> 权限。</li></ul><p>这样，开放账户登录到该路径后，将不具有写权限；而我的主机用户可以继续向硬盘中写入数据。</p></blockquote><h3 id="passive-mode-frp" tabindex="-1"><a class="header-anchor" href="#passive-mode-frp"><span>Passive Mode &amp;&amp; frp</span></a></h3><p>由于 FTP 客户端也在内网中，显然，FTP 服务器无法使用主动模式，那么需要显式将 vsftpd 配置为 <strong>被动模式</strong>。此外，还遇到了一些错误，通过参考 <a href="https://blog.csdn.net/zengd0/article/details/109403079" target="_blank" rel="noopener noreferrer">这篇文章</a>，还要加一些额外配置。在 <code>/etc/vsftpd.conf</code> 中：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">pasv_enable=YES</span>
<span class="line">pasv_promiscuous=YES</span>
<span class="line">pasv_address=118.31.10.213</span>
<span class="line">pasv_addr_resolve=YES</span>
<span class="line">listen_ipv6=NO</span>
<span class="line">listen=YES</span>
<span class="line">pasv_min_port=12792</span>
<span class="line">pasv_max_port=12793</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，<code>pasv_address</code> 是 frp 服务器的运行地址，是必须的；<code>pasv_min_port</code> 和 <code>pasv_max_port</code> 确定了 FTP 服务器上打开数据端口的范围，这些端口需要被穿透到 frp 服务器的相同端口上。所以整体的 frp 端口穿透方案如下 (包括控制端口 21)：</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">ftp</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">tcp</span></span>
<span class="line"><span class="token key attr-name">local_ip</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span></span>
<span class="line"><span class="token key attr-name">local_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">21</span></span>
<span class="line"><span class="token key attr-name">remote_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">2121</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">frp-pasv-1</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">tcp</span></span>
<span class="line"><span class="token key attr-name">local_ip</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span></span>
<span class="line"><span class="token key attr-name">local_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">12792</span></span>
<span class="line"><span class="token key attr-name">remote_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">12792</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">frp-pasv-2</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">type</span> <span class="token punctuation">=</span> <span class="token value attr-value">tcp</span></span>
<span class="line"><span class="token key attr-name">local_ip</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span></span>
<span class="line"><span class="token key attr-name">local_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">12793</span></span>
<span class="line"><span class="token key attr-name">remote_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">12793</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>FTP 客户端应当以被动模式连接 frp 服务器的 <code>2121</code> (FTP 服务器控制端口的远程端口)。注意，frp 的所有远程端口都应当在云服务器的安全组白名单内。</p><h3 id="others" tabindex="-1"><a class="header-anchor" href="#others"><span>Others</span></a></h3><p>Ubuntu 20.04 上还可能在 vsftpd 服务的日志中看到错误，解决方案 <a href="https://askubuntu.com/questions/1239503/ubuntu-20-04-and-20-10-etc-securetty-no-such-file-or-directory" target="_blank" rel="noopener noreferrer">在此</a>。</p><hr><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>这等折腾，very interesting 😄</p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p><a href="https://blog.csdn.net/feit2417/article/details/82903314" target="_blank" rel="noopener noreferrer">CSDN - vsftpd -- 用户名单文件 ftpusers 和 user_list</a></p><p><a href="https://blog.csdn.net/gybshen/article/details/79782884" target="_blank" rel="noopener noreferrer">CSDN - vsftpd 配置: chroot_local_user 与 chroot_list_enable 详解</a></p><p><a href="https://wiki.archlinux.org/index.php/Very_Secure_FTP_Daemon_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noopener noreferrer">Arch Linux - Very Secure FTP Daemon (简体中文)</a></p><p><a href="https://www.benscobie.com/fixing-500-oops-vsftpd-refusing-to-run-with-writable-root-inside-chroot/" target="_blank" rel="noopener noreferrer">Ben Scobie - Fixing 500 OOPS: vsftpd: refusing to run with writable root inside chroot ()</a></p>`,58)]))}const o=s(t,[["render",i],["__file","Network FTP.html.vue"]]),c=JSON.parse('{"path":"/notes/Network/Network%20FTP.html","title":"Network - FTP","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"About","slug":"about","link":"#about","children":[]},{"level":2,"title":"Working Mode","slug":"working-mode","link":"#working-mode","children":[{"level":3,"title":"Port Mode","slug":"port-mode","link":"#port-mode","children":[]},{"level":3,"title":"Passive Mode","slug":"passive-mode","link":"#passive-mode","children":[]}]},{"level":2,"title":"Deploy && Install","slug":"deploy-install","link":"#deploy-install","children":[]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[{"level":3,"title":"Create User","slug":"create-user","link":"#create-user","children":[]},{"level":3,"title":"White List / Black List","slug":"white-list-black-list","link":"#white-list-black-list","children":[]},{"level":3,"title":"Chroot Jail","slug":"chroot-jail","link":"#chroot-jail","children":[]},{"level":3,"title":"Passive Mode && frp","slug":"passive-mode-frp","link":"#passive-mode-frp","children":[]},{"level":3,"title":"Others","slug":"others","link":"#others","children":[]}]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{},"filePathRelative":"notes/Network/Network FTP.md"}');export{o as comp,c as data};
