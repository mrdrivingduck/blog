import{_ as a,c as s,a as e,o as t}from"./app-7eKjwDat.js";const p="/blog/assets/maven-cmd-dG_KS7P4.png",l="/blog/assets/maven-compile-ChBVz1-S.png",c="/blog/assets/maven-clean-C8COs4Yn.png",i={};function o(u,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="java-maven-项目构建工具" tabindex="-1"><a class="header-anchor" href="#java-maven-项目构建工具"><span>Java - Maven 项目构建工具</span></a></h1><p>Created by : Mr Dk.</p><p>2018 / 11 / 03 15:01</p><p>Nanjing, Jiangsu, China</p><hr><h2 id="about" tabindex="-1"><a class="header-anchor" href="#about"><span>About</span></a></h2><p><em>Apache Maven</em> 是一个项目管理和综合工具。提供一个 <strong>项目对象模型文件 (POM)</strong> 的概念来管理项目的构建、相关性和文档。还能够自动下载项目依赖库。</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><p>从 Apache official 上下载 Maven 的可执行文件并解压。</p><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h3><ol><li>添加环境变量 <code>MAVEN_HOME</code> - <code>C:\\Program Files\\apache-maven-3.6.3</code></li><li>在环境变量 <code>PATH</code> 中加入 <code>%MAVEN_HOME%\\bin</code></li></ol><h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">vim</span> /etc/profile</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">export MAVEN_HOME=/opt/module/apache-maven-3.3.9</span>
<span class="line">export MAVEN_REPO=/opt/module/apache-maven-3.3.9/m2/repository</span>
<span class="line">export PATH=$PATH:$MAVEN_HOME/bin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">source</span> /etc/profile</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>检测是否成功:</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ mvn -version</span>
<span class="line">Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)</span>
<span class="line">Maven home: C:\\Program Files\\apache-maven-3.6.3</span>
<span class="line">Java version: 1.8.0_231, vendor: Oracle Corporation, runtime: C:\\Program Files\\Java\\jre1.8.0_231</span>
<span class="line">Default locale: zh_CN, platform encoding: GBK</span>
<span class="line">OS name: &quot;windows 10&quot;, version: &quot;10.0&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><p>Maven 默认从 <strong>中央存储库</strong> (<code>http://repo1.maven.org/maven2/</code>) 自动下载依赖资源。由于国内的网络环境问题，可以修改 Maven 的配置文件，添加国内镜像，从而加快下载速度。官方文档教程：<a href="http://maven.apache.org/guides/mini/guide-mirror-settings.html" target="_blank" rel="noopener noreferrer">Apache Maven - Guide to Mirror Settings</a>。</p><p>首先找到 Maven 的配置文件：</p><ul><li>Windows 下 - <code>\${user.home}/.m2/settings.xml</code></li><li>Linux 下 - <code>/etc/maven/settings.xml</code> (似乎 Windows 也 OK？？？ 😧)</li></ul><p>在配置文件中加入国内镜像 (阿里云为例):</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>nexus-aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Nexus aliyun<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.aliyun.com/nexus/content/groups/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="project" tabindex="-1"><a class="header-anchor" href="#project"><span>Project</span></a></h2><p>在 Eclipse 中新建一个 Maven project，里面有很多个工程模板，根据需求选择 (一般选择 <code>quickstart</code> 即可)，填写 <code>groupId</code>、<code>artifactId</code>、<code>version</code>。Maven 通过这三个元素唯一确定一个工程：</p><ul><li><code>groupId</code> - the unique identifier of the organization or group that created the project</li><li><code>artifactId</code> - unique base name of the primary artifact being generated by this project</li><li><code>groupId</code> 和 <code>artifactId</code> 也会组合为源代码路径 <code>/src</code> 下的默认包名</li></ul><p>根据需要设置 <code>JRE System Library</code>。如果需要引入依赖：</p><ul><li>定位到工程根目录的 <code>pom.xml</code> 文件中的 <code>&lt;dependencies&gt;</code> 内</li><li>加入依赖的定义组 <code>&lt;dependency&gt;</code>，其中包括依赖项目的 <code>groupId</code>、<code>artifactId</code>、<code>version</code>，以及 <code>scope</code> (部署阶段，若不加则默认所有阶段)</li></ul><p>配置保存后 Maven 会将依赖的 <code>.jar</code> 文件下载到 <em>Maven</em> 默认的本地存储库下 - <code>\${user.home}/.m2/repository/</code>。<code>.jar</code> 文件下载完毕后，会出现在 <code>Build Path</code> 的 <code>Maven Dependencies</code> 中。之后直接在 <code>src/</code> 目录下进行编码即可，依赖的类可以随时被 <code>import</code>。</p><p>与当前工程有关的信息全部都在 <code>pom.xml</code> 中，包括各子路径的作用等。右键工程，点击 <code>Maven/Update Project</code> 可重新构建工程并下载依赖。</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.vertx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>vertx-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="command" tabindex="-1"><a class="header-anchor" href="#command"><span>Command</span></a></h2><p>在 cmd 中直接运行命令</p><ul><li><code>mvn compile</code> - 将 Java 源文件编译为 <code>.class</code> 文件</li><li><code>mvn test</code> - 测试，并生成测试报告</li><li><code>mvn clean</code> - 将以前编译的 <code>.class</code> 文件删除</li><li><code>mvn package</code> - 打包</li><li><code>mvn install</code> - 打包并放入 <code>maven</code> 本地仓库中</li><li>...</li></ul><p>在 eclipse 中的操作步骤：</p><ul><li>选择 <code>Run As</code></li><li>选择 <code>Maven build </code></li><li>在其中的 <code>Goals</code> 中填入对应的命令 - 如 <code>compile</code>、<code>install</code> 等</li></ul><p>在 Visual Studio Code 中的 <em>Maven for Java</em> 插件的帮助下可直接运行命令：</p><p><img src="`+p+'" alt="maven-cmd"></p><p><code>mvn compile</code> 命令：</p><p><img src="'+l+'" alt="maven-compile"></p><p><code>mvn clean</code> 命令：</p><p><img src="'+c+`" alt="maven-clean"></p><p>编译前，需要在 <code>pom.xml</code> 文件中指定编译所需的 JDK 版本和编码格式，以及指定 <code>maven-compiler-plugins</code> 的版本 <code>&lt;version&gt;&lt;/version&gt;</code>。</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.6.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>其实以前经常看到 <em>Maven</em> 这个东西，特别是在用别人的代码的时候但是没有花心思研究。</p><p>今天学习 <em>Vert.x</em> 框架的时候，写了一些 demo 准备上传到 GitHub 上，突然发现工程目录下 <code>lib/</code> 里的文件有 80 MB。包括 <em>Vert.x</em> 的各种 <code>.jar</code> 文件以及其依赖文件，传上去既影响速度也没有必要。所以把整个工程构建成 Maven project，这样不再需要上传依赖的库了。</p><hr>`,49)]))}const r=a(i,[["render",o],["__file","Java Maven.html.vue"]]),g=JSON.parse('{"path":"/notes/Java/Java%20Maven.html","title":"Java - Maven 项目构建工具","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"About","slug":"about","link":"#about","children":[]},{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[{"level":3,"title":"Windows","slug":"windows","link":"#windows","children":[]},{"level":3,"title":"Linux","slug":"linux","link":"#linux","children":[]}]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":2,"title":"Project","slug":"project","link":"#project","children":[]},{"level":2,"title":"Command","slug":"command","link":"#command","children":[]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"git":{},"filePathRelative":"notes/Java/Java Maven.md"}');export{r as comp,g as data};
