import{_ as s,c as a,a as t,o as e}from"./app-7eKjwDat.js";const p={};function l(i,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h1 id="http-post-提交表单的两种方式" tabindex="-1"><a class="header-anchor" href="#http-post-提交表单的两种方式"><span>HTTP - POST 提交表单的两种方式</span></a></h1><p>Created by : Mr Dk.</p><p>2018 / 11 / 08 10:16</p><p>Nanjing, Jiangsu, China</p><hr><h2 id="urlencoded" tabindex="-1"><a class="header-anchor" href="#urlencoded"><span>URLEncoded</span></a></h2><p>是 HTML 中默认的表单提交方式（<code>&lt;form&gt;</code> 中的 <code>enctype</code>），提交的数据按照 <code>key1=val1&amp;key2=val2</code> 的方式进行编码。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">POST http://www.example.com HTTP/1.1</span>
<span class="line">Content-Type: application/x-www-form-urlencoded;charset=utf-8</span>
<span class="line"></span>
<span class="line">title=test&amp;sub%5B%5D=1&amp;sub%5B%5D=2&amp;sub%5B%5D=3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <em>Apache HTTP Components</em> 中的编程方式：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 参数准备 key-value</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BasicNameValuePair</span><span class="token punctuation">&gt;</span></span> paramPairs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">paramPairs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BasicNameValuePair</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zjt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">paramPairs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BasicNameValuePair</span><span class="token punctuation">(</span><span class="token string">&quot;passwd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">UrlEncodedFormEntity</span> postEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UrlEncodedFormEntity</span><span class="token punctuation">(</span>paramPairs<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// HttpPost 初始化</span></span>
<span class="line"><span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClients</span><span class="token punctuation">.</span><span class="token function">createDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">HttpPost</span> httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">postEntity<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">postEntity<span class="token punctuation">.</span><span class="token function">setContentEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">httpPost<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span>postEntity<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 执行</span></span>
<span class="line"><span class="token class-name">CloseableHttpResponse</span> response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="multipart" tabindex="-1"><a class="header-anchor" href="#multipart"><span>Multipart</span></a></h2><p><code>&lt;form&gt;</code> 中的 <code>enctype</code> 为 <code>multipart/form-data</code>，将会产生一个 <em>boundary</em> 用于分割字段。可用于上传文件：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">POST http://www.example.com HTTP/1.1</span>
<span class="line">Content-Type:multipart/form-data; boundary=----WebKitFormBoundaryrGKCBY7qhFd3TrwA</span>
<span class="line"></span>
<span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA</span>
<span class="line">Content-Disposition: form-data; name=&quot;text&quot;</span>
<span class="line"></span>
<span class="line">title</span>
<span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA</span>
<span class="line">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;chrome.png&quot;</span>
<span class="line">Content-Type: image/png</span>
<span class="line"></span>
<span class="line">PNG ... content of chrome.png ...</span>
<span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA--</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,14)]))}const c=s(p,[["render",l],["__file","Network HTTP POSTing form.html.vue"]]),u=JSON.parse('{"path":"/notes/Network/Network%20HTTP%20POSTing%20form.html","title":"HTTP - POST 提交表单的两种方式","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"URLEncoded","slug":"urlencoded","link":"#urlencoded","children":[]},{"level":2,"title":"Multipart","slug":"multipart","link":"#multipart","children":[]}],"git":{},"filePathRelative":"notes/Network/Network HTTP POSTing form.md"}');export{c as comp,u as data};
