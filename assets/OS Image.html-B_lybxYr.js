import{_ as e,c as l,a as t,o as a}from"./app-7eKjwDat.js";const n="/blog/assets/disk-partition-C89-NF1y.png",r="/blog/assets/linux-partition-DpQKAW0F.png",o="/blog/assets/partition-structure-BsN3G4y0.png",s={};function p(c,i){return a(),l("div",null,i[0]||(i[0]=[t('<h1 id="linux-image" tabindex="-1"><a class="header-anchor" href="#linux-image"><span>Linux - Image</span></a></h1><p>Created by : Mr Dk.</p><p>2019 / 07 / 22 15:53</p><p>Nanjing, Jiangsu, China</p><hr><h2 id="about" tabindex="-1"><a class="header-anchor" href="#about"><span>About</span></a></h2><p><code>IMG</code> 指的是以 <code>.img</code> 文件扩展名结尾的二进制 <strong>文件</strong>，其中存储的内容是软盘、硬盘、光盘等存储介质上的原始二进制数据。</p><hr><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>Raw image 包含了原始存储介质上每个扇区的原始数据。由于存储介质扇区上的数据组织格式和文件系统有关，因此，<code>.img</code> 文件的内部格式，与创建该映像的文件系统相同。此外，对于光盘介质的映像，应当包括光盘上所有的 tracks： (轨道？)</p><ul><li>Audio tracks</li><li>Data tracks</li><li>Video tracks</li></ul><p>不仅包括每个扇区的数据，还包括每个扇区的控制头部和错误校验区域。由于映像文件除了磁盘上的数据外没有任何的附加信息，因此只能被能够自动识别文件系统的程序处理。</p><p>Linux 的发行版上已经内置了对一些文件系统映像的支持；Windows 7 以前是不支持的，需要用专门的映像解析软件 - 比如当年的 Daemon Tools。Windows 10 里面应当已经内置了映像解析了，所以安装 Office 时，下载了 <code>.iso</code> 映像文件后可以直接打开文件系统访问。</p><hr><h2 id="partition" tabindex="-1"><a class="header-anchor" href="#partition"><span>Partition</span></a></h2><p><img src="'+n+'" alt="disk-partition"></p><p>磁盘被分为了很多扇区：</p><ul><li>其中，最开始的扇区为 MBR，用于引导系统启动</li><li>MBR 能够找到 boot partition，即启动分区，从而启动操作系统</li><li>每个分区包含： <ul><li>Boot sector - 即启动扇区</li><li>之后的扇区随文件系统而异</li></ul></li></ul><p><img src="'+r+'" alt="linux-partition"></p><p>一个典型的 Linux 系统的分区：(maybe <em>ext4</em> FS?)</p><ul><li>最开始的部分是 OS 引导块 - boot block，通常位于第一扇区中</li><li>之后的部分 - super block <ul><li>其中的 magic 指明文件系统的类型</li><li>记录了所有的全局元数据 <ul><li>inode、数据块的数量</li><li>数据块的 bitmap 起始地址和长度</li><li>数据块的起始地址和长度</li><li>inode bitmap 的起始地址和长度</li><li>inode 数组的起始地址和长度</li><li>......</li></ul></li><li>Super block 的大小和位置是固定的，通常位于第二扇区中</li></ul></li><li>再之后就是实际的 bitmap 和各个块的数组 <ul><li>数组用于存放实际数据</li><li>bitmap 用于指示块是否被使用</li></ul></li></ul><p><img src="'+o+'" alt="partition-structure"></p><p>不同文件系统对分区中数据的组织方式不同，而映像文件只是分区中原始数据的拷贝。因此存储格式与创建映像时的文件系统相同。</p><hr><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p>https://en.wikipedia.org/wiki/IMG_(file_format)</p><p>https://zhuanlan.zhihu.com/p/36612326</p><p>https://www.cnblogs.com/liwei0526vip/p/4998614.html</p><hr>',29)]))}const u=e(s,[["render",p],["__file","OS Image.html.vue"]]),d=JSON.parse('{"path":"/notes/Operating%20System/OS%20Image.html","title":"Linux - Image","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"About","slug":"about","link":"#about","children":[]},{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Partition","slug":"partition","link":"#partition","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{},"filePathRelative":"notes/Operating System/OS Image.md"}');export{u as comp,d as data};
