import{_ as a,c as e,a as n,o as l}from"./app-7eKjwDat.js";const i={};function p(r,s){return l(),e("div",null,s[0]||(s[0]=[n(`<h1 id="addr2line" tabindex="-1"><a class="header-anchor" href="#addr2line"><span>addr2line</span></a></h1><p>Created by : Mr Dk.</p><p>2023 / 01 / 15 17:25</p><p>Hangzhou, Zhejiang, China</p><hr><h2 id="background" tabindex="-1"><a class="header-anchor" href="#background"><span>Background</span></a></h2><p><code>addr2line</code> 用于将程序地址翻译为代码中的源文件名和行号。</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ addr2line <span class="token parameter variable">--help</span></span>
<span class="line">Usage: addr2line <span class="token punctuation">[</span>option<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>addr<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line"> Convert addresses into line number/file name pairs.</span>
<span class="line"> If no addresses are specified on the <span class="token builtin class-name">command</span> line, they will be <span class="token builtin class-name">read</span> from stdin</span>
<span class="line"> The options are:</span>
<span class="line">  @<span class="token operator">&lt;</span>file<span class="token operator">&gt;</span>                Read options from <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token parameter variable">-a</span> <span class="token parameter variable">--addresses</span>         Show addresses</span>
<span class="line">  <span class="token parameter variable">-b</span> <span class="token parameter variable">--target</span><span class="token operator">=</span><span class="token operator">&lt;</span>bfdname<span class="token operator">&gt;</span>  Set the binary <span class="token function">file</span> <span class="token function">format</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token parameter variable">--exe</span><span class="token operator">=</span><span class="token operator">&lt;</span>executable<span class="token operator">&gt;</span>  Set the input <span class="token function">file</span> name <span class="token punctuation">(</span>default is a.out<span class="token punctuation">)</span></span>
<span class="line">  <span class="token parameter variable">-i</span> <span class="token parameter variable">--inlines</span>           Unwind inlined functions</span>
<span class="line">  <span class="token parameter variable">-j</span> <span class="token parameter variable">--section</span><span class="token operator">=</span><span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>    Read section-relative offsets instead of addresses</span>
<span class="line">  <span class="token parameter variable">-p</span> --pretty-print      Make the output easier to <span class="token builtin class-name">read</span> <span class="token keyword">for</span> humans</span>
<span class="line">  <span class="token parameter variable">-s</span> <span class="token parameter variable">--basenames</span>         Strip directory names</span>
<span class="line">  <span class="token parameter variable">-f</span> <span class="token parameter variable">--functions</span>         Show <span class="token keyword">function</span> names</span>
<span class="line">  <span class="token parameter variable">-C</span> --demangle<span class="token punctuation">[</span><span class="token operator">=</span>style<span class="token punctuation">]</span>  Demangle <span class="token keyword">function</span> names</span>
<span class="line">  <span class="token parameter variable">-R</span> --recurse-limit     Enable a limit on recursion whilst demangling.  <span class="token punctuation">[</span>Default<span class="token punctuation">]</span></span>
<span class="line">  <span class="token parameter variable">-r</span> --no-recurse-limit  Disable a limit on recursion whilst demangling</span>
<span class="line">  <span class="token parameter variable">-h</span> <span class="token parameter variable">--help</span>              Display this information</span>
<span class="line">  <span class="token parameter variable">-v</span> <span class="token parameter variable">--version</span>           Display the program&#39;s version</span>
<span class="line"></span>
<span class="line">addr2line: supported targets: elf64-x86-64 elf32-i386 elf32-iamcu elf32-x86-64 pei-i386 pei-x86-64 elf64-l1om elf64-k1om elf64-little elf64-big elf32-little elf32-big pe-x86-64 pe-bigobj-x86-64 pe-i386 plugin srec symbolsrec verilog tekhex binary ihex</span>
<span class="line">Report bugs to <span class="token operator">&lt;</span>http://www.sourceware.org/bugzilla/<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h2><p>PolarDB for PostgreSQL 内核代码中的 Assert 条件测试失败后，会在内核错误日志中打印堆栈的 trace：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2023-01-13 03:25:24.506 UTC [67861] [67861] LOG:</span>
<span class="line">        postgres(5432): postgres postgres 127.0.0.1(40586)SELECT() [0x989e1b]</span>
<span class="line">        postgres(5432): postgres postgres 127.0.0.1(40586)SELECT(polar_exceptional_condition+0x9) [0x989f09]</span>
<span class="line">        postgres(5432): postgres postgres 127.0.0.1(40586)SELECT() [0x70d9c1]</span>
<span class="line">        postgres(5432): postgres postgres 127.0.0.1(40586)SELECT(ExecScan+0x359) [0x6ee499]</span>
<span class="line">        /home/postgres/tmp_basedir_polardb_pg_1100_bld/lib/polar_sql_plan_monitor.so(+0x2bcb) [0x7f5a3e658bcb]</span>
<span class="line">        postgres(5432): postgres postgres 127.0.0.1(40586)SELECT() [0x6e4716]</span>
<span class="line">        postgres(5432): postgres postgres 127.0.0.1(40586)SELECT(standard_ExecutorRun+0x17a) [0x6e4c7a]</span>
<span class="line">        /home/postgres/tmp_basedir_polardb_pg_1100_bld/lib/polar_stat_plans.so(+0x429d) [0x7f5a4c09d29d]</span>
<span class="line">        /home/postgres/tmp_basedir_polardb_pg_1100_bld/lib/pg_stat_statements.so(+0x40da) [0x7f5a3e6f60da]</span>
<span class="line">        /home/postgres/tmp_basedir_polardb_pg_1100_bld/lib/polar_stat_sql.so(+0x2eda) [0x7f5a3e6eaeda]</span>
<span class="line">        /home/postgres/tmp_basedir_polardb_pg_1100_bld/lib/auto_explain.so(+0x274a) [0x7f5a3e6a074a]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，每行最后的十六进制数即为代码中的地址。想要看这个堆栈在代码中的对应位置，就可以使用 <code>addr2line</code>。</p><p>使用 <code>-e</code> 参数指定对应的可执行文件：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ addr2line <span class="token parameter variable">-e</span> postgres 0x989e1b</span>
<span class="line">/home/postgres/polardb_pg/src/backend/utils/error/assert.c:90</span>
<span class="line"></span>
<span class="line">$ addr2line <span class="token parameter variable">-e</span> postgres 0x6ee499</span>
<span class="line">/home/postgres/polardb_pg/src/backend/executor/execScan.c:98</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果加上 <code>-f</code> 参数，还可以打印代码所在的函数名：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ addr2line <span class="token parameter variable">-e</span> ~/tmp_basedir_polardb_pg_1100_bld/bin/postgres <span class="token parameter variable">-f</span> 0x70d9c1</span>
<span class="line">SeqNext</span>
<span class="line">/home/postgres/polardb_pg/src/backend/executor/nodeSeqscan.c:100 <span class="token punctuation">(</span>discriminator <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-i</code> 参数用于打印被内联函数的原始位置。</p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p><a href="https://linux.die.net/man/1/addr2line" target="_blank" rel="noopener noreferrer">addr2line(1) - Linux man page</a></p>`,20)]))}const o=a(i,[["render",p],["__file","addr2line.html.vue"]]),c=JSON.parse('{"path":"/notes/Linux/addr2line.html","title":"addr2line","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Background","slug":"background","link":"#background","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Demo","slug":"demo","link":"#demo","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{},"filePathRelative":"notes/Linux/addr2line.md"}');export{o as comp,c as data};
