import{_ as n,c as a,a as p,o as t}from"./app-7eKjwDat.js";const e={};function l(o,s){return t(),a("div",null,s[0]||(s[0]=[p(`<h1 id="ltrace-strace" tabindex="-1"><a class="header-anchor" href="#ltrace-strace"><span>ltrace / strace</span></a></h1><p>Created by : Mr Dk.</p><p>2023 / 01 / 08 23:26</p><p>Hangzhou, Zhejiang, China</p><hr><h2 id="background" tabindex="-1"><a class="header-anchor" href="#background"><span>Background</span></a></h2><p><code>ltrace</code> 用于追踪一个程序的所有库函数调用，<code>strace</code> 用于追踪一个函数的所有系统调用。此外它们也可以追踪程序运行过程中接收到的信号。</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">strace</span> <span class="token parameter variable">--help</span></span>
<span class="line">Usage: <span class="token function">strace</span> <span class="token punctuation">[</span>-ACdffhikqqrtttTvVwxxyyzZ<span class="token punctuation">]</span> <span class="token punctuation">[</span>-I N<span class="token punctuation">]</span> <span class="token punctuation">[</span>-b execve<span class="token punctuation">]</span> <span class="token punctuation">[</span>-e EXPR<span class="token punctuation">]</span><span class="token punctuation">..</span>.</span>
<span class="line">              <span class="token punctuation">[</span>-a COLUMN<span class="token punctuation">]</span> <span class="token punctuation">[</span>-o FILE<span class="token punctuation">]</span> <span class="token punctuation">[</span>-s STRSIZE<span class="token punctuation">]</span> <span class="token punctuation">[</span>-X FORMAT<span class="token punctuation">]</span> <span class="token punctuation">[</span>-P <span class="token environment constant">PATH</span><span class="token punctuation">]</span><span class="token punctuation">..</span>.</span>
<span class="line">              <span class="token punctuation">[</span>-p PID<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>--seccomp-bpf<span class="token punctuation">]</span></span>
<span class="line">              <span class="token punctuation">{</span> <span class="token parameter variable">-p</span> PID <span class="token operator">|</span> <span class="token punctuation">[</span>-DDD<span class="token punctuation">]</span> <span class="token punctuation">[</span>-E <span class="token assign-left variable">VAR</span><span class="token operator">=</span>VAL<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>-u USERNAME<span class="token punctuation">]</span> PROG <span class="token punctuation">[</span>ARGS<span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line">   or: <span class="token function">strace</span> -c<span class="token punctuation">[</span>dfwzZ<span class="token punctuation">]</span> <span class="token punctuation">[</span>-I N<span class="token punctuation">]</span> <span class="token punctuation">[</span>-b execve<span class="token punctuation">]</span> <span class="token punctuation">[</span>-e EXPR<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>-O OVERHEAD<span class="token punctuation">]</span></span>
<span class="line">              <span class="token punctuation">[</span>-S SORTBY<span class="token punctuation">]</span> <span class="token punctuation">[</span>-P <span class="token environment constant">PATH</span><span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>-p PID<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>--seccomp-bpf<span class="token punctuation">]</span></span>
<span class="line">              <span class="token punctuation">{</span> <span class="token parameter variable">-p</span> PID <span class="token operator">|</span> <span class="token punctuation">[</span>-DDD<span class="token punctuation">]</span> <span class="token punctuation">[</span>-E <span class="token assign-left variable">VAR</span><span class="token operator">=</span>VAL<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>-u USERNAME<span class="token punctuation">]</span> PROG <span class="token punctuation">[</span>ARGS<span class="token punctuation">]</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">General:</span>
<span class="line">  <span class="token parameter variable">-e</span> EXPR        a qualifying expression: <span class="token assign-left variable">OPTION</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span>all or <span class="token assign-left variable">OPTION</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span>VAL1<span class="token punctuation">[</span>,VAL2<span class="token punctuation">]</span><span class="token punctuation">..</span>.</span>
<span class="line">     options:    trace, abbrev, verbose, raw, signal, read, write, fault,</span>
<span class="line">                 inject, status, kvm</span>
<span class="line"></span>
<span class="line">Startup:</span>
<span class="line">  <span class="token parameter variable">-E</span> <span class="token assign-left variable">VAR</span><span class="token operator">=</span>VAL, <span class="token parameter variable">--env</span><span class="token operator">=</span>VAR<span class="token operator">=</span>VAL</span>
<span class="line">                 put <span class="token assign-left variable">VAR</span><span class="token operator">=</span>VAL <span class="token keyword">in</span> the environment <span class="token keyword">for</span> <span class="token builtin class-name">command</span></span>
<span class="line">  <span class="token parameter variable">-E</span> VAR, <span class="token parameter variable">--env</span><span class="token operator">=</span>VAR</span>
<span class="line">                 remove VAR from the environment <span class="token keyword">for</span> <span class="token builtin class-name">command</span></span>
<span class="line">  <span class="token parameter variable">-p</span> PID, <span class="token parameter variable">--attach</span><span class="token operator">=</span>PID</span>
<span class="line">                 trace process with process <span class="token function">id</span> PID, may be repeated</span>
<span class="line">  <span class="token parameter variable">-u</span> USERNAME, <span class="token parameter variable">--user</span><span class="token operator">=</span>USERNAME</span>
<span class="line">                 run <span class="token builtin class-name">command</span> as USERNAME handling setuid and/or setgid</span>
<span class="line"></span>
<span class="line">Tracing:</span>
<span class="line">  <span class="token parameter variable">-b</span> execve, --detach-on<span class="token operator">=</span>execve</span>
<span class="line">                 detach on execve syscall</span>
<span class="line">  <span class="token parameter variable">-D</span>             run tracer process as a grandchild, not as a parent</span>
<span class="line">  <span class="token parameter variable">-DD</span>            run tracer process <span class="token keyword">in</span> a separate process group</span>
<span class="line">  <span class="token parameter variable">-DDD</span>           run tracer process <span class="token keyword">in</span> a separate session</span>
<span class="line">  <span class="token parameter variable">-f</span>             follow forks</span>
<span class="line">  <span class="token parameter variable">-ff</span>            follow forks with output into separate files</span>
<span class="line">  <span class="token parameter variable">-I</span> INTERRUPTIBLE</span>
<span class="line">     <span class="token number">1</span>:          no signals are blocked</span>
<span class="line">     <span class="token number">2</span>:          fatal signals are blocked <span class="token keyword">while</span> decoding syscall <span class="token punctuation">(</span>default<span class="token punctuation">)</span></span>
<span class="line">     <span class="token number">3</span>:          fatal signals are always blocked <span class="token punctuation">(</span>default <span class="token keyword">if</span> <span class="token string">&#39;-o FILE PROG&#39;</span><span class="token punctuation">)</span></span>
<span class="line">     <span class="token number">4</span>:          fatal signals and SIGTSTP <span class="token punctuation">(</span>^Z<span class="token punctuation">)</span> are always blocked</span>
<span class="line">                 <span class="token punctuation">(</span>useful to <span class="token function">make</span> <span class="token string">&#39;strace -o FILE PROG&#39;</span> not stop on ^Z<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">Filtering:</span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">trace</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token punctuation">[</span>?<span class="token punctuation">]</span>SYSCALL<span class="token punctuation">[</span>@64<span class="token operator">|</span>@32<span class="token operator">|</span>@x32<span class="token punctuation">]</span><span class="token operator">|</span><span class="token punctuation">[</span>?<span class="token punctuation">]</span>/REGEX<span class="token operator">|</span>GROUP<span class="token operator">|</span>all<span class="token operator">|</span>none<span class="token punctuation">}</span>,</span>
<span class="line">  <span class="token parameter variable">--trace</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token punctuation">[</span>?<span class="token punctuation">]</span>SYSCALL<span class="token punctuation">[</span>@64<span class="token operator">|</span>@32<span class="token operator">|</span>@x32<span class="token punctuation">]</span><span class="token operator">|</span><span class="token punctuation">[</span>?<span class="token punctuation">]</span>/REGEX<span class="token operator">|</span>GROUP<span class="token operator">|</span>all<span class="token operator">|</span>none<span class="token punctuation">}</span></span>
<span class="line">                 trace only specified syscalls.</span>
<span class="line">     groups:     %creds, %desc, %file, %fstat, %fstatfs %ipc, %lstat,</span>
<span class="line">                 %memory, %net, %process, %pure, %signal, %stat, %%stat,</span>
<span class="line">                 %statfs, %%statfs</span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">signal</span><span class="token operator">=</span>SET, <span class="token parameter variable">--signal</span><span class="token operator">=</span>SET</span>
<span class="line">                 trace only the specified <span class="token builtin class-name">set</span> of signals</span>
<span class="line">                 print only the signals from SET</span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">status</span><span class="token operator">=</span>SET, <span class="token parameter variable">--status</span><span class="token operator">=</span>SET</span>
<span class="line">                 print only system calls with the <span class="token builtin class-name">return</span> statuses <span class="token keyword">in</span> SET</span>
<span class="line">     statuses:   successful, failed, unfinished, unavailable, detached</span>
<span class="line">  <span class="token parameter variable">-P</span> <span class="token environment constant">PATH</span>, --trace-path<span class="token operator">=</span><span class="token environment constant">PATH</span></span>
<span class="line">                 trace accesses to <span class="token environment constant">PATH</span></span>
<span class="line">  <span class="token parameter variable">-z</span>             print only syscalls that returned without an error code</span>
<span class="line">  <span class="token parameter variable">-Z</span>             print only syscalls that returned with an error code</span>
<span class="line"></span>
<span class="line">Output format:</span>
<span class="line">  <span class="token parameter variable">-a</span> COLUMN, <span class="token parameter variable">--columns</span><span class="token operator">=</span>COLUMN</span>
<span class="line">                 alignment COLUMN <span class="token keyword">for</span> printing syscall results <span class="token punctuation">(</span>default <span class="token number">40</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">abbrev</span><span class="token operator">=</span>SET, <span class="token parameter variable">--abbrev</span><span class="token operator">=</span>SET</span>
<span class="line">                 abbreviate output <span class="token keyword">for</span> the syscalls <span class="token keyword">in</span> SET</span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">verbose</span><span class="token operator">=</span>SET, <span class="token parameter variable">--verbose</span><span class="token operator">=</span>SET</span>
<span class="line">                 dereference structures <span class="token keyword">for</span> the syscall <span class="token keyword">in</span> SET</span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">raw</span><span class="token operator">=</span>SET, <span class="token parameter variable">--raw</span><span class="token operator">=</span>SET</span>
<span class="line">                 print undecoded arguments <span class="token keyword">for</span> the syscalls <span class="token keyword">in</span> SET</span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">read</span><span class="token operator">=</span>SET, <span class="token parameter variable">--read</span><span class="token operator">=</span>SET</span>
<span class="line">                 dump the data <span class="token builtin class-name">read</span> from the <span class="token function">file</span> descriptors <span class="token keyword">in</span> SET</span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">write</span><span class="token operator">=</span>SET, <span class="token parameter variable">--write</span><span class="token operator">=</span>SET</span>
<span class="line">                 dump the data written to the <span class="token function">file</span> descriptors <span class="token keyword">in</span> SET</span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">kvm</span><span class="token operator">=</span>vcpu, <span class="token parameter variable">--kvm</span><span class="token operator">=</span>vcpu</span>
<span class="line">                 print <span class="token builtin class-name">exit</span> reason of kvm vcpu</span>
<span class="line">  -i, --instruction-pointer</span>
<span class="line">                 print instruction pointer at <span class="token function">time</span> of syscall</span>
<span class="line">  -k, --stack-traces</span>
<span class="line">                 obtain stack trace between each syscall</span>
<span class="line">  <span class="token parameter variable">-o</span> FILE, <span class="token parameter variable">--output</span><span class="token operator">=</span>FILE</span>
<span class="line">                 send trace output to FILE instead of stderr</span>
<span class="line">  -A, --output-append-mode</span>
<span class="line">                 <span class="token function">open</span> the <span class="token function">file</span> provided <span class="token keyword">in</span> the <span class="token parameter variable">-o</span> option <span class="token keyword">in</span> append mode</span>
<span class="line">  <span class="token parameter variable">-q</span>             suppress messages about attaching, detaching, etc.</span>
<span class="line">  <span class="token parameter variable">-qq</span>            suppress messages about process <span class="token builtin class-name">exit</span> status as well.</span>
<span class="line">  <span class="token parameter variable">-r</span>             print relative timestamp</span>
<span class="line">  <span class="token parameter variable">-s</span> STRSIZE, --string-limit<span class="token operator">=</span>STRSIZE</span>
<span class="line">                 limit length of print strings to STRSIZE chars <span class="token punctuation">(</span>default <span class="token number">32</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token parameter variable">-t</span>             print absolute timestamp</span>
<span class="line">  <span class="token parameter variable">-tt</span>            print absolute timestamp with usecs</span>
<span class="line">  <span class="token parameter variable">-ttt</span>           print absolute UNIX <span class="token function">time</span> with usecs</span>
<span class="line">  <span class="token parameter variable">-T</span>             print <span class="token function">time</span> spent <span class="token keyword">in</span> each syscall</span>
<span class="line">  -v, --no-abbrev</span>
<span class="line">                 verbose mode: print entities unabbreviated</span>
<span class="line">  <span class="token parameter variable">-x</span>             print non-ascii strings <span class="token keyword">in</span> hex</span>
<span class="line">  <span class="token parameter variable">-xx</span>            print all strings <span class="token keyword">in</span> hex</span>
<span class="line">  <span class="token parameter variable">-X</span> FORMAT      <span class="token builtin class-name">set</span> the FORMAT <span class="token keyword">for</span> printing of named constants and flags</span>
<span class="line">     formats:    raw, abbrev, verbose</span>
<span class="line">  <span class="token parameter variable">-y</span>             print paths associated with <span class="token function">file</span> descriptor arguments</span>
<span class="line">  <span class="token parameter variable">-yy</span>            print protocol specific information associated with socket</span>
<span class="line">                 <span class="token function">file</span> descriptors</span>
<span class="line"></span>
<span class="line">Statistics:</span>
<span class="line">  -c, --summary-only</span>
<span class="line">                 count time, calls, and errors <span class="token keyword">for</span> each syscall and report</span>
<span class="line">                 summary</span>
<span class="line">  -C, <span class="token parameter variable">--summary</span>  like -c, but also print the regular output</span>
<span class="line">  <span class="token parameter variable">-O</span> OVERHEAD    <span class="token builtin class-name">set</span> overhead <span class="token keyword">for</span> tracing syscalls to OVERHEAD usecs</span>
<span class="line">  <span class="token parameter variable">-S</span> SORTBY, --summary-sort-by<span class="token operator">=</span>SORTBY</span>
<span class="line">                 <span class="token function">sort</span> syscall counts by: time, calls, errors, name, nothing</span>
<span class="line">                 <span class="token punctuation">(</span>default <span class="token function">time</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token parameter variable">-w</span>             summarise syscall latency <span class="token punctuation">(</span>default is system <span class="token function">time</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">Tampering:</span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">inject</span><span class="token operator">=</span>SET<span class="token punctuation">[</span>:error<span class="token operator">=</span>ERRNO<span class="token operator">|</span>:retval<span class="token operator">=</span>VALUE<span class="token punctuation">]</span><span class="token punctuation">[</span>:signal<span class="token operator">=</span>SIG<span class="token punctuation">]</span><span class="token punctuation">[</span>:syscall<span class="token operator">=</span>SYSCALL<span class="token punctuation">]</span></span>
<span class="line">            <span class="token punctuation">[</span>:delay_enter<span class="token operator">=</span>DELAY<span class="token punctuation">]</span><span class="token punctuation">[</span>:delay_exit<span class="token operator">=</span>DELAY<span class="token punctuation">]</span><span class="token punctuation">[</span>:when<span class="token operator">=</span>WHEN<span class="token punctuation">]</span>,</span>
<span class="line">  <span class="token parameter variable">--inject</span><span class="token operator">=</span>SET<span class="token punctuation">[</span>:error<span class="token operator">=</span>ERRNO<span class="token operator">|</span>:retval<span class="token operator">=</span>VALUE<span class="token punctuation">]</span><span class="token punctuation">[</span>:signal<span class="token operator">=</span>SIG<span class="token punctuation">]</span><span class="token punctuation">[</span>:syscall<span class="token operator">=</span>SYSCALL<span class="token punctuation">]</span></span>
<span class="line">           <span class="token punctuation">[</span>:delay_enter<span class="token operator">=</span>DELAY<span class="token punctuation">]</span><span class="token punctuation">[</span>:delay_exit<span class="token operator">=</span>DELAY<span class="token punctuation">]</span><span class="token punctuation">[</span>:when<span class="token operator">=</span>WHEN<span class="token punctuation">]</span></span>
<span class="line">                 perform syscall tampering <span class="token keyword">for</span> the syscalls <span class="token keyword">in</span> SET</span>
<span class="line">     delay:      milliseconds or NUMBER<span class="token punctuation">{</span>s<span class="token operator">|</span>ms<span class="token operator">|</span>us<span class="token operator">|</span>ns<span class="token punctuation">}</span></span>
<span class="line">     when:       FIRST, FIRST+, or FIRST+STEP</span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">fault</span><span class="token operator">=</span>SET<span class="token punctuation">[</span>:error<span class="token operator">=</span>ERRNO<span class="token punctuation">]</span><span class="token punctuation">[</span>:when<span class="token operator">=</span>WHEN<span class="token punctuation">]</span>, <span class="token parameter variable">--fault</span><span class="token operator">=</span>SET<span class="token punctuation">[</span>:error<span class="token operator">=</span>ERRNO<span class="token punctuation">]</span><span class="token punctuation">[</span>:when<span class="token operator">=</span>WHEN<span class="token punctuation">]</span></span>
<span class="line">                 synonym <span class="token keyword">for</span> <span class="token parameter variable">-e</span> inject with default ERRNO <span class="token builtin class-name">set</span> to ENOSYS.</span>
<span class="line">Miscellaneous:</span>
<span class="line">  -d, <span class="token parameter variable">--debug</span>    <span class="token builtin class-name">enable</span> debug output to stderr</span>
<span class="line">  -h, <span class="token parameter variable">--help</span>     print <span class="token builtin class-name">help</span> message</span>
<span class="line">  --seccomp-bpf  <span class="token builtin class-name">enable</span> seccomp-bpf filtering</span>
<span class="line">  -V, <span class="token parameter variable">--version</span>  print version</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ ltrace <span class="token parameter variable">--help</span></span>
<span class="line">Usage: ltrace <span class="token punctuation">[</span>option <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token punctuation">[</span>command <span class="token punctuation">[</span>arg <span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line">Trace library calls of a given program.</span>
<span class="line"></span>
<span class="line">  -a, <span class="token parameter variable">--align</span><span class="token operator">=</span>COLUMN  align <span class="token builtin class-name">return</span> values <span class="token keyword">in</span> a secific column.</span>
<span class="line">  <span class="token parameter variable">-A</span> MAXELTS          maximum number of array elements to print.</span>
<span class="line">  -b, --no-signals    don&#39;t print signals.</span>
<span class="line">  <span class="token parameter variable">-c</span>                  count <span class="token function">time</span> and calls, and report a summary on exit.</span>
<span class="line">  -C, <span class="token parameter variable">--demangle</span>      decode low-level symbol names into user-level names.</span>
<span class="line">  -D, <span class="token parameter variable">--debug</span><span class="token operator">=</span>MASK    <span class="token builtin class-name">enable</span> debugging <span class="token punctuation">(</span>see <span class="token parameter variable">-Dh</span> or <span class="token parameter variable">--debug</span><span class="token operator">=</span>help<span class="token punctuation">)</span>.</span>
<span class="line">  -Dh, <span class="token parameter variable">--debug</span><span class="token operator">=</span>help   show <span class="token builtin class-name">help</span> on debugging.</span>
<span class="line">  <span class="token parameter variable">-e</span> FILTER           modify <span class="token function">which</span> library calls to trace.</span>
<span class="line">  <span class="token parameter variable">-f</span>                  trace children <span class="token punctuation">(</span>fork<span class="token punctuation">(</span><span class="token punctuation">)</span> and clone<span class="token punctuation">(</span><span class="token punctuation">))</span>.</span>
<span class="line">  -F, <span class="token parameter variable">--config</span><span class="token operator">=</span>FILE   load alternate configuration <span class="token function">file</span> <span class="token punctuation">(</span>may be repeated<span class="token punctuation">)</span>.</span>
<span class="line">  -h, <span class="token parameter variable">--help</span>          display this <span class="token builtin class-name">help</span> and exit.</span>
<span class="line">  <span class="token parameter variable">-i</span>                  print instruction pointer at <span class="token function">time</span> of library call.</span>
<span class="line">  -l, <span class="token parameter variable">--library</span><span class="token operator">=</span>LIBRARY_PATTERN only trace symbols implemented by this library.</span>
<span class="line">  <span class="token parameter variable">-L</span>                  <span class="token keyword">do</span> NOT display library calls.</span>
<span class="line">  -n, <span class="token parameter variable">--indent</span><span class="token operator">=</span>NR     indent output by NR spaces <span class="token keyword">for</span> each call level nesting.</span>
<span class="line">  -o, <span class="token parameter variable">--output</span><span class="token operator">=</span>FILENAME <span class="token function">write</span> the trace output to <span class="token function">file</span> with given name.</span>
<span class="line">  <span class="token parameter variable">-p</span> PID              attach to the process with the process ID pid.</span>
<span class="line">  <span class="token parameter variable">-r</span>                  print relative timestamps.</span>
<span class="line">  <span class="token parameter variable">-s</span> STRSIZE          specify the maximum string size to print.</span>
<span class="line">  <span class="token parameter variable">-S</span>                  trace system calls as well as library calls.</span>
<span class="line">  -t, -tt, <span class="token parameter variable">-ttt</span>       print absolute timestamps.</span>
<span class="line">  <span class="token parameter variable">-T</span>                  show the <span class="token function">time</span> spent inside each call.</span>
<span class="line">  <span class="token parameter variable">-u</span> USERNAME         run <span class="token builtin class-name">command</span> with the userid, groupid of username.</span>
<span class="line">  -V, <span class="token parameter variable">--version</span>       output version information and exit.</span>
<span class="line">  <span class="token parameter variable">-x</span> FILTER           modify <span class="token function">which</span> static functions to trace.</span>
<span class="line"></span>
<span class="line">Report bugs to ltrace-devel@lists.alioth.debian.org</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="strace" tabindex="-1"><a class="header-anchor" href="#strace"><span>Strace</span></a></h2><p>尝试读懂 <code>strace</code> 的输出：</p><ul><li>从 <code>execve</code> 开始，执行程序</li><li>查找 <code>ld.so.cache</code>，用于查询机器上所有动态库的存放位置</li><li>依次打开程序依赖的每一个动态链接库，并调用 <code>read</code> 装载它们（可以看到 ELF 格式的头部被装载）</li><li>最后是程序主函数内的系统调用 <ul><li>调用 <code>open</code> 打开目录</li><li>调用 <code>write</code> 打印输出</li></ul></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">strace</span> <span class="token function">ls</span></span>
<span class="line">execve<span class="token punctuation">(</span><span class="token string">&quot;/usr/bin/ls&quot;</span>, <span class="token punctuation">[</span><span class="token string">&quot;ls&quot;</span><span class="token punctuation">]</span>, 0x7ffdad55a440 /* <span class="token number">27</span> vars */<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">brk<span class="token punctuation">(</span>NULL<span class="token punctuation">)</span>                               <span class="token operator">=</span> 0x5653fca64000</span>
<span class="line">arch_prctl<span class="token punctuation">(</span>0x3001 /* ARCH_??? */, 0x7ffeab671c90<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> EINVAL <span class="token punctuation">(</span>Invalid argument<span class="token punctuation">)</span></span>
<span class="line">access<span class="token punctuation">(</span><span class="token string">&quot;/etc/ld.so.preload&quot;</span>, R_OK<span class="token punctuation">)</span>      <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span></span>
<span class="line">openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/etc/ld.so.cache&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">fstat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">33738</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mmap<span class="token punctuation">(</span>NULL, <span class="token number">33738</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeadc47000</span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/lib/x86_64-linux-gnu/libselinux.so.1&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span>&gt;<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@p<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">832</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">832</span></span>
<span class="line">fstat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">163200</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mmap<span class="token punctuation">(</span>NULL, <span class="token number">8192</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_ANONYMOUS, -1, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeadc45000</span>
<span class="line">mmap<span class="token punctuation">(</span>NULL, <span class="token number">174600</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeadc1a000</span>
<span class="line">mprotect<span class="token punctuation">(</span>0x7faeadc20000, <span class="token number">135168</span>, PROT_NONE<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faeadc20000, <span class="token number">102400</span>, PROT_READ<span class="token operator">|</span>PROT_EXEC, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x6000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeadc20000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faeadc39000, <span class="token number">28672</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x1f000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeadc39000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faeadc41000, <span class="token number">8192</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x26000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeadc41000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faeadc43000, <span class="token number">6664</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_ANONYMOUS, -1, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeadc43000</span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span>&gt;<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\300">\\300</span>A<span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">832</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">832</span></span>
<span class="line">pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\6">\\6</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">784</span>, <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">784</span></span>
<span class="line">pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\20">\\20</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\5">\\5</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>GNU<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\300">\\300</span><span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span>, <span class="token number">32</span>, <span class="token number">848</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">32</span></span>
<span class="line">pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\24">\\24</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>GNU<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\30">\\30</span>x<span class="token entity" title="\\346">\\346</span><span class="token entity" title="\\264">\\264</span>ur<span class="token entity" title="\\f">\\f</span>|Q<span class="token entity" title="\\226">\\226</span><span class="token entity" title="\\236">\\236</span>i<span class="token entity" title="\\253">\\253</span>-&#39;o&quot;</span><span class="token punctuation">..</span>., <span class="token number">68</span>, <span class="token number">880</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">68</span></span>
<span class="line">fstat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0755, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">2029592</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\6">\\6</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">784</span>, <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">784</span></span>
<span class="line">pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\20">\\20</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\5">\\5</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>GNU<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\300">\\300</span><span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span>, <span class="token number">32</span>, <span class="token number">848</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">32</span></span>
<span class="line">pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\24">\\24</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>GNU<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\30">\\30</span>x<span class="token entity" title="\\346">\\346</span><span class="token entity" title="\\264">\\264</span>ur<span class="token entity" title="\\f">\\f</span>|Q<span class="token entity" title="\\226">\\226</span><span class="token entity" title="\\236">\\236</span>i<span class="token entity" title="\\253">\\253</span>-&#39;o&quot;</span><span class="token punctuation">..</span>., <span class="token number">68</span>, <span class="token number">880</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">68</span></span>
<span class="line">mmap<span class="token punctuation">(</span>NULL, <span class="token number">2037344</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeada28000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faeada4a000, <span class="token number">1540096</span>, PROT_READ<span class="token operator">|</span>PROT_EXEC, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x22000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeada4a000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faeadbc2000, <span class="token number">319488</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x19a000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeadbc2000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faeadc10000, <span class="token number">24576</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x1e7000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeadc10000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faeadc16000, <span class="token number">13920</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_ANONYMOUS, -1, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeadc16000</span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/lib/x86_64-linux-gnu/libpcre2-8.so.0&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span>&gt;<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\340">\\340</span><span class="token entity" title="\\&quot;">\\&quot;</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">832</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">832</span></span>
<span class="line">fstat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">584392</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mmap<span class="token punctuation">(</span>NULL, <span class="token number">586536</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead998000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faead99a000, <span class="token number">409600</span>, PROT_READ<span class="token operator">|</span>PROT_EXEC, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x2000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead99a000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faead9fe000, <span class="token number">163840</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x66000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead9fe000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faeada26000, <span class="token number">8192</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x8d000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faeada26000</span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/lib/x86_64-linux-gnu/libdl.so.2&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span>&gt;<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span> <span class="token entity" title="\\22">\\22</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">832</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">832</span></span>
<span class="line">fstat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">18848</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mmap<span class="token punctuation">(</span>NULL, <span class="token number">20752</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead992000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faead993000, <span class="token number">8192</span>, PROT_READ<span class="token operator">|</span>PROT_EXEC, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x1000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead993000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faead995000, <span class="token number">4096</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x3000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead995000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faead996000, <span class="token number">8192</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x3000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead996000</span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/lib/x86_64-linux-gnu/libpthread.so.0&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span>&gt;<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\220">\\220</span>q<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">832</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">832</span></span>
<span class="line">pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\24">\\24</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>GNU<span class="token entity" title="\\0">\\0</span>{E6<span class="token entity" title="\\364">\\364</span><span class="token entity" title="\\34">\\34</span><span class="token entity" title="\\332">\\332</span><span class="token entity" title="\\245">\\245</span><span class="token entity" title="\\210">\\210</span><span class="token entity" title="\\204">\\204</span><span class="token entity" title="\\10">\\10</span><span class="token entity" title="\\350">\\350</span>-<span class="token entity" title="\\010">\\010</span>6<span class="token entity" title="\\343">\\343</span>=&quot;</span><span class="token punctuation">..</span>., <span class="token number">68</span>, <span class="token number">824</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">68</span></span>
<span class="line">fstat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0755, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">157224</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\24">\\24</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>GNU<span class="token entity" title="\\0">\\0</span>{E6<span class="token entity" title="\\364">\\364</span><span class="token entity" title="\\34">\\34</span><span class="token entity" title="\\332">\\332</span><span class="token entity" title="\\245">\\245</span><span class="token entity" title="\\210">\\210</span><span class="token entity" title="\\204">\\204</span><span class="token entity" title="\\10">\\10</span><span class="token entity" title="\\350">\\350</span>-<span class="token entity" title="\\010">\\010</span>6<span class="token entity" title="\\343">\\343</span>=&quot;</span><span class="token punctuation">..</span>., <span class="token number">68</span>, <span class="token number">824</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">68</span></span>
<span class="line">mmap<span class="token punctuation">(</span>NULL, <span class="token number">140408</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead96f000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faead975000, <span class="token number">69632</span>, PROT_READ<span class="token operator">|</span>PROT_EXEC, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x6000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead975000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faead986000, <span class="token number">24576</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x17000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead986000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faead98c000, <span class="token number">8192</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x1c000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead98c000</span>
<span class="line">mmap<span class="token punctuation">(</span>0x7faead98e000, <span class="token number">13432</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_ANONYMOUS, -1, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead98e000</span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mmap<span class="token punctuation">(</span>NULL, <span class="token number">8192</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_ANONYMOUS, -1, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead96d000</span>
<span class="line">arch_prctl<span class="token punctuation">(</span>ARCH_SET_FS, 0x7faead96e400<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mprotect<span class="token punctuation">(</span>0x7faeadc10000, <span class="token number">16384</span>, PROT_READ<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mprotect<span class="token punctuation">(</span>0x7faead98c000, <span class="token number">4096</span>, PROT_READ<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mprotect<span class="token punctuation">(</span>0x7faead996000, <span class="token number">4096</span>, PROT_READ<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mprotect<span class="token punctuation">(</span>0x7faeada26000, <span class="token number">4096</span>, PROT_READ<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mprotect<span class="token punctuation">(</span>0x7faeadc41000, <span class="token number">4096</span>, PROT_READ<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mprotect<span class="token punctuation">(</span>0x5653facf8000, <span class="token number">4096</span>, PROT_READ<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mprotect<span class="token punctuation">(</span>0x7faeadc7d000, <span class="token number">4096</span>, PROT_READ<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">munmap<span class="token punctuation">(</span>0x7faeadc47000, <span class="token number">33738</span><span class="token punctuation">)</span>           <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">set_tid_address<span class="token punctuation">(</span>0x7faead96e6d0<span class="token punctuation">)</span>         <span class="token operator">=</span> <span class="token number">2311490</span></span>
<span class="line">set_robust_list<span class="token punctuation">(</span>0x7faead96e6e0, <span class="token number">24</span><span class="token punctuation">)</span>     <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">rt_sigaction<span class="token punctuation">(</span>SIGRTMIN, <span class="token punctuation">{</span>sa_handler<span class="token operator">=</span>0x7faead975bf0, <span class="token assign-left variable">sa_mask</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>, <span class="token assign-left variable">sa_flags</span><span class="token operator">=</span>SA_RESTORER<span class="token operator">|</span>SA_SIGINFO, <span class="token assign-left variable">sa_restorer</span><span class="token operator">=</span>0x7faead983420<span class="token punctuation">}</span>, NULL, <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">rt_sigaction<span class="token punctuation">(</span>SIGRT_1, <span class="token punctuation">{</span>sa_handler<span class="token operator">=</span>0x7faead975c90, <span class="token assign-left variable">sa_mask</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>, <span class="token assign-left variable">sa_flags</span><span class="token operator">=</span>SA_RESTORER<span class="token operator">|</span>SA_RESTART<span class="token operator">|</span>SA_SIGINFO, <span class="token assign-left variable">sa_restorer</span><span class="token operator">=</span>0x7faead983420<span class="token punctuation">}</span>, NULL, <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">rt_sigprocmask<span class="token punctuation">(</span>SIG_UNBLOCK, <span class="token punctuation">[</span>RTMIN RT_1<span class="token punctuation">]</span>, NULL, <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">prlimit64<span class="token punctuation">(</span><span class="token number">0</span>, RLIMIT_STACK, NULL, <span class="token punctuation">{</span>rlim_cur<span class="token operator">=</span><span class="token number">8192</span>*1024, <span class="token assign-left variable">rlim_max</span><span class="token operator">=</span>RLIM64_INFINITY<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">statfs<span class="token punctuation">(</span><span class="token string">&quot;/sys/fs/selinux&quot;</span>, 0x7ffeab671be0<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span></span>
<span class="line">statfs<span class="token punctuation">(</span><span class="token string">&quot;/selinux&quot;</span>, 0x7ffeab671be0<span class="token punctuation">)</span>      <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span></span>
<span class="line">brk<span class="token punctuation">(</span>NULL<span class="token punctuation">)</span>                               <span class="token operator">=</span> 0x5653fca64000</span>
<span class="line">brk<span class="token punctuation">(</span>0x5653fca85000<span class="token punctuation">)</span>                     <span class="token operator">=</span> 0x5653fca85000</span>
<span class="line">openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/proc/filesystems&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">fstat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0444, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;nodev<span class="token entity" title="\\t">\\t</span>sysfs<span class="token entity" title="\\n">\\n</span>nodev<span class="token entity" title="\\t">\\t</span>tmpfs<span class="token entity" title="\\n">\\n</span>nodev<span class="token entity" title="\\t">\\t</span>bd&quot;</span><span class="token punctuation">..</span>., <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">411</span></span>
<span class="line">read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token number">1024</span><span class="token punctuation">)</span>                       <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">access<span class="token punctuation">(</span><span class="token string">&quot;/etc/selinux/config&quot;</span>, F_OK<span class="token punctuation">)</span>     <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span></span>
<span class="line">openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/locale-archive&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">fstat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">3035952</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">mmap<span class="token punctuation">(</span>NULL, <span class="token number">3035952</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7faead687000</span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">ioctl<span class="token punctuation">(</span><span class="token number">1</span>, TCGETS, <span class="token punctuation">{</span>B38400 opost isig icanon <span class="token builtin class-name">echo</span> <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">ioctl<span class="token punctuation">(</span><span class="token number">1</span>, TIOCGWINSZ, <span class="token punctuation">{</span>ws_row<span class="token operator">=</span><span class="token number">30</span>, <span class="token assign-left variable">ws_col</span><span class="token operator">=</span><span class="token number">120</span>, <span class="token assign-left variable">ws_xpixel</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">ws_ypixel</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;.&quot;</span>, O_RDONLY<span class="token operator">|</span>O_NONBLOCK<span class="token operator">|</span>O_CLOEXEC<span class="token operator">|</span>O_DIRECTORY<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">fstat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFDIR<span class="token operator">|</span>0700, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">4096</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">getdents64<span class="token punctuation">(</span><span class="token number">3</span>, /* <span class="token number">25</span> entries */, <span class="token number">32768</span><span class="token punctuation">)</span>  <span class="token operator">=</span> <span class="token number">784</span></span>
<span class="line">getdents64<span class="token punctuation">(</span><span class="token number">3</span>, /* <span class="token number">0</span> entries */, <span class="token number">32768</span><span class="token punctuation">)</span>   <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">fstat<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFCHR<span class="token operator">|</span>0620, <span class="token assign-left variable">st_rdev</span><span class="token operator">=</span>makedev<span class="token punctuation">(</span>0x88, <span class="token number">0</span><span class="token punctuation">)</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">write<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token string">&quot;blog  mrdrivingduck.github.io  s&quot;</span><span class="token punctuation">..</span>., 42blog  mrdrivingduck.github.io  snap  temp</span>
<span class="line"><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">42</span></span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">exit_group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                           <span class="token operator">=</span> ?</span>
<span class="line">+++ exited with <span class="token number">0</span> +++</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 pid attach 到一个已有的进程上，追踪其系统调用：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">strace</span> <span class="token parameter variable">-p</span> <span class="token number">3900870</span>       </span>
<span class="line">strace: Process <span class="token number">3900870</span> attached</span>
<span class="line">select<span class="token punctuation">(</span><span class="token number">13</span>, <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span><span class="token punctuation">]</span>, NULL, NULL, <span class="token punctuation">{</span>tv_sec<span class="token operator">=</span><span class="token number">6</span>, <span class="token assign-left variable">tv_usec</span><span class="token operator">=</span><span class="token number">425024</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">(</span>Timeout<span class="token punctuation">)</span></span>
<span class="line">rt_sigprocmask<span class="token punctuation">(</span>SIG_SETMASK, ~<span class="token punctuation">[</span>ILL TRAP ABRT BUS FPE SEGV CONT SYS RTMIN RT_1<span class="token punctuation">]</span>, NULL, <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">open<span class="token punctuation">(</span><span class="token string">&quot;postmaster.pid&quot;</span>, O_RDWR<span class="token punctuation">)</span>          <span class="token operator">=</span> <span class="token number">14</span></span>
<span class="line">read<span class="token punctuation">(</span><span class="token number">14</span>, <span class="token string">&quot;59286<span class="token entity" title="\\n">\\n</span>/home/postgres/tmp_polardb&quot;</span><span class="token punctuation">..</span>., <span class="token number">8191</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">100</span></span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>                               <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">rt_sigprocmask<span class="token punctuation">(</span>SIG_SETMASK, <span class="token punctuation">[</span><span class="token punctuation">]</span>, NULL, <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">select<span class="token punctuation">(</span><span class="token number">13</span>, <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span><span class="token punctuation">]</span>, NULL, NULL, <span class="token punctuation">{</span>tv_sec<span class="token operator">=</span><span class="token number">60</span>, <span class="token assign-left variable">tv_usec</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> ? ERESTARTNOHAND <span class="token punctuation">(</span>To be restarted <span class="token keyword">if</span> no handler<span class="token punctuation">)</span></span>
<span class="line">--- SIGUSR1 <span class="token punctuation">{</span>si_signo<span class="token operator">=</span>SIGUSR1, <span class="token assign-left variable">si_code</span><span class="token operator">=</span>SI_USER, <span class="token assign-left variable">si_pid</span><span class="token operator">=</span><span class="token number">59305</span>, <span class="token assign-left variable">si_uid</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">}</span> ---</span>
<span class="line">open<span class="token punctuation">(</span><span class="token string">&quot;/dev/urandom&quot;</span>, O_RDONLY<span class="token punctuation">)</span>          <span class="token operator">=</span> <span class="token number">14</span></span>
<span class="line">read<span class="token punctuation">(</span><span class="token number">14</span>, <span class="token string">&quot;<span class="token entity" title="\\254">\\254</span><span class="token entity" title="\\247">\\247</span><span class="token entity" title="\\10">\\10</span><span class="token entity" title="\\f">\\f</span>&quot;</span>, <span class="token number">4</span><span class="token punctuation">)</span>            <span class="token operator">=</span> <span class="token number">4</span></span>
<span class="line">close<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>                               <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">clone<span class="token punctuation">(</span>child_stack<span class="token operator">=</span>NULL, <span class="token assign-left variable">flags</span><span class="token operator">=</span>CLONE_CHILD_CLEARTID<span class="token operator">|</span>CLONE_CHILD_SETTID<span class="token operator">|</span>SIGCHLD, <span class="token assign-left variable">child_tidptr</span><span class="token operator">=</span>0x7f843dca1a50<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1946938</span></span>
<span class="line">rt_sigreturn<span class="token punctuation">(</span><span class="token punctuation">{</span>mask<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                 <span class="token operator">=</span> <span class="token parameter variable">-1</span> EINTR <span class="token punctuation">(</span>Interrupted system call<span class="token punctuation">)</span></span>
<span class="line">rt_sigprocmask<span class="token punctuation">(</span>SIG_SETMASK, ~<span class="token punctuation">[</span>ILL TRAP ABRT BUS FPE SEGV CONT SYS RTMIN RT_1<span class="token punctuation">]</span>, NULL, <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">rt_sigprocmask<span class="token punctuation">(</span>SIG_SETMASK, <span class="token punctuation">[</span><span class="token punctuation">]</span>, NULL, <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">select<span class="token punctuation">(</span><span class="token number">13</span>, <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span><span class="token punctuation">]</span>, NULL, NULL, <span class="token punctuation">{</span>tv_sec<span class="token operator">=</span><span class="token number">60</span>, <span class="token assign-left variable">tv_usec</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> ? ERESTARTNOHAND <span class="token punctuation">(</span>To be restarted <span class="token keyword">if</span> no handler<span class="token punctuation">)</span></span>
<span class="line">--- SIGCHLD <span class="token punctuation">{</span>si_signo<span class="token operator">=</span>SIGCHLD, <span class="token assign-left variable">si_code</span><span class="token operator">=</span>CLD_EXITED, <span class="token assign-left variable">si_pid</span><span class="token operator">=</span><span class="token number">1946938</span>, <span class="token assign-left variable">si_uid</span><span class="token operator">=</span><span class="token number">1000</span>, <span class="token assign-left variable">si_status</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">si_utime</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">si_stime</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">}</span> ---</span>
<span class="line">wait4<span class="token punctuation">(</span>-1, <span class="token punctuation">[</span><span class="token punctuation">{</span>WIFEXITED<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> WEXITSTATUS<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">]</span>, WNOHANG, NULL<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1946938</span></span>
<span class="line">wait4<span class="token punctuation">(</span>-1, 0x7ffedb48e798, WNOHANG, NULL<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">rt_sigreturn<span class="token punctuation">(</span><span class="token punctuation">{</span>mask<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                 <span class="token operator">=</span> <span class="token parameter variable">-1</span> EINTR <span class="token punctuation">(</span>Interrupted system call<span class="token punctuation">)</span></span>
<span class="line">rt_sigprocmask<span class="token punctuation">(</span>SIG_SETMASK, ~<span class="token punctuation">[</span>ILL TRAP ABRT BUS FPE SEGV CONT SYS RTMIN RT_1<span class="token punctuation">]</span>, NULL, <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">rt_sigprocmask<span class="token punctuation">(</span>SIG_SETMASK, <span class="token punctuation">[</span><span class="token punctuation">]</span>, NULL, <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ltrace" tabindex="-1"><a class="header-anchor" href="#ltrace"><span>Ltrace</span></a></h2><p>对系统自带的可执行文件使用 <code>ltrace</code> 时，却没有任何输出：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ ltrace <span class="token function">ls</span></span>
<span class="line">blog  mrdrivingduck.github.io  snap  temp</span>
<span class="line">+++ exited <span class="token punctuation">(</span>status <span class="token number">0</span><span class="token punctuation">)</span> +++</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>带上 <code>-S</code> 参数，也可以顺带打印系统调用。输出中只有系统调用，还是没有库函数调用：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ ltrace <span class="token parameter variable">-S</span> <span class="token function">ls</span></span>
<span class="line">SYS_brk<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                                                                <span class="token operator">=</span> 0x559c89633000</span>
<span class="line">SYS_arch_prctl<span class="token punctuation">(</span>0x3001, 0x7fffb6b633e0, 0x7f78077c22d0, 0x7f78077ca8b8<span class="token punctuation">)</span>    <span class="token operator">=</span> <span class="token parameter variable">-22</span></span>
<span class="line">SYS_access<span class="token punctuation">(</span><span class="token string">&quot;/etc/ld.so.preload&quot;</span>, 04<span class="token punctuation">)</span>                                      <span class="token operator">=</span> <span class="token parameter variable">-2</span></span>
<span class="line">SYS_openat<span class="token punctuation">(</span>0xffffff9c, 0x7f78077cbb80, 0x80000, <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">SYS_fstat<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b625e0<span class="token punctuation">)</span>                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mmap<span class="token punctuation">(</span><span class="token number">0</span>, 0x83ca, <span class="token number">1</span>, <span class="token number">2</span><span class="token punctuation">)</span>                                                 <span class="token operator">=</span> 0x7f780779d000</span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_openat<span class="token punctuation">(</span>0xffffff9c, 0x7f78077d5e10, 0x80000, <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">SYS_read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\002">\\002</span><span class="token entity" title="\\001">\\001</span><span class="token entity" title="\\001">\\001</span>&quot;</span>, <span class="token number">832</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> <span class="token number">832</span></span>
<span class="line">SYS_fstat<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b62630<span class="token punctuation">)</span>                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mmap<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">8192</span>, <span class="token number">3</span>, <span class="token number">34</span><span class="token punctuation">)</span>                                                  <span class="token operator">=</span> 0x7f780779b000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span><span class="token number">0</span>, 0x2aa08, <span class="token number">1</span>, <span class="token number">2050</span><span class="token punctuation">)</span>                                             <span class="token operator">=</span> 0x7f7807770000</span>
<span class="line">SYS_mprotect<span class="token punctuation">(</span>0x7f7807776000, <span class="token number">135168</span>, <span class="token number">0</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f7807776000, 0x19000, <span class="token number">5</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> 0x7f7807776000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f780778f000, 0x7000, <span class="token number">1</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                 <span class="token operator">=</span> 0x7f780778f000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f7807797000, <span class="token number">8192</span>, <span class="token number">3</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> 0x7f7807797000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f7807799000, <span class="token number">6664</span>, <span class="token number">3</span>, <span class="token number">50</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> 0x7f7807799000</span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_openat<span class="token punctuation">(</span>0xffffff9c, 0x7f780779b4e0, 0x80000, <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">SYS_read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\002">\\002</span><span class="token entity" title="\\001">\\001</span><span class="token entity" title="\\001">\\001</span><span class="token entity" title="\\003">\\003</span>&quot;</span>, <span class="token number">832</span><span class="token punctuation">)</span>                               <span class="token operator">=</span> <span class="token number">832</span></span>
<span class="line">SYS_pread<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b62380, <span class="token number">784</span>, <span class="token number">64</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">784</span></span>
<span class="line">SYS_pread<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b62350, <span class="token number">32</span>, <span class="token number">848</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">32</span></span>
<span class="line">SYS_pread<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b62300, <span class="token number">68</span>, <span class="token number">880</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">68</span></span>
<span class="line">SYS_fstat<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b62610<span class="token punctuation">)</span>                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_pread<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b62260, <span class="token number">784</span>, <span class="token number">64</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">784</span></span>
<span class="line">SYS_pread<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b61f40, <span class="token number">32</span>, <span class="token number">848</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">32</span></span>
<span class="line">SYS_pread<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b61f20, <span class="token number">68</span>, <span class="token number">880</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">68</span></span>
<span class="line">SYS_mmap<span class="token punctuation">(</span><span class="token number">0</span>, 0x1f1660, <span class="token number">1</span>, <span class="token number">2050</span><span class="token punctuation">)</span>                                            <span class="token operator">=</span> 0x7f780757e000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f78075a0000, 0x178000, <span class="token number">5</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                               <span class="token operator">=</span> 0x7f78075a0000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f7807718000, 0x4e000, <span class="token number">1</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> 0x7f7807718000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f7807766000, 0x6000, <span class="token number">3</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                 <span class="token operator">=</span> 0x7f7807766000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f780776c000, 0x3660, <span class="token number">3</span>, <span class="token number">50</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> 0x7f780776c000</span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_openat<span class="token punctuation">(</span>0xffffff9c, 0x7f780779b9d0, 0x80000, <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">SYS_read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\002">\\002</span><span class="token entity" title="\\001">\\001</span><span class="token entity" title="\\001">\\001</span>&quot;</span>, <span class="token number">832</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> <span class="token number">832</span></span>
<span class="line">SYS_fstat<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b625f0<span class="token punctuation">)</span>                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mmap<span class="token punctuation">(</span><span class="token number">0</span>, 0x8f328, <span class="token number">1</span>, <span class="token number">2050</span><span class="token punctuation">)</span>                                             <span class="token operator">=</span> 0x7f78074ee000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f78074f0000, 0x64000, <span class="token number">5</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> 0x7f78074f0000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f7807554000, 0x28000, <span class="token number">1</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> 0x7f7807554000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f780757c000, <span class="token number">8192</span>, <span class="token number">3</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> 0x7f780757c000</span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_openat<span class="token punctuation">(</span>0xffffff9c, 0x7f780779bee0, 0x80000, <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">SYS_read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\002">\\002</span><span class="token entity" title="\\001">\\001</span><span class="token entity" title="\\001">\\001</span>&quot;</span>, <span class="token number">832</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> <span class="token number">832</span></span>
<span class="line">SYS_fstat<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b625d0<span class="token punctuation">)</span>                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mmap<span class="token punctuation">(</span><span class="token number">0</span>, 0x5110, <span class="token number">1</span>, <span class="token number">2050</span><span class="token punctuation">)</span>                                              <span class="token operator">=</span> 0x7f78074e8000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f78074e9000, <span class="token number">8192</span>, <span class="token number">5</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> 0x7f78074e9000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f78074eb000, <span class="token number">4096</span>, <span class="token number">1</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> 0x7f78074eb000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f78074ec000, <span class="token number">8192</span>, <span class="token number">3</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> 0x7f78074ec000</span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_openat<span class="token punctuation">(</span>0xffffff9c, 0x7f780779c480, 0x80000, <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">SYS_read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\002">\\002</span><span class="token entity" title="\\001">\\001</span><span class="token entity" title="\\001">\\001</span>&quot;</span>, <span class="token number">832</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> <span class="token number">832</span></span>
<span class="line">SYS_pread<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b625d0, <span class="token number">68</span>, <span class="token number">824</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">68</span></span>
<span class="line">SYS_fstat<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b62590<span class="token punctuation">)</span>                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_pread<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b621f0, <span class="token number">68</span>, <span class="token number">824</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">68</span></span>
<span class="line">SYS_mmap<span class="token punctuation">(</span><span class="token number">0</span>, 0x22478, <span class="token number">1</span>, <span class="token number">2050</span><span class="token punctuation">)</span>                                             <span class="token operator">=</span> 0x7f78074c5000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f78074cb000, 0x11000, <span class="token number">5</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> 0x7f78074cb000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f78074dc000, 0x6000, <span class="token number">1</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                 <span class="token operator">=</span> 0x7f78074dc000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f78074e2000, <span class="token number">8192</span>, <span class="token number">3</span>, <span class="token number">2066</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> 0x7f78074e2000</span>
<span class="line">SYS_mmap<span class="token punctuation">(</span>0x7f78074e4000, 0x3478, <span class="token number">3</span>, <span class="token number">50</span><span class="token punctuation">)</span>                                   <span class="token operator">=</span> 0x7f78074e4000</span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mmap<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">8192</span>, <span class="token number">3</span>, <span class="token number">34</span><span class="token punctuation">)</span>                                                  <span class="token operator">=</span> 0x7f78074c3000</span>
<span class="line">SYS_arch_prctl<span class="token punctuation">(</span><span class="token number">4098</span>, 0x7f78074c4400, 0xffff8087f8b3b2d0, <span class="token number">64</span><span class="token punctuation">)</span>              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mprotect<span class="token punctuation">(</span>0x7f7807766000, <span class="token number">16384</span>, <span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mprotect<span class="token punctuation">(</span>0x7f78074e2000, <span class="token number">4096</span>, <span class="token number">1</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mprotect<span class="token punctuation">(</span>0x7f78074ec000, <span class="token number">4096</span>, <span class="token number">1</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mprotect<span class="token punctuation">(</span>0x7f780757c000, <span class="token number">4096</span>, <span class="token number">1</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mprotect<span class="token punctuation">(</span>0x7f7807797000, <span class="token number">4096</span>, <span class="token number">1</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mprotect<span class="token punctuation">(</span>0x559c88f1f000, <span class="token number">4096</span>, <span class="token number">1</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mprotect<span class="token punctuation">(</span>0x7f78077d3000, <span class="token number">4096</span>, <span class="token number">1</span><span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_munmap<span class="token punctuation">(</span>0x7f780779d000, <span class="token number">33738</span><span class="token punctuation">)</span>                                         <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_set_tid_address<span class="token punctuation">(</span>0x7f78074c46d0, 0x7fffb6b634b8, 0x7f78074c4400, 0x7f78077d3f68<span class="token punctuation">)</span> <span class="token operator">=</span> 0x234b10</span>
<span class="line">SYS_set_robust_list<span class="token punctuation">(</span>0x7f78074c46e0, <span class="token number">24</span>, 0x7f78074c4400, 0x7f78077d3f68<span class="token punctuation">)</span>   <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_rt_sigaction<span class="token punctuation">(</span><span class="token number">32</span>, 0x7fffb6b63200, <span class="token number">0</span>, <span class="token number">8</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_rt_sigaction<span class="token punctuation">(</span><span class="token number">33</span>, 0x7fffb6b63200, <span class="token number">0</span>, <span class="token number">8</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_rt_sigprocmask<span class="token punctuation">(</span><span class="token number">1</span>, 0x7fffb6b63378, <span class="token number">0</span>, <span class="token number">8</span><span class="token punctuation">)</span>                               <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_prlimit64<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">3</span>, <span class="token number">0</span>, 0x7fffb6b63360<span class="token punctuation">)</span>                                    <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_statfs<span class="token punctuation">(</span><span class="token string">&quot;/sys/fs/selinux&quot;</span>, 0x7fffb6b63330<span class="token punctuation">)</span>                             <span class="token operator">=</span> <span class="token parameter variable">-2</span></span>
<span class="line">SYS_statfs<span class="token punctuation">(</span><span class="token string">&quot;/selinux&quot;</span>, 0x7fffb6b63330<span class="token punctuation">)</span>                                    <span class="token operator">=</span> <span class="token parameter variable">-2</span></span>
<span class="line">SYS_brk<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                                                                <span class="token operator">=</span> 0x559c89633000</span>
<span class="line">SYS_brk<span class="token punctuation">(</span>0x559c89654000<span class="token punctuation">)</span>                                                   <span class="token operator">=</span> 0x559c89654000</span>
<span class="line">SYS_openat<span class="token punctuation">(</span>0xffffff9c, 0x7f780778f777, 0x80000, <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">SYS_fstat<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b631f0<span class="token punctuation">)</span>                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;nodev<span class="token entity" title="\\t">\\t</span>sysfs<span class="token entity" title="\\n">\\n</span>nodev<span class="token entity" title="\\t">\\t</span>tmpfs<span class="token entity" title="\\n">\\n</span>nodev<span class="token entity" title="\\t">\\t</span>bd&quot;</span><span class="token punctuation">..</span>., <span class="token number">1024</span><span class="token punctuation">)</span>             <span class="token operator">=</span> <span class="token number">411</span></span>
<span class="line">SYS_read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token number">1024</span><span class="token punctuation">)</span>                                                     <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_access<span class="token punctuation">(</span><span class="token string">&quot;/etc/selinux/config&quot;</span>, 00<span class="token punctuation">)</span>                                     <span class="token operator">=</span> <span class="token parameter variable">-2</span></span>
<span class="line">SYS_openat<span class="token punctuation">(</span>0xffffff9c, 0x7f7807739fd0, 0x80000, <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">SYS_fstat<span class="token punctuation">(</span><span class="token number">3</span>, 0x7f780776b9e0<span class="token punctuation">)</span>                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_mmap<span class="token punctuation">(</span><span class="token number">0</span>, 0x2e5330, <span class="token number">1</span>, <span class="token number">2</span><span class="token punctuation">)</span>                                               <span class="token operator">=</span> 0x7f78071dd000</span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_ioctl<span class="token punctuation">(</span><span class="token number">1</span>, 0x5401, 0x7fffb6b632b0, 0x7f7807767640<span class="token punctuation">)</span>                      <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_ioctl<span class="token punctuation">(</span><span class="token number">1</span>, 0x5413, 0x7fffb6b63370, 0x7f7807767640<span class="token punctuation">)</span>                      <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_openat<span class="token punctuation">(</span>0xffffff9c, 0x559c896399a0, 0x90800, <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">SYS_fstat<span class="token punctuation">(</span><span class="token number">3</span>, 0x7fffb6b62ef0<span class="token punctuation">)</span>                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_getdents64<span class="token punctuation">(</span><span class="token number">3</span>, 0x559c896399f0, 0x8000, <span class="token number">0</span><span class="token punctuation">)</span>                              <span class="token operator">=</span> <span class="token number">784</span></span>
<span class="line">SYS_getdents64<span class="token punctuation">(</span><span class="token number">3</span>, 0x559c896399f0, 0x8000, <span class="token number">2</span><span class="token punctuation">)</span>                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_fstat<span class="token punctuation">(</span><span class="token number">1</span>, 0x7fffb6b60a30<span class="token punctuation">)</span>                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_write<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token string">&quot;blog  mrdrivingduck.github.io  s&quot;</span><span class="token punctuation">..</span>., 42blog  mrdrivingduck.github.io  snap  temp</span>
<span class="line"><span class="token punctuation">)</span>                   <span class="token operator">=</span> <span class="token number">42</span></span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_close<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                                                              <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">SYS_exit_group<span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;</span>no <span class="token builtin class-name">return</span> <span class="token punctuation">..</span>.<span class="token operator">&gt;</span></span>
<span class="line">+++ exited <span class="token punctuation">(</span>status <span class="token number">0</span><span class="token punctuation">)</span> +++</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过查阅资料，较新版本 Ubuntu 系统中的程序不是以懒加载动态链接库的形式编译的，而 <code>ltrace</code> 的工作原理是在可执行文件的 PLT 中插入断点。如果程序不以懒加载动态链接库的形式编译，那么 PLT 中的断点压根不会被触发到，所以无法追踪到库函数调用。如果在 GCC 编译器选项中加入 <code>-z lazy</code>，则可以看到库函数的调用。</p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p><a href="https://medium.com/@boutnaru/linux-why-ltrace-does-not-work-on-new-versions-of-ubuntu-b2d89b55b70f" target="_blank" rel="noopener noreferrer">Linux — Why “ltrace” does not work on new versions of Ubuntu?</a></p><p><a href="https://man7.org/linux/man-pages/man1/ltrace.1.html" target="_blank" rel="noopener noreferrer">ltrace(1) — Linux manual page</a></p><p><a href="https://man7.org/linux/man-pages/man1/strace.1.html" target="_blank" rel="noopener noreferrer">strace(1) — Linux manual page</a></p>`,26)]))}const i=n(e,[["render",l],["__file","ltrace-strace.html.vue"]]),r=JSON.parse('{"path":"/notes/Linux/ltrace-strace.html","title":"ltrace / strace","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Background","slug":"background","link":"#background","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Strace","slug":"strace","link":"#strace","children":[]},{"level":2,"title":"Ltrace","slug":"ltrace","link":"#ltrace","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{},"filePathRelative":"notes/Linux/ltrace-strace.md"}');export{i as comp,r as data};
