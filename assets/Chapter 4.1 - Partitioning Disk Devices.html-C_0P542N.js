import{_ as i,c as s,a,o as n}from"./app-7eKjwDat.js";const l={};function t(d,e){return n(),s("div",null,e[0]||(e[0]=[a(`<h1 id="chapter-4-1-partitioning-disk-devices" tabindex="-1"><a class="header-anchor" href="#chapter-4-1-partitioning-disk-devices"><span>Chapter 4.1 - Partitioning Disk Devices</span></a></h1><p>Created by : Mr Dk.</p><p>2019 / 06 / 15 17:16</p><p>@Nanjing, Jiangsu, China</p><hr><p>Linux 磁盘的组织格式。分区 (Partitions) 是整个硬盘的 subdivisions。在 Linux 中，它们被表示为整体 block device 之后的编号，比如 <code>/dev/sda1</code>。</p><p>内核将每一个分区视为一个 block device。分区表定义了硬盘上的分区，放置在硬盘上的小一块区域上。在每个分区上，可以运行文件系统，存放了文件和目录的数据。如果想要访问文件中的数据：</p><ol><li>在分区表中找到分区位置</li><li>查找分区上的文件系统数据库</li><li>访问文件</li></ol><p>内核通过 block device interface 和 SCSI 子系统访问磁盘硬件。</p><p>分区表的类型有很多种：</p><ul><li><em>Master Boot Record, MBR</em>：传统分区表</li><li><em>Globally Unique Identifier Partition Table, GPT</em>：新标准</li></ul><h3 id="_4-1-1-viewing-a-partition-table" tabindex="-1"><a class="header-anchor" href="#_4-1-1-viewing-a-partition-table"><span>4.1.1 Viewing a Partition Table</span></a></h3><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ parted -l</span>
<span class="line">Model: QEMU QEMU HARDDISK (scsi)</span>
<span class="line">Disk /dev/sda: 32.2GB</span>
<span class="line">Sector size (logical/physical): 512B/512B</span>
<span class="line">Partition Table: gpt</span>
<span class="line">Disk Flags:</span>
<span class="line"></span>
<span class="line">Number  Start   End     Size    File system  Name  Flags</span>
<span class="line">14      1049kB  5243kB  4194kB                     bios_grub</span>
<span class="line">15      5243kB  116MB   111MB   fat32              boot, esp</span>
<span class="line"> 1      116MB   32.2GB  32.1GB  ext4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>parted</code> 程序所谓的 <em>msdos</em> 就是传统的 MBR 分区表。MBR 表包含：</p><ul><li>Primary partitions - 主分区</li><li>Extended partitions - 扩展分区</li><li>Logical partitions - 逻辑分区</li></ul><p>基本的 MBR 最多允许四个主分区。可以指定一个扩展分区，并将扩展分区划分为逻辑分区。</p><h4 id="initial-kernel-read" tabindex="-1"><a class="header-anchor" href="#initial-kernel-read"><span>Initial Kernel Read</span></a></h4><p>使用 <code>dmesg</code> 命令可以看到：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ dmesg</span>
<span class="line">[    1.800660] sd 2:0:0:0: Power-on or device reset occurred</span>
<span class="line">[    1.803385] sd 2:0:0:0: [sda] 62914560 512-byte logical blocks: (32.2 GB/30.0 GiB)</span>
<span class="line">[    1.807989] sd 2:0:0:0: [sda] Write Protect is off</span>
<span class="line">[    1.810075] sd 2:0:0:0: [sda] Mode Sense: 63 00 00 08</span>
<span class="line">[    1.810281] sd 2:0:0:0: Attached scsi generic sg0 type 0</span>
<span class="line">[    1.816186] sd 2:0:0:0: [sda] Write cache: disabled, read cache: enabled, doesn&#39;t support DPO or FUA</span>
<span class="line">[    1.829643]  sda: sda1 sda14 &lt; sda15 &gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sda14 &lt; sda15 &gt;</code> 表示 <code>/dev/sda14</code> 是一个扩展分区，包含 <code>/dev/sda15</code> 这个逻辑分区</p><h3 id="_4-1-2-changing-partition-tables" tabindex="-1"><a class="header-anchor" href="#_4-1-2-changing-partition-tables"><span>4.1.2 Changing Partition Tables</span></a></h3><p>改变分区表很难恢复分区上的数据 - 因为改变了文件系统引用的起始点。需要保证目标磁盘上没有分区正在被使用，因为大部分 Linux 发行版会自动绑定任何检测到的文件系统。</p><h3 id="_4-1-3-disk-and-partition-geometry" tabindex="-1"><a class="header-anchor" href="#_4-1-3-disk-and-partition-geometry"><span>4.1.3 Disk and Partition Geometry</span></a></h3><p>磁盘包含一根轴 <em>Spindle</em> 和一组重叠的旋转盘片 <em>Platter</em>，以及位于一个可移动的手臂 <em>Arm</em> 上的磁头 <em>Head</em>。磁头用于读取数据，当手臂在某个位置时，磁头只能读取一个固定的圆柱面上读取数据，这个圆柱面被叫做柱面 <em>Cylinder</em>。每个盘片可以有一或两个磁头，连接到同一个手臂上，分别操作盘片的上下两面。磁盘上有很多柱面，越往外围越大，每个柱面被分为很多个片，称为扇区 <em>Sector</em>。所谓的磁盘 CHS 即 cylinder-head-sector。</p><p>内核和分区程序报告的硬盘柱面、扇区数据是假的，在现代磁盘中不适用。磁盘硬件通过 Logical Block Addressing, LBA 寻找磁盘上的位置。</p><p>柱面是理想化的边界，读取同一柱面上的数据非常快，因为磁头不需要移动；读取相邻柱面上的数据也很快，因为磁头不需要移动很远。</p><h3 id="_4-1-4-solid-state-disks-ssds" tabindex="-1"><a class="header-anchor" href="#_4-1-4-solid-state-disks-ssds"><span>4.1.4 Solid-State Disks (SSDs)</span></a></h3><p>内部没有移动的部分，每次以块 (typically 4096B) 为单位读取数据。读取必须从块大小的整数倍的位置开始读取，如果数据跨过了块大小边界，则需要多次读取。很多分区工具保证了在磁盘起始位置的合适偏移量处放置新分区，用户不需要关心分区组织。</p>`,28)]))}const c=i(l,[["render",t],["__file","Chapter 4.1 - Partitioning Disk Devices.html.vue"]]),o=JSON.parse('{"path":"/how-linux-works-notes/Chapter%204.1%20-%20Partitioning%20Disk%20Devices.html","title":"Chapter 4.1 - Partitioning Disk Devices","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"4.1.1 Viewing a Partition Table","slug":"_4-1-1-viewing-a-partition-table","link":"#_4-1-1-viewing-a-partition-table","children":[]},{"level":3,"title":"4.1.2 Changing Partition Tables","slug":"_4-1-2-changing-partition-tables","link":"#_4-1-2-changing-partition-tables","children":[]},{"level":3,"title":"4.1.3 Disk and Partition Geometry","slug":"_4-1-3-disk-and-partition-geometry","link":"#_4-1-3-disk-and-partition-geometry","children":[]},{"level":3,"title":"4.1.4 Solid-State Disks (SSDs)","slug":"_4-1-4-solid-state-disks-ssds","link":"#_4-1-4-solid-state-disks-ssds","children":[]}],"git":{},"filePathRelative":"how-linux-works-notes/Chapter 4.1 - Partitioning Disk Devices.md"}');export{c as comp,o as data};
