import{_ as n,c as a,a as s,o as i}from"./app-7eKjwDat.js";const l={};function r(t,e){return i(),a("div",null,e[0]||(e[0]=[s(`<h1 id="linux-operations" tabindex="-1"><a class="header-anchor" href="#linux-operations"><span>Linux - Operations</span></a></h1><p>Created by : Mr Dk.</p><p>2020 / 04 / 04 01:09</p><p>Ningbo, Zhejiang, China</p><hr><h2 id="日志文件清除" tabindex="-1"><a class="header-anchor" href="#日志文件清除"><span>日志文件清除</span></a></h2><p>之前有一个问题困扰我很久：在 Linux 上开始运行一个服务，但我又要查看日志。比如平时会用 <em>frp</em> 做内网穿透。一旦出现网络波动，断开、自动重连、断开、自动重连......每次连接都会产生日志记录。</p><p>为了方面查看服务状态，我将服务的日志输出重定向到一个文件中。随着这个日志文件越来越大，磁盘渐渐放不下了。我头一铁就只能把这个日志文件删掉了，但是为了删这个文件，<em>frp</em> 服务必须得停下。如果运行 <em>frp</em> 客户端的内网机器不在我身边，客户端看到服务端 <em>frp</em> 服务已经停止就不再自动重连。所以，就算我重新启动了 <em>frp</em> 服务，还是和我的远程机器失联了。</p><p>有没有办法可以在不停止服务 (不中断程序) 的前提下，将磁盘上的日志文件清空？通过下面的命令就可以：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ echo &#39; &#39; &gt; server.log</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>通过这种方法，磁盘空间会被立刻释放；同时进程也可以继续向文件写入日志，不必重启服务。如果日志文件要留存别处，可以先 copy 一份日志，然后再敲上述命令。</p><blockquote><p>从 Linux 内核的角度考虑一下这是怎么实现的呢？ 🤔</p><p>猜测：</p><ol><li>内核将该文件的所有磁盘块都直接置为无效 (bitmap 设置为 0？)</li><li>分配新的磁盘块，并写入 <code>echo</code> 的内容</li><li>将 <code>server.log</code> 文件的 inode 的起始磁盘块号 (<code>i_zone[0]</code>) 设置为这个新的磁盘块号</li></ol></blockquote><p><a href="https://www.jianshu.com/p/d3ffccbe82c5" target="_blank" rel="noopener noreferrer">情景 Linux--如何解决服务器日志过多导致的磁盘空间不足？</a></p><h2 id="查看端口占用" tabindex="-1"><a class="header-anchor" href="#查看端口占用"><span>查看端口占用</span></a></h2><p>查看端口占用情况：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ lsof -i</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看某一端口的占用情况：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ lsof -i:8090</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,18)]))}const p=n(l,[["render",r],["__file","Linux Operations.html.vue"]]),c=JSON.parse('{"path":"/notes/Operating%20System/Linux%20Operations.html","title":"Linux - Operations","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"日志文件清除","slug":"日志文件清除","link":"#日志文件清除","children":[]},{"level":2,"title":"查看端口占用","slug":"查看端口占用","link":"#查看端口占用","children":[]}],"git":{},"filePathRelative":"notes/Operating System/Linux Operations.md"}');export{p as comp,c as data};
