import{_ as n,c as a,a as p,o as e}from"./app-7eKjwDat.js";const t={};function c(o,s){return e(),a("div",null,s[0]||(s[0]=[p(`<h1 id="chapter-8-10-sys-c-程序" tabindex="-1"><a class="header-anchor" href="#chapter-8-10-sys-c-程序"><span>Chapter 8.10 - sys.c 程序</span></a></h1><p>Created by : Mr Dk.</p><p>2019 / 08 / 21 15:30</p><p>Ningbo, Zhejiang, China</p><hr><h2 id="_8-10-sys-c-程序" tabindex="-1"><a class="header-anchor" href="#_8-10-sys-c-程序"><span>8.10 sys.c 程序</span></a></h2><h3 id="_8-10-1-功能描述" tabindex="-1"><a class="header-anchor" href="#_8-10-1-功能描述"><span>8.10.1 功能描述</span></a></h3><p>该程序中包含有很多系统调用功能的实现函数，其中返回值为 <code>-ENOSYS</code> 的表示本版 Linux 内核中还没有实现。程序中包含很多关于 ID 的操作，一个用户有用户 ID (uid) 和用户组 ID (gid)，是 passwd 文件中对该用户设置的 ID。在每个文件的 inode 中，都保存着宿主的 uid 和 gid，指明了文件拥有者和所属用户组，用于访问或执行文件时的权限判别。另外，在进程的任务数据结构中，保存了三种用户 ID 和组 ID。</p><table><thead><tr><th>Type</th><th>UID</th><th>GID</th></tr></thead><tbody><tr><td>进程 ID</td><td>uid - 拥有该进程的用户</td><td>gid - 拥有该进程的用户组</td></tr><tr><td>有效 ID</td><td>euid - 指明访问文件的权限</td><td>egid - 指明访问文件的权限</td></tr><tr><td>保存 ID</td><td>suid - 当执行文件的 <code>set-user-ID</code> 置位时，suid 保存着执行文件的 uid；否则 suid 等于进程的 euid</td><td>sgid - 当执行文件的 <code>set-group-ID</code> 置位时，sgid 中保存着执行文件的 gid；否则 sgid 等于进程的 egid</td></tr></tbody></table><p>suid 和 sgid 用于进程访问设置了 <code>set-user-ID</code> 或 <code>set-group-ID</code> 标志的文件</p><ul><li>当执行程序时，euid 通常就是 uid，因此进程只能访问进程的有效用户规定的文件</li><li>如果文件的 <code>set-user-ID</code> 置位，那么进程的 euid 会被设置为该文件宿主的 uid，因此进程可以访问设置了这种标志的受限文件</li></ul><p>比如 Linux 中的 <code>passwd</code> 命令，允许普通用户修改自己的口令。实际上需要超级用户的权限。</p><h3 id="_8-10-2-代码注释" tabindex="-1"><a class="header-anchor" href="#_8-10-2-代码注释"><span>8.10.2 代码注释</span></a></h3><h4 id="系统调用-sys-ftime" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-ftime"><span>系统调用 sys_ftime()</span></a></h4><h4 id="系统调用-sys-break" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-break"><span>系统调用 sys_break()</span></a></h4><h4 id="系统调用-sys-ptrace" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-ptrace"><span>系统调用 sys_ptrace()</span></a></h4><h4 id="系统调用-sys-gtty" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-gtty"><span>系统调用 sys_gtty()</span></a></h4><h4 id="系统调用-sys-rename" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-rename"><span>系统调用 sys_rename()</span></a></h4><h4 id="系统调用-sys-prof" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-prof"><span>系统调用 sys_prof()</span></a></h4><h4 id="系统调用-sys-setregid" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-setregid"><span>系统调用 sys_setregid()</span></a></h4><p>设置当前任务的 gid、egid。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_setregid</span><span class="token punctuation">(</span><span class="token keyword">int</span> rgid<span class="token punctuation">,</span> <span class="token keyword">int</span> egid<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>rgid <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>gid <span class="token operator">==</span> rgid<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">suser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            current<span class="token operator">-&gt;</span>gid <span class="token operator">=</span> rgid<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">else</span></span>
<span class="line">            <span class="token comment">// 没有超级用户特权</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">-</span>EPERM<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>egid <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>gid <span class="token operator">==</span> egid<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>egid <span class="token operator">==</span> egid<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">suser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            current<span class="token operator">-&gt;</span>egid <span class="token operator">=</span> egid<span class="token punctuation">;</span></span>
<span class="line">            current<span class="token operator">-&gt;</span>sgid <span class="token operator">=</span> egid<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span></span>
<span class="line">            <span class="token comment">// 没有超级用户特权</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">-</span>EPERM<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-setreuid" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-setreuid"><span>系统调用 sys_setreuid()</span></a></h4><p>设置任务的 uid 和 euid。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_setreuid</span><span class="token punctuation">(</span><span class="token keyword">int</span> ruid<span class="token punctuation">,</span> <span class="token keyword">int</span> euid<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> old_ruid <span class="token operator">=</span> current<span class="token operator">-&gt;</span>uid<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>ruid <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>euid <span class="token operator">==</span> ruid<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>old_ruid <span class="token operator">==</span> ruid<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">suser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            current<span class="token operator">-&gt;</span>uid <span class="token operator">=</span> ruid<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">else</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">-</span>EPERM<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>euid <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>old_ruid <span class="token operator">==</span> euid<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>euid <span class="token operator">==</span> euid<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">suser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            current<span class="token operator">-&gt;</span>euid <span class="token operator">=</span> euid<span class="token punctuation">;</span></span>
<span class="line">            current<span class="token operator">-&gt;</span>suid <span class="token operator">=</span> euid<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            current<span class="token operator">-&gt;</span>uid <span class="token operator">=</span> old_ruid<span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">-</span>EPERM<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-setgid" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-setgid"><span>系统调用 sys_setgid()</span></a></h4><p>设置进程组号。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_setgid</span><span class="token punctuation">(</span><span class="token keyword">int</span> gid<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">suser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">// 超级用户</span></span>
<span class="line">        current<span class="token operator">-&gt;</span>gid <span class="token operator">=</span> current<span class="token operator">-&gt;</span>egid <span class="token operator">=</span> current<span class="token operator">-&gt;</span>sgid <span class="token operator">=</span> gid<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>gid <span class="token operator">==</span> current<span class="token operator">-&gt;</span>gid<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>gid <span class="token operator">==</span> current<span class="token operator">-&gt;</span>sgid<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        current<span class="token operator">-&gt;</span>egid <span class="token operator">=</span> gid<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">else</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span>EPERM<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-setuid" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-setuid"><span>系统调用 sys_setuid()</span></a></h4><p>设置任务的 uid。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_setuid</span><span class="token punctuation">(</span><span class="token keyword">int</span> uid<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">suser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        current<span class="token operator">-&gt;</span>uid <span class="token operator">=</span> current<span class="token operator">-&gt;</span>euid <span class="token operator">=</span> current<span class="token operator">-&gt;</span>suid <span class="token operator">=</span> uid<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>uid <span class="token operator">==</span> current<span class="token operator">-&gt;</span>uid<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>uid <span class="token operator">==</span> current<span class="token operator">-&gt;</span>suid<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        current<span class="token operator">-&gt;</span>euid <span class="token operator">=</span> uid<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">else</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span>EPERM<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-phys" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-phys"><span>系统调用 sys_phys()</span></a></h4><h4 id="系统调用-sys-lock" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-lock"><span>系统调用 sys_lock()</span></a></h4><h4 id="系统调用-sys-mpx" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-mpx"><span>系统调用 sys_mpx()</span></a></h4><h4 id="系统调用-sys-ulimit" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-ulimit"><span>系统调用 sys_ulimit()</span></a></h4><h4 id="系统调用-sys-time" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-time"><span>系统调用 sys_time()</span></a></h4><p>返回 1970.1.1 00:00:00 开始计时的秒数。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_time</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token operator">*</span> tloc<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> i<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    i <span class="token operator">=</span> CURRENT_TIME<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>tloc<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">verify_area</span><span class="token punctuation">(</span>tloc<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">put_fs_long</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token operator">*</span><span class="token punctuation">)</span> tloc<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> i<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-stime" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-stime"><span>系统调用 sys_stime()</span></a></h4><p>设置系统开机时间。参数是从 1970.1.1 00:00:00 开始的秒数。调用进程必须具有超级用户权限。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_stime</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token operator">*</span> tptr<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">suser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span>EPERM<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 函数提供的当前时间 - 已经运行的时间 == 新开机时间</span></span>
<span class="line">    startup_time <span class="token operator">=</span> <span class="token function">get_fs_long</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token operator">*</span><span class="token punctuation">)</span> tptr<span class="token punctuation">)</span> <span class="token operator">-</span> jiffies<span class="token operator">/</span>HZ<span class="token punctuation">;</span></span>
<span class="line">    jiffies_offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-times" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-times"><span>系统调用 sys_times()</span></a></h4><p>获取当前任务运行时间统计值。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_times</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">tms</span> <span class="token operator">*</span> tbuf<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>tbuf<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">verify_area</span><span class="token punctuation">(</span>tbuf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> <span class="token operator">*</span>tbuf<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">put_fs_long</span><span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>utime<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>tbuf<span class="token operator">-&gt;</span>tms_utime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">put_fs_long</span><span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>stime<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>tbuf<span class="token operator">-&gt;</span>tms_stime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">put_fs_long</span><span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>cutime<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>tbuf<span class="token operator">-&gt;</span>tms_cutime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">put_fs_long</span><span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>cstime<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>tbuf<span class="token operator">-&gt;</span>tms_cstime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> jiffies<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-brk" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-brk"><span>系统调用 sys_brk()</span></a></h4><p>设置程序数据段末尾位置。</p><ul><li>参数数值合理</li><li>系统确实有足够的内存</li><li>进程没有超越其最大数据段大小</li></ul><p>数据段需要大于代码段结尾，小于堆栈结尾。这个函数不会被用户直接调用，而是由 libc 库函数进行包装。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_brk</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> end_data_seg<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>end_data_seg <span class="token operator">&gt;=</span> current<span class="token operator">-&gt;</span>end_code <span class="token operator">&amp;&amp;</span></span>
<span class="line">        end_data_seg <span class="token operator">&lt;</span> current<span class="token operator">-&gt;</span>start_stack <span class="token operator">-</span> <span class="token number">16384</span><span class="token punctuation">)</span></span>
<span class="line">        current<span class="token operator">-&gt;</span>brk <span class="token operator">=</span> end_data_seg<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> current<span class="token operator">-&gt;</span>brk<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-setpgid" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-setpgid"><span>系统调用 sys_setpgid()</span></a></h4><p>设置指定进程的进程组号。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_setpgid</span><span class="token punctuation">(</span><span class="token keyword">int</span> pid<span class="token punctuation">,</span> <span class="token keyword">int</span> pgid<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> i<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pid<span class="token punctuation">)</span></span>
<span class="line">        pid <span class="token operator">=</span> current<span class="token operator">-&gt;</span>pid<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pgid<span class="token punctuation">)</span></span>
<span class="line">        pgid <span class="token operator">=</span> current<span class="token operator">-&gt;</span>pid<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>pgid <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span>EINVAL<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NR_TASKS<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>task<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>pid <span class="token operator">==</span> pid<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span></span>
<span class="line">            <span class="token punctuation">(</span><span class="token punctuation">(</span>task<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>p_pptr <span class="token operator">==</span> current<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>task<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> current<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 任务的父进程是当前进程 或 任务就是当前进程</span></span>
<span class="line">            </span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>task<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>leader<span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">// 会话首领</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token operator">-</span>EPERM<span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>task<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>session <span class="token operator">!=</span> current<span class="token operator">-&gt;</span>session<span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">                <span class="token punctuation">(</span><span class="token punctuation">(</span>pgid <span class="token operator">!=</span> pid<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">session_of_pgrp</span><span class="token punctuation">(</span>pgid<span class="token punctuation">)</span> <span class="token operator">!=</span> current<span class="token operator">-&gt;</span>session<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token comment">// 任务的会话与当前进程不同</span></span>
<span class="line">                <span class="token comment">// pgid 进程组所属会话号与当前进程所属会话号不同</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token operator">-</span>EPERM<span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// 设置进程的组号</span></span>
<span class="line">            task<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-&gt;</span>pgrp <span class="token operator">=</span> pgid<span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token comment">// 进程不存在</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token operator">-</span>ESRCH<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-getpgrp" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-getpgrp"><span>系统调用 sys_getpgrp()</span></a></h4><p>返回当前进程的进程组号。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_getpgrp</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> current<span class="token operator">-&gt;</span>pgrp<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-setsid" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-setsid"><span>系统调用 sys_setsid()</span></a></h4><h4 id="系统调用-sys-getgroups" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-getgroups"><span>系统调用 sys_getgroups()</span></a></h4><h4 id="系统调用-sys-setgroups" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-setgroups"><span>系统调用 sys_setgroups()</span></a></h4><h4 id="检查当前进程是否在指定的用户组中-in-group-p" tabindex="-1"><a class="header-anchor" href="#检查当前进程是否在指定的用户组中-in-group-p"><span>检查当前进程是否在指定的用户组中 - in_group_p()</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">in_group_p</span><span class="token punctuation">(</span><span class="token class-name">gid_t</span> grp<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> i<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>grp <span class="token operator">==</span> current<span class="token operator">-&gt;</span>egid<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NGROUPS<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>groups<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> NOGROUP<span class="token punctuation">)</span> <span class="token comment">// 扫描完全部有效项</span></span>
<span class="line">            <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token operator">-&gt;</span>groups<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> grp<span class="token punctuation">)</span> <span class="token comment">// 扫描到用户组号</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="utsname-结构" tabindex="-1"><a class="header-anchor" href="#utsname-结构"><span>utsname 结构</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token keyword">struct</span> <span class="token class-name">utisname</span> thisname <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    UTS_SYSNAME<span class="token punctuation">,</span>    <span class="token comment">// 当前操作系统名称 &quot;Linux&quot;</span></span>
<span class="line">    UTS_NODENAME<span class="token punctuation">,</span>   <span class="token comment">// 网络结点名称 (主机名) &quot;(none)&quot;</span></span>
<span class="line">    UTS_RELEASE<span class="token punctuation">,</span>    <span class="token comment">// 当前操作系统 release &quot;0&quot;</span></span>
<span class="line">    UTS_VERSION<span class="token punctuation">,</span>    <span class="token comment">// 操作系统版本 &quot;0.12&quot;</span></span>
<span class="line">    UTS_MACHINE     <span class="token comment">// 系统运行的硬件类型名称 &quot;i386&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-uname" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-uname"><span>系统调用 sys_uname()</span></a></h4><p>获取系统名称等信息。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_uname</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">utsname</span> <span class="token operator">*</span> name<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> i<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>name<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span>ERROR<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">verify_area</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> <span class="token operator">*</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 检测用户空间内存</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">sizeof</span> <span class="token operator">*</span>name<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">put_fs_byte</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>thisname<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-sethostname" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-sethostname"><span>系统调用 sys_sethostname()</span></a></h4><h4 id="系统调用-sys-getrlimit" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-getrlimit"><span>系统调用 sys_getrlimit()</span></a></h4><h4 id="系统调用-sys-setrlimit" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-setrlimit"><span>系统调用 sys_setrlimit()</span></a></h4><h4 id="系统调用-sys-getrusage" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-getrusage"><span>系统调用 sys_getrusage()</span></a></h4><p>当前进程或其子进程的资源使用情况。</p><h4 id="系统调用-sys-gettimeofday" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-gettimeofday"><span>系统调用 sys_gettimeofday()</span></a></h4><p>取得系统当前时间。</p><h4 id="系统调用-sys-settimeofday" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-settimeofday"><span>系统调用 sys_settimeofday()</span></a></h4><p>设置系统当前时间。</p><h4 id="将从-cmos-中读取的时间调整为-gmt-时间保存-adjust-clock" tabindex="-1"><a class="header-anchor" href="#将从-cmos-中读取的时间调整为-gmt-时间保存-adjust-clock"><span>将从 CMOS 中读取的时间调整为 GMT 时间保存 adjust_clock()</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">void</span> <span class="token function">adjust_clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    startup_time <span class="token operator">+=</span> sys_tz<span class="token punctuation">.</span>tz_minuteswest <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="系统调用-sys-umask" tabindex="-1"><a class="header-anchor" href="#系统调用-sys-umask"><span>系统调用 sys_umask()</span></a></h4><p>设置当前进程创建文件属性屏蔽码，并返回原屏蔽码。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">sys_umask</span><span class="token punctuation">(</span><span class="token keyword">int</span> mask<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">int</span> old <span class="token operator">=</span> current<span class="token operator">-&gt;</span>umask<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    current<span class="token operator">-&gt;</span>umask <span class="token operator">=</span> mask <span class="token operator">&amp;</span> <span class="token number">0777</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span>old<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,79)]))}const i=n(t,[["render",c],["__file","Chapter 8.10 - sys.c 程序.html.vue"]]),u=JSON.parse('{"path":"/linux-kernel-comments-notes/Chapter%208%20-%20%E5%86%85%E6%A0%B8%E4%BB%A3%E7%A0%81/Chapter%208.10%20-%20sys.c%20%E7%A8%8B%E5%BA%8F.html","title":"Chapter 8.10 - sys.c 程序","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"8.10 sys.c 程序","slug":"_8-10-sys-c-程序","link":"#_8-10-sys-c-程序","children":[{"level":3,"title":"8.10.1 功能描述","slug":"_8-10-1-功能描述","link":"#_8-10-1-功能描述","children":[]},{"level":3,"title":"8.10.2 代码注释","slug":"_8-10-2-代码注释","link":"#_8-10-2-代码注释","children":[]}]}],"git":{},"filePathRelative":"linux-kernel-comments-notes/Chapter 8 - 内核代码/Chapter 8.10 - sys.c 程序.md"}');export{i as comp,u as data};
