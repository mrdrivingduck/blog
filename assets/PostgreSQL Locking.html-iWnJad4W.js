import{_ as n,c as a,a as e,o as p}from"./app-7eKjwDat.js";const c="/blog/assets/postgres-table-level-locks-CLYYCOlJ.png",l="/blog/assets/postgres-row-level-locks-2k_na-WR.png",o={};function t(i,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="postgresql-locking" tabindex="-1"><a class="header-anchor" href="#postgresql-locking"><span>PostgreSQL - Locking</span></a></h1><p>Created by : Mr Dk.</p><p>2021 / 05 / 30 21:45</p><p>Hangzhou, Zhejiang, China</p><hr><h2 id="about" tabindex="-1"><a class="header-anchor" href="#about"><span>About</span></a></h2><p>PostgreSQL 中使用各种各样的 <strong>锁</strong> 对表的并发访问进行控制。大部分的 PG 命令都会自动获取合适的锁，以防止命令执行期间表被删除或修改。</p><h2 id="table-level-locks" tabindex="-1"><a class="header-anchor" href="#table-level-locks"><span>Table-level Locks</span></a></h2><p>所有的 <strong>表级锁</strong>。获取方式：</p><ul><li>执行某些特定的 SQL 命令，会自动获取相应的表级锁</li><li>使用 <code>LOCK</code> 命令显式获取表级锁</li></ul><blockquote><p>虽然这些锁里有些名字中带有 <em>row</em>，但是实际上都是表级锁。这是命名上的历史遗留问题。</p></blockquote><p>锁之间实际差别是，相互之间是否冲突：</p><ul><li>两个事务不能在同一时间获取同一个表上相互冲突的锁</li><li>同一个事务不与自己冲突</li><li>有一些锁是自冲突的，只能被一个事务持有</li></ul><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token comment">/* NoLock is not a lock mode, but a flag value meaning &quot;don&#39;t get a lock&quot; */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NoLock</span>                  <span class="token expression"><span class="token number">0</span></span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AccessShareLock</span>         <span class="token expression"><span class="token number">1</span>   </span><span class="token comment">/* SELECT */</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RowShareLock</span>            <span class="token expression"><span class="token number">2</span>   </span><span class="token comment">/* SELECT FOR UPDATE/FOR SHARE */</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RowExclusiveLock</span>        <span class="token expression"><span class="token number">3</span>   </span><span class="token comment">/* INSERT, UPDATE, DELETE */</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ShareUpdateExclusiveLock</span> <span class="token expression"><span class="token number">4</span>  </span><span class="token comment">/* VACUUM (non-FULL),ANALYZE, CREATE INDEX</span>
<span class="line">                                     * CONCURRENTLY */</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ShareLock</span>               <span class="token expression"><span class="token number">5</span>   </span><span class="token comment">/* CREATE INDEX (WITHOUT CONCURRENTLY) */</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ShareRowExclusiveLock</span>   <span class="token expression"><span class="token number">6</span>   </span><span class="token comment">/* like EXCLUSIVE MODE, but allows ROW</span>
<span class="line">                                     * SHARE */</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ExclusiveLock</span>           <span class="token expression"><span class="token number">7</span>   </span><span class="token comment">/* blocks ROW SHARE/SELECT...FOR UPDATE */</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">AccessExclusiveLock</span>     <span class="token expression"><span class="token number">8</span>   </span><span class="token comment">/* ALTER TABLE, DROP TABLE, VACUUM FULL,</span>
<span class="line">                                     * and unqualified LOCK TABLE */</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MaxLockMode</span>             <span class="token expression"><span class="token number">8</span></span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在源代码中，定义了以上锁类型，以及锁的使用场景。锁兼容性定义如下。通过对该数组与锁请求进行与运算，就可以得知是否发生锁冲突。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line"> * Data structures defining the semantics of the standard lock methods.</span>
<span class="line"> *</span>
<span class="line"> * The conflict table defines the semantics of the various lock modes.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">static</span> <span class="token keyword">const</span> LOCKMASK LockConflicts<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* AccessShareLock */</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>AccessExclusiveLock<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* RowShareLock */</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>AccessExclusiveLock<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* RowExclusiveLock */</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareRowExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>AccessExclusiveLock<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* ShareUpdateExclusiveLock */</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareUpdateExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareRowExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>AccessExclusiveLock<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* ShareLock */</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>RowExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareUpdateExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareRowExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>AccessExclusiveLock<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* ShareRowExclusiveLock */</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>RowExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareUpdateExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareRowExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>AccessExclusiveLock<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* ExclusiveLock */</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>RowShareLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>RowExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareUpdateExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareRowExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>AccessExclusiveLock<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* AccessExclusiveLock */</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>AccessShareLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>RowShareLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>RowExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareUpdateExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ShareRowExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span></span>
<span class="line">    <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>ExclusiveLock<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">LOCKBIT_ON</span><span class="token punctuation">(</span>AccessExclusiveLock<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+`" alt="postgres-table-level-locks"></p><p>关于这些锁分类的渊源，<a href="https://www.modb.pro/db/26462" target="_blank" rel="noopener noreferrer">这篇文章</a> 分析得比较透彻。锁模型的发展经过了以下几个阶段：</p><ol><li>经典的读锁 / 写锁模型</li><li>引入 MVCC 后的读锁 / 写锁模型</li><li>引入行级锁后的意向锁模型</li><li>引入自斥锁之后的最终锁模型</li></ol><p>场景有些复杂，以后再逐个搞清楚 😑。</p><h2 id="row-level-locks" tabindex="-1"><a class="header-anchor" href="#row-level-locks"><span>Row-level Locks</span></a></h2><p>同一个事务可以持有在同一行上相互冲突的行级锁，甚至是不同的子事务中；但两个事务不能获取同一行上相冲突的锁。行级锁不影响查询，只会阻塞同一行的 writer 和 locker。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line"> * Possible lock modes for a tuple.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token class-name">LockTupleMode</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/* SELECT FOR KEY SHARE */</span></span>
<span class="line">    LockTupleKeyShare<span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">/* SELECT FOR SHARE */</span></span>
<span class="line">    LockTupleShare<span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">/* SELECT FOR NO KEY UPDATE, and UPDATEs that don&#39;t modify key columns */</span></span>
<span class="line">    LockTupleNoKeyExclusive<span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">/* SELECT FOR UPDATE, UPDATEs that modify key columns, and DELETE */</span></span>
<span class="line">    LockTupleExclusive</span>
<span class="line"><span class="token punctuation">}</span> LockTupleMode<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+l+`" alt="postgres-row-level-locks"></p><h2 id="page-level-locks" tabindex="-1"><a class="header-anchor" href="#page-level-locks"><span>Page-level Locks</span></a></h2><p>页级别的 share / exclusive 锁用于控制共享缓冲池中的页面读写。在 fetch 或 update 一行后，锁将会立刻释放。应用开发人员无需关心。</p><h2 id="selecting-for-share-and-update" tabindex="-1"><a class="header-anchor" href="#selecting-for-share-and-update"><span>Selecting for Share and Update</span></a></h2><p>上述各级别的锁中，很多都是为了服务于 <code>select for update / share</code>。这是干啥用的？</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">FOR</span> <span class="token keyword">UPDATE</span> <span class="token punctuation">[</span> <span class="token keyword">OF</span> table_name <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token punctuation">[</span> NOWAIT <span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">FOR</span> <span class="token keyword">SHARE</span> <span class="token punctuation">[</span> <span class="token keyword">OF</span> table_name <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token punctuation">[</span> NOWAIT <span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>根据官方文档，其作用为，使 SELECT 语句中获取到的所有 <strong>行</strong> 被上锁，以防止其它事务中的 UPDATE / DELETE。</p><ul><li><code>SELECT FOR UPDATE</code> 不允许其它事务的 <code>SELECT FOR UPDATE</code></li><li><code>SELECT FOR SHARE</code> 允许其它事务的 <code>SELECT FOR SHARE</code></li></ul><p>如果锁冲突，将会使另一个事务的操作请求阻塞。因此可以指定 <code>NOWAIT</code> 来决定锁冲突时是等待还是报错。</p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p><a href="https://www.postgresql.org/docs/11/explicit-locking.html" target="_blank" rel="noopener noreferrer">PostgreSQL Documentation 11 - 13.3. Explicit Locking</a></p><p><a href="https://www.postgresql.org/docs/11/view-pg-locks.html" target="_blank" rel="noopener noreferrer">PostgreSQL Documentation 11 - 52.73. pg_locks</a></p><p><a href="https://www.postgresql.org/docs/11/sql-lock.html" target="_blank" rel="noopener noreferrer">PostgreSQL Documentation 11 - LOCK</a></p>`,37)]))}const r=n(o,[["render",t],["__file","PostgreSQL Locking.html.vue"]]),k=JSON.parse('{"path":"/notes/PostgreSQL/PostgreSQL%20Locking.html","title":"PostgreSQL - Locking","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"About","slug":"about","link":"#about","children":[]},{"level":2,"title":"Table-level Locks","slug":"table-level-locks","link":"#table-level-locks","children":[]},{"level":2,"title":"Row-level Locks","slug":"row-level-locks","link":"#row-level-locks","children":[]},{"level":2,"title":"Page-level Locks","slug":"page-level-locks","link":"#page-level-locks","children":[]},{"level":2,"title":"Selecting for Share and Update","slug":"selecting-for-share-and-update","link":"#selecting-for-share-and-update","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{},"filePathRelative":"notes/PostgreSQL/PostgreSQL Locking.md"}');export{r as comp,k as data};
