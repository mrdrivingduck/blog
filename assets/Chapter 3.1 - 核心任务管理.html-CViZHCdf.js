import{_ as s,c as a,a as p,o as e}from"./app-7eKjwDat.js";const t={};function c(l,n){return e(),a("div",null,n[0]||(n[0]=[p(`<h1 id="chapter-3-1-核心任务管理" tabindex="-1"><a class="header-anchor" href="#chapter-3-1-核心任务管理"><span>Chapter 3.1 - 核心任务管理</span></a></h1><p>Created by : Mr Dk.</p><p>2019 / 11 / 18 22:14</p><p>Nanjing, Jiangsu, China</p><hr><h2 id="_3-1-1-临界区的处理" tabindex="-1"><a class="header-anchor" href="#_3-1-1-临界区的处理"><span>3.1.1 临界区的处理</span></a></h2><p>关中断的时间是实时内核的重要指标，影响系统的实时响应特性。在 <code>os_cpu.h</code> 中定义了两个宏来进行开关中断：</p><ul><li><code>OS_ENTER_CRITICAL()</code></li><li><code>OS_EXIT_CRITICAL()</code></li></ul><p>这两个宏一般有三种实现方法：</p><ul><li><code>OS_CRITICAL_METHOD = 1</code>：直接用 CPU 指令开关中断</li><li><code>OS_CRITICAL_METHOD = 2</code>：先利用堆栈保存状态，再关中断；将中断状态从堆栈中弹出，恢复中断原始状态</li><li><code>OS_CRITICAL_METHOD = 3</code>：利用局部变量保存中断开关状态</li></ul><h2 id="_3-1-2-任务的形式" tabindex="-1"><a class="header-anchor" href="#_3-1-2-任务的形式"><span>3.1.2 任务的形式</span></a></h2><p>一个 C 语言函数</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">void</span> <span class="token function">MyTask</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>ppdata<span class="token punctuation">)</span> reentrant <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>任务结构只有两种：</p><ul><li>无限循环结构</li><li>只执行一次就被删除的结构；删除后，代码依然驻留在 RAM 中，但是 OS 不再管理这段代码</li></ul><p>任务永不返回。</p><h2 id="_3-1-3-任务的状态" tabindex="-1"><a class="header-anchor" href="#_3-1-3-任务的状态"><span>3.1.3 任务的状态</span></a></h2><ul><li>休眠</li><li>就绪</li><li>挂起</li><li>被中断</li><li>运行</li></ul><h2 id="_3-1-4-任务控制块" tabindex="-1"><a class="header-anchor" href="#_3-1-4-任务控制块"><span>3.1.4 任务控制块</span></a></h2><p>Task Control Blocks (TCB)，保存任务的各种状态信息，全部驻留在 RAM 中：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">os_tcb</span> <span class="token punctuation">{</span></span>
<span class="line">    OS_STK          <span class="token operator">*</span>OSTCBStkPtr<span class="token punctuation">;</span>           <span class="token comment">/* Pointer to current top of stack                         */</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_TASK_CREATE_EXT_EN <span class="token operator">&gt;</span> <span class="token number">0u</span></span></span></span>
<span class="line">    <span class="token keyword">void</span>            <span class="token operator">*</span>OSTCBExtPtr<span class="token punctuation">;</span>           <span class="token comment">/* Pointer to user definable data for TCB extension        */</span></span>
<span class="line">    OS_STK          <span class="token operator">*</span>OSTCBStkBottom<span class="token punctuation">;</span>        <span class="token comment">/* Pointer to bottom of stack                              */</span></span>
<span class="line">    INT32U           OSTCBStkSize<span class="token punctuation">;</span>          <span class="token comment">/* Size of task stack (in number of stack elements)        */</span></span>
<span class="line">    INT16U           OSTCBOpt<span class="token punctuation">;</span>              <span class="token comment">/* Task options as passed by OSTaskCreateExt()             */</span></span>
<span class="line">    INT16U           OSTCBId<span class="token punctuation">;</span>               <span class="token comment">/* Task ID (0..65535)                                      */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">struct</span> <span class="token class-name">os_tcb</span>   <span class="token operator">*</span>OSTCBNext<span class="token punctuation">;</span>             <span class="token comment">/* Pointer to next     TCB in the TCB list                 */</span></span>
<span class="line">    <span class="token keyword">struct</span> <span class="token class-name">os_tcb</span>   <span class="token operator">*</span>OSTCBPrev<span class="token punctuation">;</span>             <span class="token comment">/* Pointer to previous TCB in the TCB list                 */</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span>OS_EVENT_EN<span class="token punctuation">)</span></span></span></span>
<span class="line">    OS_EVENT        <span class="token operator">*</span>OSTCBEventPtr<span class="token punctuation">;</span>         <span class="token comment">/* Pointer to          event control block                 */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span>OS_EVENT_EN<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>OS_EVENT_MULTI_EN <span class="token operator">&gt;</span> <span class="token number">0u</span><span class="token punctuation">)</span></span></span></span>
<span class="line">    OS_EVENT       <span class="token operator">*</span><span class="token operator">*</span>OSTCBEventMultiPtr<span class="token punctuation">;</span>    <span class="token comment">/* Pointer to multiple event control blocks                */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span>OS_Q_EN <span class="token operator">&gt;</span> <span class="token number">0u</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>OS_MAX_QS <span class="token operator">&gt;</span> <span class="token number">0u</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>OS_MBOX_EN <span class="token operator">&gt;</span> <span class="token number">0u</span><span class="token punctuation">)</span></span></span></span>
<span class="line">    <span class="token keyword">void</span>            <span class="token operator">*</span>OSTCBMsg<span class="token punctuation">;</span>              <span class="token comment">/* Message received from OSMboxPost() or OSQPost()         */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span>OS_FLAG_EN <span class="token operator">&gt;</span> <span class="token number">0u</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>OS_MAX_FLAGS <span class="token operator">&gt;</span> <span class="token number">0u</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_TASK_DEL_EN <span class="token operator">&gt;</span> <span class="token number">0u</span></span></span></span>
<span class="line">    OS_FLAG_NODE    <span class="token operator">*</span>OSTCBFlagNode<span class="token punctuation">;</span>         <span class="token comment">/* Pointer to event flag node                              */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line">    OS_FLAGS         OSTCBFlagsRdy<span class="token punctuation">;</span>         <span class="token comment">/* Event flags that made task ready to run                 */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line">    INT32U           OSTCBDly<span class="token punctuation">;</span>              <span class="token comment">/* Nbr ticks to delay task or, timeout waiting for event   */</span></span>
<span class="line">    INT8U            OSTCBStat<span class="token punctuation">;</span>             <span class="token comment">/* Task      status                                        */</span></span>
<span class="line">    INT8U            OSTCBStatPend<span class="token punctuation">;</span>         <span class="token comment">/* Task PEND status                                        */</span></span>
<span class="line">    INT8U            OSTCBPrio<span class="token punctuation">;</span>             <span class="token comment">/* Task priority (0 == highest)                            */</span></span>
<span class="line"></span>
<span class="line">    INT8U            OSTCBX<span class="token punctuation">;</span>                <span class="token comment">/* Bit position in group  corresponding to task priority   */</span></span>
<span class="line">    INT8U            OSTCBY<span class="token punctuation">;</span>                <span class="token comment">/* Index into ready table corresponding to task priority   */</span></span>
<span class="line">    OS_PRIO          OSTCBBitX<span class="token punctuation">;</span>             <span class="token comment">/* Bit mask to access bit position in ready table          */</span></span>
<span class="line">    OS_PRIO          OSTCBBitY<span class="token punctuation">;</span>             <span class="token comment">/* Bit mask to access bit position in ready group          */</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_TASK_DEL_EN <span class="token operator">&gt;</span> <span class="token number">0u</span></span></span></span>
<span class="line">    INT8U            OSTCBDelReq<span class="token punctuation">;</span>           <span class="token comment">/* Indicates whether a task needs to delete itself         */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_TASK_PROFILE_EN <span class="token operator">&gt;</span> <span class="token number">0u</span></span></span></span>
<span class="line">    INT32U           OSTCBCtxSwCtr<span class="token punctuation">;</span>         <span class="token comment">/* Number of time the task was switched in                 */</span></span>
<span class="line">    INT32U           OSTCBCyclesTot<span class="token punctuation">;</span>        <span class="token comment">/* Total number of clock cycles the task has been running  */</span></span>
<span class="line">    INT32U           OSTCBCyclesStart<span class="token punctuation">;</span>      <span class="token comment">/* Snapshot of cycle counter at start of task resumption   */</span></span>
<span class="line">    OS_STK          <span class="token operator">*</span>OSTCBStkBase<span class="token punctuation">;</span>          <span class="token comment">/* Pointer to the beginning of the task stack              */</span></span>
<span class="line">    INT32U           OSTCBStkUsed<span class="token punctuation">;</span>          <span class="token comment">/* Number of bytes used from the stack                     */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_TASK_NAME_EN <span class="token operator">&gt;</span> <span class="token number">0u</span></span></span></span>
<span class="line">    INT8U           <span class="token operator">*</span>OSTCBTaskName<span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_TASK_REG_TBL_SIZE <span class="token operator">&gt;</span> <span class="token number">0u</span></span></span></span>
<span class="line">    INT32U           OSTCBRegTbl<span class="token punctuation">[</span>OS_TASK_REG_TBL_SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"><span class="token punctuation">}</span> OS_TCB<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-1-5-就绪表" tabindex="-1"><a class="header-anchor" href="#_3-1-5-就绪表"><span>3.1.5 就绪表</span></a></h2><ul><li><code>OSRdyTbl[OS_LOWEST_PRIO/8+1]</code>：数组长度为 8，8 * 8bit = 64bit；每一位分别代表一个任务是否就绪</li><li><code>OSRdyGrp</code> 是一个变量 (8-bit)：每一位代表了一组 8 个任务中是否就绪，该组中只要有一个任务就绪，这一 bit 就要被置位</li><li>优先级也是一个变量 (8-bit)： <ul><li>5-3bit 为在 <code>OSRdyTbl</code> 中的索引，也对应在 <code>OSRdyGrp</code> 中的某一 bit；</li><li>2-0bit 对应 <code>OSRdyTbl</code> 中某索引下的某一位</li></ul></li></ul><p>某任务进入就绪态，就要将 <code>OSRdyTbl</code> 中的对应 bit 置位：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line">OSRdyGrp <span class="token operator">=</span> OSMapTbl<span class="token punctuation">[</span>prio <span class="token operator">&gt;&gt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">OSRdyTbl<span class="token punctuation">[</span>prio <span class="token operator">&gt;&gt;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">|=</span> OSMapTbl<span class="token punctuation">[</span>prio <span class="token operator">&amp;</span> <span class="token number">0x07</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果任务需要脱离就绪态，就将对应 bit 清零：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>OSRdyTbl<span class="token punctuation">[</span>prio <span class="token operator">&gt;&gt;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">&amp;=</span> <span class="token operator">~</span>OSMapTbl<span class="token punctuation">[</span>prio <span class="token operator">&amp;</span> <span class="token number">0x07</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    OSRdyGrp <span class="token operator">&amp;=</span> <span class="token operator">~</span>OSMapTbl<span class="token punctuation">[</span>prio <span class="token operator">&gt;&gt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，<code>OSMapTbl[]</code> 存放在 ROM 中，是提前计算好的，用于加快计算速度：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line">OSMapTbl<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token number">00000001</span>b<span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">00000010</span>b<span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">00000100</span>b<span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">00001000</span>b<span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">00010000</span>b<span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">00100000</span>b<span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">01000000</span>b<span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">10000000</span>b</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如何找出进入就绪态的最高优先级代码？</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line">INT8U  <span class="token keyword">const</span>  OSUnMapTbl<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0x00 to 0x0F                   */</span></span>
<span class="line">    <span class="token number">4u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0x10 to 0x1F                   */</span></span>
<span class="line">    <span class="token number">5u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0x20 to 0x2F                   */</span></span>
<span class="line">    <span class="token number">4u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0x30 to 0x3F                   */</span></span>
<span class="line">    <span class="token number">6u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0x40 to 0x4F                   */</span></span>
<span class="line">    <span class="token number">4u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0x50 to 0x5F                   */</span></span>
<span class="line">    <span class="token number">5u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0x60 to 0x6F                   */</span></span>
<span class="line">    <span class="token number">4u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0x70 to 0x7F                   */</span></span>
<span class="line">    <span class="token number">7u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0x80 to 0x8F                   */</span></span>
<span class="line">    <span class="token number">4u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0x90 to 0x9F                   */</span></span>
<span class="line">    <span class="token number">5u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0xA0 to 0xAF                   */</span></span>
<span class="line">    <span class="token number">4u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0xB0 to 0xBF                   */</span></span>
<span class="line">    <span class="token number">6u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0xC0 to 0xCF                   */</span></span>
<span class="line">    <span class="token number">4u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0xD0 to 0xDF                   */</span></span>
<span class="line">    <span class="token number">5u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token comment">/* 0xE0 to 0xEF                   */</span></span>
<span class="line">    <span class="token number">4u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">3u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">2u</span><span class="token punctuation">,</span> <span class="token number">0u</span><span class="token punctuation">,</span> <span class="token number">1u</span><span class="token punctuation">,</span> <span class="token number">0u</span>  <span class="token comment">/* 0xF0 to 0xFF                   */</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line">y <span class="token operator">=</span> OSUnMapTbl<span class="token punctuation">[</span>OSRdyGrp<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">x <span class="token operator">=</span> OSUnMapTbl<span class="token punctuation">[</span>OSRdyTbl<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">prio <span class="token operator">=</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> x<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-1-6-任务调度" tabindex="-1"><a class="header-anchor" href="#_3-1-6-任务调度"><span>3.1.6 任务调度</span></a></h2><ol><li>确定进入就绪态的任务中哪个优先级最高</li><li>任务切换</li></ol><p>任务调度所花的时间是常数，与所建任务数无关。调度过程属于临界区，需要关中断，防止被中断打断：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">void</span>  <span class="token function">OS_Sched</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/* 为关中断预留用于保存状态的局部变量 8?</span>
<span class="line">#if OS_CRITICAL_METHOD == 3u                           /* Allocate storage for CPU status register     */</span></span>
<span class="line">    OS_CPU_SR  cpu_sr <span class="token operator">=</span> <span class="token number">0u</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* 关中断，进入临界区 */</span></span>
<span class="line">    <span class="token function">OS_ENTER_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>OSIntNesting <span class="token operator">==</span> <span class="token number">0u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                          <span class="token comment">/* Schedule only if all ISRs done and ...       */</span></span>
<span class="line">        <span class="token comment">/* 只有所有嵌套中断都退出，才允许调度 */</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>OSLockNesting <span class="token operator">==</span> <span class="token number">0u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                     <span class="token comment">/* ... scheduler is not locked                  */</span></span>
<span class="line">            <span class="token comment">/* 调度器没有被锁定 */</span></span>
<span class="line">            <span class="token function">OS_SchedNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            OSTCBHighRdy <span class="token operator">=</span> OSTCBPrioTbl<span class="token punctuation">[</span>OSPrioHighRdy<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">/* 找到最高优先级的任务 */</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>OSPrioHighRdy <span class="token operator">!=</span> OSPrioCur<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token comment">/* No Ctx Sw if current task is highest rdy     */</span></span>
<span class="line">                <span class="token comment">/* 找到最高优先级任务不是当前任务 */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_TASK_PROFILE_EN <span class="token operator">&gt;</span> <span class="token number">0u</span></span></span></span>
<span class="line">                OSTCBHighRdy<span class="token operator">-&gt;</span>OSTCBCtxSwCtr<span class="token operator">++</span><span class="token punctuation">;</span>         <span class="token comment">/* Inc. # of context switches to this task      */</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line">                <span class="token comment">/* 任务切换计数器累加 */</span></span>
<span class="line">                OSCtxSwCtr<span class="token operator">++</span><span class="token punctuation">;</span>                          <span class="token comment">/* Increment context switch counter             */</span></span>
<span class="line">                <span class="token comment">/* 任务切换 */</span></span>
<span class="line">                <span class="token function">OS_TASK_SW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                          <span class="token comment">/* Perform a context switch                     */</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token comment">/* 开中断，退出临界区 */</span></span>
<span class="line">    <span class="token function">OS_EXIT_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-1-8-调度器上锁和解锁" tabindex="-1"><a class="header-anchor" href="#_3-1-8-调度器上锁和解锁"><span>3.1.8 调度器上锁和解锁</span></a></h2><p>禁止任务调度，使任务保持对 CPU 的控制权。实现原理：对全局变量锁定嵌套计数器 <code>OSLockNesting</code> 进行操作。该变量记录了被锁定的次数，允许嵌套深度 255 层。所谓加锁和解锁就是对该变量 +1 或 -1。</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line">*********************************************************************************************************</span>
<span class="line">*                                          PREVENT SCHEDULING</span>
<span class="line">*</span>
<span class="line">* Description: This function is used to prevent rescheduling to take place.  This allows your application</span>
<span class="line">*              to prevent context switches until you are ready to permit context switching.</span>
<span class="line">*</span>
<span class="line">* Arguments  : none</span>
<span class="line">*</span>
<span class="line">* Returns    : none</span>
<span class="line">*</span>
<span class="line">* Notes      : 1) You MUST invoke OSSchedLock() and OSSchedUnlock() in pair.  In other words, for every</span>
<span class="line">*                 call to OSSchedLock() you MUST have a call to OSSchedUnlock().</span>
<span class="line">*********************************************************************************************************</span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_SCHED_LOCK_EN <span class="token operator">&gt;</span> <span class="token number">0u</span></span></span></span>
<span class="line"><span class="token keyword">void</span>  <span class="token function">OSSchedLock</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_CRITICAL_METHOD <span class="token operator">==</span> <span class="token number">3u</span>                     </span><span class="token comment">/* Allocate storage for CPU status register           */</span></span></span>
<span class="line">    OS_CPU_SR  cpu_sr <span class="token operator">=</span> <span class="token number">0u</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>OSRunning <span class="token operator">==</span> OS_TRUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token comment">/* Make sure multitasking is running                  */</span></span>
<span class="line">        <span class="token comment">/* 多任务已经运行 */</span></span>
<span class="line">        <span class="token function">OS_ENTER_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 临界区 */</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>OSIntNesting <span class="token operator">==</span> <span class="token number">0u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">/* Can&#39;t call from an ISR                             */</span></span>
<span class="line">            <span class="token comment">/* 不允许在中断上下文中调用 */</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>OSLockNesting <span class="token operator">&lt;</span> <span class="token number">255u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token comment">/* Prevent OSLockNesting from wrapping back to 0      */</span></span>
<span class="line">                OSLockNesting<span class="token operator">++</span><span class="token punctuation">;</span>                 <span class="token comment">/* Increment lock nesting level                       */</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">OS_EXIT_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 临界区 */</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line">*********************************************************************************************************</span>
<span class="line">*                                          ENABLE SCHEDULING</span>
<span class="line">*</span>
<span class="line">* Description: This function is used to re-allow rescheduling.</span>
<span class="line">*</span>
<span class="line">* Arguments  : none</span>
<span class="line">*</span>
<span class="line">* Returns    : none</span>
<span class="line">*</span>
<span class="line">* Notes      : 1) You MUST invoke OSSchedLock() and OSSchedUnlock() in pair.  In other words, for every</span>
<span class="line">*                 call to OSSchedLock() you MUST have a call to OSSchedUnlock().</span>
<span class="line">*********************************************************************************************************</span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_SCHED_LOCK_EN <span class="token operator">&gt;</span> <span class="token number">0u</span></span></span></span>
<span class="line"><span class="token keyword">void</span>  <span class="token function">OSSchedUnlock</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_CRITICAL_METHOD <span class="token operator">==</span> <span class="token number">3u</span>                               </span><span class="token comment">/* Allocate storage for CPU status register */</span></span></span>
<span class="line">    OS_CPU_SR  cpu_sr <span class="token operator">=</span> <span class="token number">0u</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>OSRunning <span class="token operator">==</span> OS_TRUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token comment">/* Make sure multitasking is running        */</span></span>
<span class="line">        <span class="token function">OS_ENTER_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>OSLockNesting <span class="token operator">&gt;</span> <span class="token number">0u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                          <span class="token comment">/* Do not decrement if already 0            */</span></span>
<span class="line">            OSLockNesting<span class="token operator">--</span><span class="token punctuation">;</span>                               <span class="token comment">/* Decrement lock nesting level             */</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>OSLockNesting <span class="token operator">==</span> <span class="token number">0u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                     <span class="token comment">/* See if scheduler is enabled and ...      */</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>OSIntNesting <span class="token operator">==</span> <span class="token number">0u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token comment">/* ... not in an ISR                        */</span></span>
<span class="line">                    <span class="token function">OS_EXIT_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    <span class="token function">OS_Sched</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">/* See if a HPT is ready                    */</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">OS_EXIT_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">OS_EXIT_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">OS_EXIT_CRITICAL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当调度锁定计数器减为 0 时，还要重新调度，前提是调用者不是中断服务子程序。</p><h2 id="_3-1-9-空闲任务" tabindex="-1"><a class="header-anchor" href="#_3-1-9-空闲任务"><span>3.1.9 空闲任务</span></a></h2><p>没有其它任务进入就绪态时，该任务转入运行态。任务优先级永远为最低：<code>OS_LOWEST_PRIO</code>，永远不被挂起或删除。不停给一个 32-bit 计数器 +1：由于 <code>+1</code> 操作需要多条指令，因此需要开关中断。</p><h2 id="_3-1-10-统计任务" tabindex="-1"><a class="header-anchor" href="#_3-1-10-统计任务"><span>3.1.10 统计任务</span></a></h2><p>计算当前 CPU 利用率。</p><h2 id="_3-1-11-μc-os-ii-的初始化" tabindex="-1"><a class="header-anchor" href="#_3-1-11-μc-os-ii-的初始化"><span>3.1.11 μC/OS-II 的初始化</span></a></h2><p>调系统初始化函数 <code>OSInit()</code> 初始化所有变量和数据结构：</p><ul><li>建立空闲任务</li><li>建立统计任务</li><li>初始化空闲数据结构链表</li><li>初始化所有的变量和数据结构</li></ul><h2 id="_3-1-12-μc-os-ii-的启动" tabindex="-1"><a class="header-anchor" href="#_3-1-12-μc-os-ii-的启动"><span>3.1.12 μC/OS-II 的启动</span></a></h2><p>调用系统启动函数 <code>OSStart()</code> 实现。在启动前，应用程序需要至少建立一个任务：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">OSInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">/* OSTaskCreate() / OSTaskCreateExt() */</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">OSStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line">*********************************************************************************************************</span>
<span class="line">*                                          START MULTITASKING</span>
<span class="line">*</span>
<span class="line">* Description: This function is used to start the multitasking process which lets uC/OS-II manages the</span>
<span class="line">*              task that you have created.  Before you can call OSStart(), you MUST have called OSInit()</span>
<span class="line">*              and you MUST have created at least one task.</span>
<span class="line">*</span>
<span class="line">* Arguments  : none</span>
<span class="line">*</span>
<span class="line">* Returns    : none</span>
<span class="line">*</span>
<span class="line">* Note       : OSStartHighRdy() MUST:</span>
<span class="line">*                 a) Call OSTaskSwHook() then,</span>
<span class="line">*                 b) Set OSRunning to OS_TRUE.</span>
<span class="line">*                 c) Load the context of the task pointed to by OSTCBHighRdy.</span>
<span class="line">*                 d_ Execute the task.</span>
<span class="line">*********************************************************************************************************</span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span>  <span class="token function">OSStart</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>OSRunning <span class="token operator">==</span> OS_FALSE<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">OS_SchedNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token comment">/* Find highest priority&#39;s task priority number   */</span></span>
<span class="line">        OSPrioCur     <span class="token operator">=</span> OSPrioHighRdy<span class="token punctuation">;</span></span>
<span class="line">        OSTCBHighRdy  <span class="token operator">=</span> OSTCBPrioTbl<span class="token punctuation">[</span>OSPrioHighRdy<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">/* Point to highest priority task ready to run    */</span></span>
<span class="line">        OSTCBCur      <span class="token operator">=</span> OSTCBHighRdy<span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">OSStartHighRdy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">/* Execute target specific code to start task     */</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先找到优先级最高的就绪任务：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line">*********************************************************************************************************</span>
<span class="line">*                              FIND HIGHEST PRIORITY TASK READY TO RUN</span>
<span class="line">*</span>
<span class="line">* Description: This function is called by other uC/OS-II services to determine the highest priority task</span>
<span class="line">*              that is ready to run.  The global variable &#39;OSPrioHighRdy&#39; is changed accordingly.</span>
<span class="line">*</span>
<span class="line">* Arguments  : none</span>
<span class="line">*</span>
<span class="line">* Returns    : none</span>
<span class="line">*</span>
<span class="line">* Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.</span>
<span class="line">*              2) Interrupts are assumed to be disabled when this function is called.</span>
<span class="line">*********************************************************************************************************</span>
<span class="line">*/</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">static</span>  <span class="token keyword">void</span>  <span class="token function">OS_SchedNew</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">OS_LOWEST_PRIO <span class="token operator">&lt;=</span> <span class="token number">63u</span>                        </span><span class="token comment">/* See if we support up to 64 tasks                   */</span></span></span>
<span class="line">    INT8U   y<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    y             <span class="token operator">=</span> OSUnMapTbl<span class="token punctuation">[</span>OSRdyGrp<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    OSPrioHighRdy <span class="token operator">=</span> <span class="token punctuation">(</span>INT8U<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">&lt;&lt;</span> <span class="token number">3u</span><span class="token punctuation">)</span> <span class="token operator">+</span> OSUnMapTbl<span class="token punctuation">[</span>OSRdyTbl<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span>                                            <span class="token comment">/* We support up to 256 tasks                         */</span></span></span>
<span class="line">    INT8U     y<span class="token punctuation">;</span></span>
<span class="line">    OS_PRIO  <span class="token operator">*</span>ptbl<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>OSRdyGrp <span class="token operator">&amp;</span> <span class="token number">0xFFu</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        y <span class="token operator">=</span> OSUnMapTbl<span class="token punctuation">[</span>OSRdyGrp <span class="token operator">&amp;</span> <span class="token number">0xFFu</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        y <span class="token operator">=</span> OSUnMapTbl<span class="token punctuation">[</span><span class="token punctuation">(</span>OS_PRIO<span class="token punctuation">)</span><span class="token punctuation">(</span>OSRdyGrp <span class="token operator">&gt;&gt;</span> <span class="token number">8u</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFFu</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">8u</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    ptbl <span class="token operator">=</span> <span class="token operator">&amp;</span>OSRdyTbl<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>ptbl <span class="token operator">&amp;</span> <span class="token number">0xFFu</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0u</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        OSPrioHighRdy <span class="token operator">=</span> <span class="token punctuation">(</span>INT8U<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">&lt;&lt;</span> <span class="token number">4u</span><span class="token punctuation">)</span> <span class="token operator">+</span> OSUnMapTbl<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">*</span>ptbl <span class="token operator">&amp;</span> <span class="token number">0xFFu</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        OSPrioHighRdy <span class="token operator">=</span> <span class="token punctuation">(</span>INT8U<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">&lt;&lt;</span> <span class="token number">4u</span><span class="token punctuation">)</span> <span class="token operator">+</span> OSUnMapTbl<span class="token punctuation">[</span><span class="token punctuation">(</span>OS_PRIO<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span>ptbl <span class="token operator">&gt;&gt;</span> <span class="token number">8u</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFFu</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">8u</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后调 <code>OSStartHighRdy()</code> 运行就绪的最高优先级任务（由汇编实现，移植需要改写）：</p><ul><li>将任务栈保存的 CPU 现场 pop 进 CPU 中</li><li>执行一条中断返回指令，将 PC 弹出到 CPU 中继续执行</li><li>永不返回 <code>OSStart()</code></li></ul><p>接下来多任务调度就开始了。</p>`,57)]))}const i=s(t,[["render",c],["__file","Chapter 3.1 - 核心任务管理.html.vue"]]),u=JSON.parse('{"path":"/uc-os-ii-code-notes/Chapter%203.1%20-%20%E6%A0%B8%E5%BF%83%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86.html","title":"Chapter 3.1 - 核心任务管理","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"3.1.1 临界区的处理","slug":"_3-1-1-临界区的处理","link":"#_3-1-1-临界区的处理","children":[]},{"level":2,"title":"3.1.2 任务的形式","slug":"_3-1-2-任务的形式","link":"#_3-1-2-任务的形式","children":[]},{"level":2,"title":"3.1.3 任务的状态","slug":"_3-1-3-任务的状态","link":"#_3-1-3-任务的状态","children":[]},{"level":2,"title":"3.1.4 任务控制块","slug":"_3-1-4-任务控制块","link":"#_3-1-4-任务控制块","children":[]},{"level":2,"title":"3.1.5 就绪表","slug":"_3-1-5-就绪表","link":"#_3-1-5-就绪表","children":[]},{"level":2,"title":"3.1.6 任务调度","slug":"_3-1-6-任务调度","link":"#_3-1-6-任务调度","children":[]},{"level":2,"title":"3.1.8 调度器上锁和解锁","slug":"_3-1-8-调度器上锁和解锁","link":"#_3-1-8-调度器上锁和解锁","children":[]},{"level":2,"title":"3.1.9 空闲任务","slug":"_3-1-9-空闲任务","link":"#_3-1-9-空闲任务","children":[]},{"level":2,"title":"3.1.10 统计任务","slug":"_3-1-10-统计任务","link":"#_3-1-10-统计任务","children":[]},{"level":2,"title":"3.1.11 μC/OS-II 的初始化","slug":"_3-1-11-μc-os-ii-的初始化","link":"#_3-1-11-μc-os-ii-的初始化","children":[]},{"level":2,"title":"3.1.12 μC/OS-II 的启动","slug":"_3-1-12-μc-os-ii-的启动","link":"#_3-1-12-μc-os-ii-的启动","children":[]}],"git":{},"filePathRelative":"uc-os-ii-code-notes/Chapter 3.1 - 核心任务管理.md"}');export{i as comp,u as data};
