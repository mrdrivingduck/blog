import{_ as n,c as a,a as e,o as l}from"./app-7eKjwDat.js";const t={};function o(p,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="network-v2ray" tabindex="-1"><a class="header-anchor" href="#network-v2ray"><span>Network - V2Ray</span></a></h1><p>Created by : Mr Dk.</p><p>2019 / 05 / 09 0:28</p><p>Nanjing, Jiangsu, China</p><hr><h2 id="about" tabindex="-1"><a class="header-anchor" href="#about"><span>About</span></a></h2><blockquote><p>Project V 是一个工具集合，它可以帮助你打造专属的基础通信网络。Project V 的核心工具称为 <strong>V2Ray</strong>，其主要负责网络协议和功能的实现，与其它 Project V 通信。V2Ray 可以单独运行，也可以和其它工具配合，以提供简便的操作流程。</p></blockquote><p>V2Ray 支持以下协议：</p><ul><li><a href="https://www.v2ray.com/chapter_02/protocols/blackhole.html" target="_blank" rel="noopener noreferrer">Blackhole</a></li><li><a href="https://www.v2ray.com/chapter_02/protocols/dokodemo.html" target="_blank" rel="noopener noreferrer">Dokodemo-door</a></li><li><a href="https://www.v2ray.com/chapter_02/protocols/freedom.html" target="_blank" rel="noopener noreferrer">Freedom</a></li><li><a href="https://www.v2ray.com/chapter_02/protocols/http.html" target="_blank" rel="noopener noreferrer">HTTP</a></li><li><a href="https://www.v2ray.com/chapter_02/protocols/mtproto.html" target="_blank" rel="noopener noreferrer">MTProto</a></li><li><a href="https://www.v2ray.com/chapter_02/protocols/shadowsocks.html" target="_blank" rel="noopener noreferrer">Shadowsocks</a></li><li><a href="https://www.v2ray.com/chapter_02/protocols/socks.html" target="_blank" rel="noopener noreferrer">Socks</a></li><li><a href="https://www.v2ray.com/chapter_02/protocols/vmess.html" target="_blank" rel="noopener noreferrer">VMess</a></li></ul><p>Link:</p><ul><li>https://www.v2ray.com/</li><li>https://github.com/v2ray/v2ray-core</li></ul><hr><h2 id="vmess" tabindex="-1"><a class="header-anchor" href="#vmess"><span>VMess</span></a></h2><p><strong>VMess</strong> 是 V2Ray 原创的加密通讯协议：</p><ul><li>基于 TCP，所有数据使用 TCP 传输</li><li>用户 ID —— UUID 作为令牌</li></ul><hr><h2 id="server-configuration" tabindex="-1"><a class="header-anchor" href="#server-configuration"><span>Server Configuration</span></a></h2><p>可以在已有的 VPS 上直接配置 V2Ray Server。</p><p>下载 V2Ray 的安装脚本：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ wget https://install.direct/go.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>下载完成后，可能需要修改脚本的权限：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ sudo chmod 755 ./go.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行安装脚本：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ sudo ./go.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>脚本会从 V2Ray 的官方仓库上下载并安装。重新执行安装脚本可以进行更新。利用以下命令可以分别启动、停止、重启 V2Ray Server：</p><div class="language-console line-numbers-mode" data-highlighter="prismjs" data-ext="console" data-title="console"><pre><code><span class="line">$ sudo systemctl start v2ray</span>
<span class="line">$ sudo systemctl stop v2ray</span>
<span class="line">$ sudo systemctl restart v2ray</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完成后，配置文件位于 <code>/etc/v2ray/config.json</code>。若使用 VMess 协议，则基本不需要修改：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;inbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">15875</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vmess&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;clients&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e2edb465-a814-4124-bb33-1fb4991194df&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token property">&quot;alterId&quot;</span><span class="token operator">:</span> <span class="token number">64</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;outbounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;freedom&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;protocol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;blackhole&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;blocked&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;routing&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;field&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;geoip:private&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;outboundTag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;blocked&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="disguise" tabindex="-1"><a class="header-anchor" href="#disguise"><span>Disguise</span></a></h2><p>默认配置下，VMess 的转发流量是明文的，容易被 GFW 识别导致服务器 IP 地址被封禁。V2Ray 提供了流量伪装模式，在服务器上运行一个 Web server，并使用 TLS 对流量进行加密；在服务器端，再将 Web server 的流量发送到 V2Ray 的本地端口。以上配置通过 <a href="https://github.com/233boy/v2ray/tree/master" target="_blank" rel="noopener noreferrer">最好用的 V2Ray 一键安装脚本 &amp; 管理脚本</a> 进行验证并取得成功。</p><p>除了上述脚本，实现伪装需要以下额外需求：</p><ul><li>一台境外服务器</li><li>一个域名</li></ul><p>只要能满足上述需求，直接按照脚本傻瓜式安装即可。大致过程是在服务器上运行一个 Web server (如 <a href="https://caddyserver.com/" target="_blank" rel="noopener noreferrer"><em>Caddy</em></a>)，并指定一个路由用于 V2Ray 的加密通信。使用域名到 <a href="https://letsencrypt.org/" target="_blank" rel="noopener noreferrer">Let&#39;s Encrypt</a> 上申请一个 SSL/TLS 证书 - 这样，境内客户端与境外服务器之间的通信被伪装为 websocket，并由 TLS 进行加密。然后 <em>Caddy</em> 将指定路由上的流量转到 V2Ray 的端口。<em>Caddy</em> 的配置文件看起来是这样的：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;xxxdomain.cn&gt; {</span>
<span class="line">    gzip</span>
<span class="line">timeouts none</span>
<span class="line">    proxy / https://liyafly.com {</span>
<span class="line">        except &lt;/routepath&gt;</span>
<span class="line">    }</span>
<span class="line">    proxy &lt;/routepath&gt; 127.0.0.1:32057 {</span>
<span class="line">        without &lt;/routepath&gt;</span>
<span class="line">        websocket</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将所有除 <code>/routepath</code> 以外路由的流量全部转发到 <code>https://liyafly.com</code>，只将 <code>/routepath</code> 路由的流量转发到 V2Ray 的端口上。用于伪装的域名为 <code>xxxdomain.cn</code>，这个域名应该是在申请 SSL/TLS 证书的时候会被用到。</p><p>然后在服务器上同时启动 V2Ray 服务和 Caddy 服务即可。客户端软件可以直接扫描服务端生成的配置二维码进行自动配置。</p><h2 id="client-configuration" tabindex="-1"><a class="header-anchor" href="#client-configuration"><span>Client Configuration</span></a></h2><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h3><p>下载 <a href="https://github.com/2dust/v2rayN" target="_blank" rel="noopener noreferrer">v2rayN-Core</a> (图形界面，且带有 V2Ray 核心程序)，解压到上述目录.打开 GUI，进行服务器的配置 (需要与 V2Ray Server 的配置匹配)：</p><ul><li>IP Address</li><li>port</li><li>UUID</li><li>alter ID</li><li>加密方式</li><li>传输协议（默认 TCP）</li><li>伪装类型（不清楚可保持默认）</li></ul><p>接下来点击 <code>启用系统代理</code> 或 <code>Enable HTTP Proxy</code>。在 <code>系统代理模式</code> 或 <code>HTTP Proxy Mode</code> 中选择 <code>PAC 模式</code> / <code>PAC Mode</code> (可能需要重启客户端服务) 即可。</p><h3 id="macos" tabindex="-1"><a class="header-anchor" href="#macos"><span>macOS</span></a></h3><p>下载 <a href="https://github.com/Cenmrev/V2RayX" target="_blank" rel="noopener noreferrer">V2RayX</a></p><h3 id="ios" tabindex="-1"><a class="header-anchor" href="#ios"><span>iOS</span></a></h3><p>得到一个 <a href="https://shadowsockshelp.github.io/ios/" target="_blank" rel="noopener noreferrer">美区 App Store 账户</a>。在个人设置的 <code>iTunes &amp; App Store</code> 中，注销个人 Apple ID，并使用网页上给定的 Apple ID 登录，切换到 App Store 美国区 (中国区已下架类似功能 APP)。</p><p>在 App Store 中搜索 <em>Shadowrocket</em>，由于该账号已购买过该 APP，再次下载不需付费。下载完成后，打开 Shadowrocket，确保安装成功。然后退出该 Apple ID，登录回个人的 Apple ID。</p><p>在 Shadowrocket 中：</p><ul><li>可以直接扫二维码 / URL 添加 Server 配置</li><li>也可以手动添加 Server 配置 (需要与 Server 的配置相匹配)</li></ul><p>Shadowrocket 支持的协议有：</p><ul><li>Shadowsocks</li><li>ShadowsocksR</li><li>VMess (暂不支持 KCP)</li><li>Subscribe (用 URL 自动导入所有 Server 配置 ​)</li><li>Socks5</li><li>Socks5 Over TLS</li><li>HTTP</li><li>HTTPS</li><li>Lua</li></ul><h3 id="linux-ubuntu" tabindex="-1"><a class="header-anchor" href="#linux-ubuntu"><span>Linux (Ubuntu)</span></a></h3><p>使用 <a href="https://github.com/jiangxufeng/v2rayL" target="_blank" rel="noopener noreferrer">V2RayL</a>。</p><hr>`,53)]))}const r=n(t,[["render",o],["__file","Network V2Ray.html.vue"]]),c=JSON.parse('{"path":"/notes/Network/Network%20V2Ray.html","title":"Network - V2Ray","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"About","slug":"about","link":"#about","children":[]},{"level":2,"title":"VMess","slug":"vmess","link":"#vmess","children":[]},{"level":2,"title":"Server Configuration","slug":"server-configuration","link":"#server-configuration","children":[]},{"level":2,"title":"Disguise","slug":"disguise","link":"#disguise","children":[]},{"level":2,"title":"Client Configuration","slug":"client-configuration","link":"#client-configuration","children":[{"level":3,"title":"Windows","slug":"windows","link":"#windows","children":[]},{"level":3,"title":"macOS","slug":"macos","link":"#macos","children":[]},{"level":3,"title":"iOS","slug":"ios","link":"#ios","children":[]},{"level":3,"title":"Linux (Ubuntu)","slug":"linux-ubuntu","link":"#linux-ubuntu","children":[]}]}],"git":{},"filePathRelative":"notes/Network/Network V2Ray.md"}');export{r as comp,c as data};
