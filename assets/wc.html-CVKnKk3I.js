import{_ as s,c as a,a as e,o as l}from"./app-7eKjwDat.js";const i={};function p(t,n){return l(),a("div",null,n[0]||(n[0]=[e(`<h1 id="wc" tabindex="-1"><a class="header-anchor" href="#wc"><span>wc</span></a></h1><p>Created by : Mr Dk.</p><p>2022 / 11 / 25 0:19</p><p>Hangzhou, Zhejiang, China</p><hr><h2 id="background" tabindex="-1"><a class="header-anchor" href="#background"><span>Background</span></a></h2><p><code>wc</code> 用于打印每个文件的行数、单词数和字节数。</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">wc</span> <span class="token parameter variable">--help</span></span>
<span class="line">Usage: <span class="token function">wc</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>FILE<span class="token punctuation">]</span><span class="token punctuation">..</span>.</span>
<span class="line">  or:  <span class="token function">wc</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. --files0-from<span class="token operator">=</span>F</span>
<span class="line">Print newline, word, and byte counts <span class="token keyword">for</span> each FILE, and a total line <span class="token keyword">if</span></span>
<span class="line"><span class="token function">more</span> than one FILE is specified.  A word is a non-zero-length sequence of</span>
<span class="line">characters delimited by white space.</span>
<span class="line"></span>
<span class="line">With no FILE, or when FILE is -, <span class="token builtin class-name">read</span> standard input.</span>
<span class="line"></span>
<span class="line">The options below may be used to <span class="token keyword">select</span> <span class="token function">which</span> counts are printed, always <span class="token keyword">in</span></span>
<span class="line">the following order: newline, word, character, byte, maximum line length.</span>
<span class="line">  -c, <span class="token parameter variable">--bytes</span>            print the byte counts</span>
<span class="line">  -m, <span class="token parameter variable">--chars</span>            print the character counts</span>
<span class="line">  -l, <span class="token parameter variable">--lines</span>            print the newline counts</span>
<span class="line">      --files0-from<span class="token operator">=</span>F    <span class="token builtin class-name">read</span> input from the files specified by</span>
<span class="line">                           NUL-terminated names <span class="token keyword">in</span> <span class="token function">file</span> F<span class="token punctuation">;</span></span>
<span class="line">                           If F is - <span class="token keyword">then</span> <span class="token builtin class-name">read</span> names from standard input</span>
<span class="line">  -L, --max-line-length  print the maximum display width</span>
<span class="line">  -w, <span class="token parameter variable">--words</span>            print the word counts</span>
<span class="line">      <span class="token parameter variable">--help</span>     display this <span class="token builtin class-name">help</span> and <span class="token builtin class-name">exit</span></span>
<span class="line">      <span class="token parameter variable">--version</span>  output version information and <span class="token builtin class-name">exit</span></span>
<span class="line"></span>
<span class="line">GNU coreutils online help: <span class="token operator">&lt;</span>https://www.gnu.org/software/coreutils/<span class="token operator">&gt;</span></span>
<span class="line">Full documentation at: <span class="token operator">&lt;</span>https://www.gnu.org/software/coreutils/wc<span class="token operator">&gt;</span></span>
<span class="line">or available locally via: info <span class="token string">&#39;(coreutils) wc invocation&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如示例所示，文件中有两行、6 个单词、23 个字节：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">cat</span> example.txt</span>
<span class="line">aaa bb cccc</span>
<span class="line"><span class="token function">dd</span> e fffff</span>
<span class="line"></span>
<span class="line">$ <span class="token function">wc</span> example.txt</span>
<span class="line"> <span class="token number">2</span>  <span class="token number">6</span> <span class="token number">23</span> example.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 <code>-l</code> / <code>-w</code> / <code>-c</code> 参数可以分别打印上述的行数、单词数、字节数：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">wc</span> <span class="token parameter variable">-l</span> example.txt</span>
<span class="line"><span class="token number">2</span> example.txt</span>
<span class="line"></span>
<span class="line">$ <span class="token function">wc</span> <span class="token parameter variable">-w</span> example.txt</span>
<span class="line"><span class="token number">6</span> example.txt</span>
<span class="line"></span>
<span class="line">$ <span class="token function">wc</span> <span class="token parameter variable">-c</span> example.txt</span>
<span class="line"><span class="token number">23</span> example.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-m</code> 选项用于打印 <strong>字符数</strong>。</p><p><code>-l</code> 选项可以打印长度最长的行的长度：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">wc</span> <span class="token parameter variable">-L</span> example.txt</span>
<span class="line"><span class="token number">11</span> example.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p><a href="https://linux.die.net/man/1/wc" target="_blank" rel="noopener noreferrer">wc(1) - Linux man page</a></p><p><a href="https://www.geeksforgeeks.org/wc-command-linux-examples/" target="_blank" rel="noopener noreferrer">wc command in Linux with examples</a></p>`,19)]))}const r=s(i,[["render",p],["__file","wc.html.vue"]]),o=JSON.parse('{"path":"/notes/Linux/wc.html","title":"wc","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Background","slug":"background","link":"#background","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{},"filePathRelative":"notes/Linux/wc.md"}');export{r as comp,o as data};
