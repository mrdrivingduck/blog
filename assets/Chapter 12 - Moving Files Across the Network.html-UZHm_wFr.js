import{_ as e,c as a,a as n,o as r}from"./app-7eKjwDat.js";const t={};function i(l,s){return r(),a("div",null,s[0]||(s[0]=[n(`<h1 id="chapter-12-moving-files-across-the-network" tabindex="-1"><a class="header-anchor" href="#chapter-12-moving-files-across-the-network"><span>Chapter 12 - Moving Files Across the Network</span></a></h1><p>Created by : Mr Dk.</p><p>2019 / 07 / 12 14:33</p><p>@NUAA, Nanjing, Jiangsu, China</p><hr><p>除了 <code>scp</code> 和 <code>sftp</code> 以外的文件共享方式。</p><h2 id="_12-1-quick-copy" tabindex="-1"><a class="header-anchor" href="#_12-1-quick-copy"><span>12.1 Quick Copy</span></a></h2><p>如果只是为了快速，到包含想拷贝文件的目录中，执行：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">python <span class="token parameter variable">-m</span> SimpleHTTPServer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在该目录下开启了一个 web 服务器，默认使用 <code>8000</code> 端口。远程机器用浏览器访问该机器的 <code>8000</code> 端口即可访问该目录。</p><h2 id="_12-2-rsync" tabindex="-1"><a class="header-anchor" href="#_12-2-rsync"><span>12.2 rsync</span></a></h2><p>使用 <code>scp -r</code> 可能不会获得某个远程目录的完整拷贝。在 Linux 中，rsync 是一个专用的同步系统。</p><h3 id="_12-2-1-rsync-basics" tabindex="-1"><a class="header-anchor" href="#_12-2-1-rsync-basics"><span>12.2.1 rsync Basics</span></a></h3><p>为了能够工作，rsync 必须运行在两台机器上同时运行，还需要两台机器能够互相访问，比如通过 SSH。现在的系统中，rsync 默认使用 SSH 来连接远程主机：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">rsync</span> <span class="token operator">&lt;</span>file<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token operator">&lt;</span>file<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>. user@host:<span class="token operator">&lt;</span>dest_dir<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>rsync 默认只拷贝文件。为了拷贝目录中的完整信息，包括符号链接、权限、设备等，使用 <code>-a</code> 选项：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">rsync</span> <span class="token parameter variable">-a</span> <span class="token operator">&lt;</span>dir<span class="token operator">&gt;</span> user@host:<span class="token operator">&lt;</span>dest_dir<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>为了防止出错，可以加入 <code>-n</code> 选项，进行一次 dry run 模拟。<code>-v</code> 选项加入了输出信息。</p><h3 id="_12-2-2-making-exact-copies-of-a-directory-structure" tabindex="-1"><a class="header-anchor" href="#_12-2-2-making-exact-copies-of-a-directory-structure"><span>12.2.2 Making Exact Copies of a Directory Structure</span></a></h3><p>默认情况下，rsync 不关心目标目录中的已有文件。假设目标目录已有文件，将会与拷贝文件共存。为了在拷贝过程中保持与源目录完全相同，使用 <code>--delete</code> 选项将目标目录中的已有文件删除：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">rsync</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">--delete</span> <span class="token operator">&lt;</span>dir<span class="token operator">&gt;</span> user@host:<span class="token operator">&lt;</span>dest_dir<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_12-2-3-using-the-trailing-slash" tabindex="-1"><a class="header-anchor" href="#_12-2-3-using-the-trailing-slash"><span>12.2.3 Using the Trailing Slash</span></a></h3><p>在 rsync 中拷贝目录时需要格外小心：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">rsync</span> <span class="token parameter variable">-a</span> <span class="token function">dir</span> user@host:<span class="token operator">&lt;</span>dest_dir<span class="token operator">&gt;</span></span>
<span class="line"><span class="token function">rsync</span> <span class="token parameter variable">-a</span> dir/ user@host:<span class="token operator">&lt;</span>dest_dir<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>两条命令的行为是不一样的：</p><ul><li>第一条命令的行为是拷贝目录 <ul><li>如果 <code>dir</code> 下有 <code>dir/a</code> 文件</li><li>结果应当是 <code>/dest_dir/dir/a</code></li></ul></li><li>第二条命令的行为是拷贝 <code>dir</code> 路径下的所有文件 <ul><li>结果应当是 <code>/dest_dir/a</code></li></ul></li></ul><h3 id="_12-2-4-excluding-files-and-directories" tabindex="-1"><a class="header-anchor" href="#_12-2-4-excluding-files-and-directories"><span>12.2.4 Excluding Files and Directories</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">rsync</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span>.git <span class="token operator">&lt;</span>dir<span class="token operator">&gt;</span> user@host:<span class="token operator">&lt;</span>dest_dir<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>--exclude</code> 接受的是 pattern，因此会忽略所有的 <code>.git</code>。如果只是想忽略某一个 <code>.git</code>，就需要使用绝对路径：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">rsync</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/src/.git <span class="token operator">&lt;</span>dir<span class="token operator">&gt;</span> user@host:<span class="token operator">&lt;</span>dest_dir<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>/src/.git</code> 中的第一个 <code>/</code> 并不是根目录，而是传输的基目录。</p><h3 id="_12-2-5-transfer-integrity-safeguards-and-verbose-modes" tabindex="-1"><a class="header-anchor" href="#_12-2-5-transfer-integrity-safeguards-and-verbose-modes"><span>12.2.5 Transfer Integrity, Safeguards, and Verbose Modes</span></a></h3><p>为了加速操作，rsync 使用快速检查来决定传输的文件是否已经在目标路径下：基于 <strong>文件大小</strong> + <strong>最后修改日期</strong> 的快速判断。第一次使用 rsync 时，由于所有文件都不存在，因此 rsync 会传输所有文件。如果文件已经存在，rsync 则不会再次传输。对于不同步的文件，rsync 将自动覆盖。</p><ul><li><code>--checksum</code> / <code>-c</code>：计算文件的校验和，判断两个文件是否一致，需要额外占用 I/O 和 CPU，但对于敏感数据是值得的</li><li><code>--ignore-existing</code>：不覆盖目标路径中的已有文件，忽略</li><li><code>--backup</code> / <code>-b</code>：不覆盖目标路径中的已有文件，在传输文件前，先将已有文件重命名为 <code>~</code> 后缀</li><li><code>--suffix=&lt;...&gt;</code>：修改 <code>--backup</code> 选项的重命名后缀</li><li><code>--update</code> / <code>-u</code>：如果已有文件的修改日期比源文件晚，则禁止覆盖</li></ul><h3 id="_12-2-6-compression" tabindex="-1"><a class="header-anchor" href="#_12-2-6-compression"><span>12.2.6 Compression</span></a></h3><p>在传输之间压缩数据：<code>-z</code> 选项：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">rsync</span> <span class="token parameter variable">-az</span> <span class="token operator">&lt;</span>dir<span class="token operator">&gt;</span> user@host:<span class="token operator">&lt;</span>dest_dir<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>对于数据量较大，或者网络延时较高的情况，用 <code>-z</code> 可以提升性能。但是对于高速局域网来说，没有必要花费额外的 CPU 时间来进行压缩 / 解压缩。</p><h3 id="_12-2-7-limiting-bandwidth" tabindex="-1"><a class="header-anchor" href="#_12-2-7-limiting-bandwidth"><span>12.2.7 Limiting Bandwidth</span></a></h3><p>限制带宽为 <code>10000</code> Kpbs：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">rsync</span> <span class="token parameter variable">--bwlimit</span><span class="token operator">=</span><span class="token number">10000</span> <span class="token parameter variable">-a</span> <span class="token operator">&lt;</span>dir<span class="token operator">&gt;</span> user@host:<span class="token operator">&lt;</span>dest_dir<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_12-2-8-transferring-files-to-your-computer" tabindex="-1"><a class="header-anchor" href="#_12-2-8-transferring-files-to-your-computer"><span>12.2.8 Transferring Files to Your Computer</span></a></h3><p>与 <code>scp</code> 类似，可以双向拷贝：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">rsync</span> <span class="token parameter variable">-a</span> user@host:<span class="token operator">&lt;</span>src_dir<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>dest_dir<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_12-2-9-further-rsync-topics" tabindex="-1"><a class="header-anchor" href="#_12-2-9-further-rsync-topics"><span>12.2.9 Further rsync Topics</span></a></h3><p>可以使用 <code>rsync --delete</code> 周期性地同步文件系统。</p>`,46)]))}const c=e(t,[["render",i],["__file","Chapter 12 - Moving Files Across the Network.html.vue"]]),p=JSON.parse('{"path":"/how-linux-works-notes/Chapter%2012%20-%20Moving%20Files%20Across%20the%20Network.html","title":"Chapter 12 - Moving Files Across the Network","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"12.1 Quick Copy","slug":"_12-1-quick-copy","link":"#_12-1-quick-copy","children":[]},{"level":2,"title":"12.2 rsync","slug":"_12-2-rsync","link":"#_12-2-rsync","children":[{"level":3,"title":"12.2.1 rsync Basics","slug":"_12-2-1-rsync-basics","link":"#_12-2-1-rsync-basics","children":[]},{"level":3,"title":"12.2.2 Making Exact Copies of a Directory Structure","slug":"_12-2-2-making-exact-copies-of-a-directory-structure","link":"#_12-2-2-making-exact-copies-of-a-directory-structure","children":[]},{"level":3,"title":"12.2.3 Using the Trailing Slash","slug":"_12-2-3-using-the-trailing-slash","link":"#_12-2-3-using-the-trailing-slash","children":[]},{"level":3,"title":"12.2.4 Excluding Files and Directories","slug":"_12-2-4-excluding-files-and-directories","link":"#_12-2-4-excluding-files-and-directories","children":[]},{"level":3,"title":"12.2.5 Transfer Integrity, Safeguards, and Verbose Modes","slug":"_12-2-5-transfer-integrity-safeguards-and-verbose-modes","link":"#_12-2-5-transfer-integrity-safeguards-and-verbose-modes","children":[]},{"level":3,"title":"12.2.6 Compression","slug":"_12-2-6-compression","link":"#_12-2-6-compression","children":[]},{"level":3,"title":"12.2.7 Limiting Bandwidth","slug":"_12-2-7-limiting-bandwidth","link":"#_12-2-7-limiting-bandwidth","children":[]},{"level":3,"title":"12.2.8 Transferring Files to Your Computer","slug":"_12-2-8-transferring-files-to-your-computer","link":"#_12-2-8-transferring-files-to-your-computer","children":[]},{"level":3,"title":"12.2.9 Further rsync Topics","slug":"_12-2-9-further-rsync-topics","link":"#_12-2-9-further-rsync-topics","children":[]}]}],"git":{},"filePathRelative":"how-linux-works-notes/Chapter 12 - Moving Files Across the Network.md"}');export{c as comp,p as data};
