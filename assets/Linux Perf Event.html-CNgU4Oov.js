import{_ as a,c as s,a as e,o as t}from"./app-7eKjwDat.js";const p={};function i(c,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="linux-performance-perf-event" tabindex="-1"><a class="header-anchor" href="#linux-performance-perf-event"><span>Linux Performance - Perf Event</span></a></h1><p>Created by: Mr Dk.</p><p>2023 / 09 / 18 12:55 💣</p><p>Hangzhou, Zhejiang, China</p><hr><h2 id="background" tabindex="-1"><a class="header-anchor" href="#background"><span>Background</span></a></h2><p>Linux 内核提供 <code>perf_event</code> 子系统，其对应的前端工具被称为 <code>perf</code>。这是一个强大的性能剖析工具，跟随内核版本被不断更新、加强。<code>perf</code> 利用了 Linux 内核中的大量性能计数器，支持对某个特定线程/进程、每个特定 CPU、每种事件单独计数；也利用了 <a href="https://www.kernel.org/doc/Documentation/trace/tracepoints.txt" target="_blank" rel="noopener noreferrer">Tracepoints</a>，即内核代码中特定位置的钩子（Hook），可以执行动态注册的函数（Probe）。</p><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events"><span>Events</span></a></h2><p><code>perf</code> 支持对一系列可衡量的事件进行观测，从中可以洞悉程序的热点代码和性能问题。这些事件的来源有：</p><ul><li>Software Event：来自于 Linux 内核代码中的计数器，比如上下文切换次数</li><li>PMU (Performance Monitoring Unit) Hardware Event：每种处理器内的性能计数器，比如 L1 缓存 miss 次数</li><li>Hardware Cache Event：不同 CPU 的共性性能指标，可能会映射到不同 CPU 的不同硬件计数器上，或干脆不可用</li><li>Tracepoint Event</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ perf list</span>
<span class="line"></span>
<span class="line">List of pre-defined events <span class="token punctuation">(</span>to be used <span class="token keyword">in</span> -e<span class="token punctuation">)</span>:</span>
<span class="line"></span>
<span class="line">  branch-misses                                      <span class="token punctuation">[</span>Hardware event<span class="token punctuation">]</span></span>
<span class="line">  bus-cycles                                         <span class="token punctuation">[</span>Hardware event<span class="token punctuation">]</span></span>
<span class="line">  cache-misses                                       <span class="token punctuation">[</span>Hardware event<span class="token punctuation">]</span></span>
<span class="line">  cache-references                                   <span class="token punctuation">[</span>Hardware event<span class="token punctuation">]</span></span>
<span class="line">  cpu-cycles OR cycles                               <span class="token punctuation">[</span>Hardware event<span class="token punctuation">]</span></span>
<span class="line">  instructions                                       <span class="token punctuation">[</span>Hardware event<span class="token punctuation">]</span></span>
<span class="line">  stalled-cycles-backend OR idle-cycles-backend      <span class="token punctuation">[</span>Hardware event<span class="token punctuation">]</span></span>
<span class="line">  stalled-cycles-frontend OR idle-cycles-frontend    <span class="token punctuation">[</span>Hardware event<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">  alignment-faults                                   <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line">  bpf-output                                         <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line">  context-switches OR cs                             <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line">  cpu-clock                                          <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line">  cpu-migrations OR migrations                       <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line">  dummy                                              <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line">  emulation-faults                                   <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line">  major-faults                                       <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line">  minor-faults                                       <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line">  page-faults OR faults                              <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line">  task-clock                                         <span class="token punctuation">[</span>Software event<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">  duration_time                                      <span class="token punctuation">[</span>Tool event<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">  L1-dcache-load-misses                              <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  L1-dcache-loads                                    <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  L1-icache-load-misses                              <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  L1-icache-loads                                    <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  LLC-load-misses                                    <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  LLC-loads                                          <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  branch-load-misses                                 <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  branch-loads                                       <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  dTLB-load-misses                                   <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  dTLB-loads                                         <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  iTLB-load-misses                                   <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line">  iTLB-loads                                         <span class="token punctuation">[</span>Hardware cache event<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">  ali_drw_21000/chi_rxdat/                           <span class="token punctuation">[</span>Kernel PMU event<span class="token punctuation">]</span></span>
<span class="line">  ali_drw_21000/chi_rxrsp/                           <span class="token punctuation">[</span>Kernel PMU event<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p><a href="https://perf.wiki.kernel.org/index.php/Main_Page" target="_blank" rel="noopener noreferrer">Kernel Wiki - perf: Linux profiling with performance counters</a></p><p><a href="https://perf.wiki.kernel.org/index.php/Tutorial" target="_blank" rel="noopener noreferrer">Tutorial - Linux kernel profiling with perf</a></p>`,14)]))}const o=a(p,[["render",i],["__file","Linux Perf Event.html.vue"]]),r=JSON.parse('{"path":"/notes/Performance/Linux%20Perf%20Event.html","title":"Linux Performance - Perf Event","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Background","slug":"background","link":"#background","children":[]},{"level":2,"title":"Events","slug":"events","link":"#events","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{},"filePathRelative":"notes/Performance/Linux Perf Event.md"}');export{o as comp,r as data};
